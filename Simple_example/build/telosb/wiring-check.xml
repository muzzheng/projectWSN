<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="75:SimpleEerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6ccaf867a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6ccaf37d30"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6ccaf37d30"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6ccaf33c38"/></to>
    </wire>
    <wire loc="76:SimpleEerAppC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x7f6ccaf6c598"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccad6fa60"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccad6fa60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:SimpleEerAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f6ccaf87020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccabd1b78"/></to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6ccabd1b78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab7db90"/></to>
    </wire>
    <wire loc="80:SimpleEerAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f6ccaf7f528"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9c00780"/></to>
    </wire>
    <wire loc="72:../EER/eer/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc9c00780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9bc2db8"/></to>
    </wire>
    <wire loc="81:SimpleEerAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6ccaf75278"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc95dd1a8"/></to>
    </wire>
    <wire loc="51:../EER/eer/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc95dd1a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc86f5d68"/></to>
    </wire>
    <wire loc="92:SimpleEerAppC.nc">
      <from><interface-ref name="SummarySend" scoped="" ref="0x7f6ccaf696b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc922d398"/></to>
    </wire>
    <wire loc="51:../EER/eer/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc922d398"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc85cc100"/></to>
    </wire>
    <wire loc="93:SimpleEerAppC.nc">
      <from><interface-ref name="SummaryTimer" scoped="" ref="0x7f6ccaf68670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc9234bc0"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9234bc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:SimpleEerAppC.nc">
      <from><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6ccaf58588"/></from>
      <to><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc964a7f8"/></to>
    </wire>
    <wire loc="97:SimpleEerAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f6ccaf55c48"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f6cc9bd17b0"/></to>
    </wire>
    <wire loc="84:../EER/eer/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f6cc9bd17b0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f6cc9bad2d8"/></to>
    </wire>
    <wire loc="138:SimpleEerC.nc">
      <from><interface-ref name="sendMessage" scoped="" ref="0x7f6ccaf48020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc93a4ba0"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9415020"/></to>
    </wire>
    <wire loc="103:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc867d400"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc95c2770"/></to>
    </wire>
    <wire loc="46:../EER/eer/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc887e400"/></to>
    </wire>
    <wire loc="48:/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc889a020"/></to>
    </wire>
    <wire loc="48:/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc88aebb8"/></to>
    </wire>
    <wire loc="177:../EER/eer/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc96b4888"/></to>
    </wire>
    <wire loc="201:../EER/eer/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9a267f8"/></to>
    </wire>
    <wire loc="264:../EER/eer/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc99530c0"/></to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9dc1618"/></to>
    </wire>
    <wire loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9dd3c28"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9e57020"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9e75e80"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9e99b38"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9fdcdf8"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cca0c1b28"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaa068d8"/></to>
    </wire>
    <wire loc="103:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc8b55730"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cca5945d8"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaab0080"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccad604d8"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6ccad86308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6ccb461390"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6ccb461390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6ccb026940"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6ccad86ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaf30020"/></to>
    </wire>
    <wire loc="48:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6ccaf30020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaf2d198"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccad79418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f6ccaf2d868"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f6ccaf2e8e8"/></to>
    </wire>
    <wire loc="46:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f6ccaf2e8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaf0f730"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6ccaf2b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaf25080"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f6ccaf2b6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cca3a78f8"/></to>
    </wire>
    <wire loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6ccaf0f730"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccaef7bc0"/></to>
    </wire>
    <wire loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6ccaf06bf0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6ccaef6340"/></to>
    </wire>
    <wire loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6ccb099cc0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6ccaef54d8"/></to>
    </wire>
    <wire loc="113:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f6ccaeb3d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccadf8c80"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f6ccaea1020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccadf1c80"/></to>
    </wire>
    <wire loc="108:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f6ccaeaa6e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadfec58"/></to>
    </wire>
    <wire loc="149:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f6ccae8f3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadd8c58"/></to>
    </wire>
    <wire loc="107:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f6ccaeb0d80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadfe020"/></to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f6ccae96868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadd8020"/></to>
    </wire>
    <wire loc="170:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f6ccae8c3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadc2c58"/></to>
    </wire>
    <wire loc="154:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f6ccae9c120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccadd3c80"/></to>
    </wire>
    <wire loc="99:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f6ccaeb44d0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccae4ac80"/></to>
    </wire>
    <wire loc="135:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f6ccae913d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccade7c58"/></to>
    </wire>
    <wire loc="134:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f6ccae98d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccade7020"/></to>
    </wire>
    <wire loc="133:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f6ccaea0400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccade9c80"/></to>
    </wire>
    <wire loc="115:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f6ccaea96e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadf6c58"/></to>
    </wire>
    <wire loc="156:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f6ccae8e3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadd1c58"/></to>
    </wire>
    <wire loc="140:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f6ccae9f898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccade2c80"/></to>
    </wire>
    <wire loc="114:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f6ccaeafb40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadf6020"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f6ccaec4060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae58960"/></to>
    </wire>
    <wire loc="155:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f6ccae956e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadd1020"/></to>
    </wire>
    <wire loc="106:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f6ccaebc898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccae00c80"/></to>
    </wire>
    <wire loc="161:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f6ccae9b588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccadcbc80"/></to>
    </wire>
    <wire loc="101:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f6ccaea5710"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccae05c58"/></to>
    </wire>
    <wire loc="142:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f6ccae903d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccade0c58"/></to>
    </wire>
    <wire loc="100:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f6ccaeb0060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccae05020"/></to>
    </wire>
    <wire loc="141:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f6ccae97aa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccade0020"/></to>
    </wire>
    <wire loc="163:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f6ccae8d3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadc9c58"/></to>
    </wire>
    <wire loc="147:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f6ccae9ed30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccaddac80"/></to>
    </wire>
    <wire loc="120:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="162:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f6ccae94558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadc9020"/></to>
    </wire>
    <wire loc="128:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f6ccae923d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6ccadefc58"/></to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f6ccae933d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadc2020"/></to>
    </wire>
    <wire loc="127:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f6ccae98020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6ccadef020"/></to>
    </wire>
    <wire loc="168:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f6ccae9aa20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f6ccadc4c80"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f6ccae56700"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae560c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6ccae56d18"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f6ccadba520"/></to>
    </wire>
    <wire loc="96:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6ccae54368"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f6ccadbac68"/></to>
    </wire>
    <wire loc="102:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccae04a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae58960"/></to>
    </wire>
    <wire loc="103:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccae02100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae560c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadfca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae58960"/></to>
    </wire>
    <wire loc="110:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadfa100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae560c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadf5a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae58960"/></to>
    </wire>
    <wire loc="117:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadf3100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae560c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f6ccae4e020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6ccae4e638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f6ccadb9418"/></to>
    </wire>
    <wire loc="123:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6ccae4ec50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f6ccadb9b60"/></to>
    </wire>
    <wire loc="129:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadeda90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="130:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadeb100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccade6a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="137:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccade4100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccaddea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="144:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccaddc100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadd7a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="151:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadd5100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadcfa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadcd100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadc8a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="165:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadc6100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6ccadc1a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></to>
    </wire>
    <wire loc="172:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f6ccadbe100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb0247f8"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f6ccb01fb48"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f6ccb463e08"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad5d208"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad5d208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccabf5020"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6ccad604d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6ccac6d418"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6ccad55980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6ccabe8c38"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6ccac6d418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc90ab020"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f6ccabef208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6ccac66d88"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6ccac3c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6ccac6dc00"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6ccac6dc00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc90a5830"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6ccabe7e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6ccace1dd8"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6ccace1dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6ccacc5c50"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cc90ab020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc908c7a8"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f6cc909fce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc90ab808"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6cc90ab808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc908b020"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cc90a2ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6ccace1dd8"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc9087020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc90965e0"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc90965e0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc90865b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc9095bd8"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc9095bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc90858c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc9093020"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc9093020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f6ccaea1020"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f6ccae98020"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f6ccae9f898"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f6ccae97aa8"/></to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f6ccae9ed30"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f6ccae96868"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f6ccae9c120"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f6ccae956e0"/></to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f6ccae9b588"/></to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f6ccae94558"/></to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f6ccae9aa20"/></to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f6ccae933d0"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6ccaca9e20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6ccacdfc58"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6ccacdfc58"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6ccacd7330"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccacc92a0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f6ccac39020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f6ccabea478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab7db90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab5a878"/></to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6ccabcd3e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6ccab7cc30"/></to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6ccab7cc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc9ca0938"/></to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6ccabc2b68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6ccab7a968"/></to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6ccab7a968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6cc9c9d628"/></to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccab775b8"/></to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6ccab775b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc9c9b2a8"/></to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6ccab95710"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f59130"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f59130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f4b060"/></to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab8f020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab63170"/></to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab63170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab49c78"/></to>
    </wire>
    <wire loc="81:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6ccabc2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6ccab7bdc0"/></to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6ccab7bdc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9c9fab0"/></to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab9ea80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab75348"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab75348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab4bc78"/></to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccab78020"/></to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6ccab78020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9c9dc18"/></to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6ccab94670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6cc9f55020"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6cc9f55020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6cc9f47020"/></to>
    </wire>
    <wire loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab5a878"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9dc5020"/></to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab742e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cc9c99020"/></to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6ccab56b50"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6cc9c9a400"/></to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab6e3b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab4ce28"/></to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab4ce28"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab49c78"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6cc9dc72f0"/></to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab4bc78"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc9f5b3b8"/></to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6ccab62020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6ccab48768"/></to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6ccab48768"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6cc9cbd128"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6ccab69398"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6ccab49630"/></to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6ccab49630"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc9f5a6b0"/></to>
    </wire>
    <wire loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f6cc9c91698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6ccab4eb38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9c98020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6ccab4d9e0"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f6ccab4d9e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6cc9e2cdb8"/></to>
    </wire>
    <wire loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9c98cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6ccab4c810"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f6ccab4c810"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6cc9e2bae8"/></to>
    </wire>
    <wire loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6cc9c948d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6cca16e690"/></to>
    </wire>
    <wire loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9c97368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f4e2e8"/></to>
    </wire>
    <wire loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9c96188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f4db60"/></to>
    </wire>
    <wire loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6cc9c96ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6ccaab9aa8"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6ccaab9aa8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6ccaaaf4b0"/></to>
    </wire>
    <wire loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6cc9c926a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab43c58"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab43c58"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab3d020"/></to>
    </wire>
    <wire loc="109:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc9c902a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3cb648"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9dc5020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9d4a020"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc9f5a6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc9f4c630"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6cc9cbd128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6cc9cba380"/></to>
    </wire>
    <wire loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f6cc9e2cdb8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f6cc9e21490"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6cc9dc72f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6cc9dc1c60"/></to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f6ccab52670"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9e2c748"/></to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9e2c748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f6cc9e22dc8"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc9f5b3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc9f4d210"/></to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6ccab4eb38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc9e5de20"/></to>
    </wire>
    <wire loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc9e5de20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc9e24428"/></to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f6ccab53950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9e2da40"/></to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc9e2da40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f6cc9e22118"/></to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f6ccab52cf0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f6cc9e2a1a8"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f6cc9e2a1a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f6cc9e20808"/></to>
    </wire>
    <wire loc="98:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f6cc9e2bae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f6cc9e20188"/></to>
    </wire>
    <wire loc="98:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6cc9dc2020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab47e28"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab47e28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab41770"/></to>
    </wire>
    <wire loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e29670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9e7ca70"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc9e7ca70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9e75298"/></to>
    </wire>
    <wire loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e79838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9cc14a8"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc9cc14a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6cc9cbde18"/></to>
    </wire>
    <wire loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9cbde18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9dc7d50"/></to>
    </wire>
    <wire loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc9dc7d50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9dbe730"/></to>
    </wire>
    <wire loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9dc49d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6ccab448f8"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6ccab448f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6ccab3e2d8"/></to>
    </wire>
    <wire loc="107:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e29020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9dc6988"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9dc6988"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9dbd438"/></to>
    </wire>
    <wire loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9dc37f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9e5c080"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9e5c080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9e582b0"/></to>
    </wire>
    <wire loc="109:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e5ce50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6ccab43600"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6ccab43600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9fdd168"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9fdd168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9fd7600"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6ccab3ddf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6ccaac9b80"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6ccaac9b80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6ccaab06b0"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccab35e38"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccaac48b0"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccaac48b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccaaad318"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6ccab3a060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cca0cfc50"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6ccab3a060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9fde020"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc9fde020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9fd8460"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cca0cfc50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cca0c0198"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6ccab2d7a8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6cca0cc480"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6cca0cc480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cca0c09f8"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6ccab34558"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cca0cb140"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cca0cb140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cca0bf7c0"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab2ade0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></to>
    </wire>
    <wire loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6ccab1d020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6ccab298d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e93568"/></to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f6ccab113e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9e9dbb0"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cc9e9dbb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6ccab1f760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f6ccab0e988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f6ccab0fb30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f6ccab10c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f6ccaab4d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f6ccaaac658"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f6ccaaa9370"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6ccaa032a0"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6ccaa032a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6cca9fd4f8"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6ccaaa3100"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6cca9c11a0"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6cca9c11a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca7a0410"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6ccaaa2378"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f6cca9bd698"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6cca9bd698"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca793cd0"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6ccaa9d500"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f6cca9bb998"/></to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6cca9bb998"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca789cd0"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6ccaa98b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f6cca7740e0"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6cca7740e0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6cca660b58"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6ccaa863b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca1f87d0"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca1f87d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6ccaa85460"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f6cca1f5020"/></to>
    </wire>
    <wire loc="132:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6cca1f5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6ccaa85b38"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1f42e8"/></to>
    </wire>
    <wire loc="135:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1f42e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6ccaa87ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1f63a0"/></to>
    </wire>
    <wire loc="130:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1f63a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6ccaa873c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca1f4900"/></to>
    </wire>
    <wire loc="136:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca1f4900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6ccaa8ce60"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca1e9e10"/></to>
    </wire>
    <wire loc="154:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca1e9e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6ccaa8e708"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca1e7d60"/></to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca1e7d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6ccaa8d020"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca1e6528"/></to>
    </wire>
    <wire loc="159:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca1e6528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6ccaa8d8a8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca1ed470"/></to>
    </wire>
    <wire loc="147:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca1ed470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6ccaa8a158"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca1edc10"/></to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca1edc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6ccaa9a958"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f6cca1d97c0"/></to>
    </wire>
    <wire loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6cca1d97c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6ccaa9a020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca1d9020"/></to>
    </wire>
    <wire loc="183:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca1d9020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6ccaa8a9d0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca1e9470"/></to>
    </wire>
    <wire loc="153:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca1e9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6ccaa893a8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f6cca1ec470"/></to>
    </wire>
    <wire loc="149:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6cca1ec470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6ccaa89c18"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca1ea470"/></to>
    </wire>
    <wire loc="151:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca1ea470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f6ccaa84e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca1c8e60"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca1c8e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f6ccaa84140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca19b558"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca19b558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6ccaa93170"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6cca16e690"/></to>
    </wire>
    <wire loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6ccaaa7998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6cca170cd0"/></to>
    </wire>
    <wire loc="23:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6cca170cd0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6cca155190"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f6ccaa783f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f6ccaa7a598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6ccaa068d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cca9feb78"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cca9feb78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc8ff1c08"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6cca9fd4f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fe44b8"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cc8ff1c08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc8fdd6e8"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fe44b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fd7020"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cc8fdd6e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc8fc3d90"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f6cc8fd0450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fdc020"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fdc020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fc2648"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cc8fd31a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6cca9e8520"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cca9e8520"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6cca9e3e40"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc8fbe5a8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc8fc9d70"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc8fc9d70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc8fbdbd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc8fc6430"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc8fc6430"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc8fbb020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc8fc5740"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc8fc5740"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6cca9df060"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6ccacdfc58"/></to>
    </wire>
    <wire loc="73:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6cca9c0378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca79ccd0"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6cca9be508"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca797448"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6cca9c2020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca7bfc30"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6cca9bc810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca78e410"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca7beda0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6cca9a4568"/></to>
    </wire>
    <wire loc="442:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f6cca9a4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8dbca0"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca79f5f8"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f6cca977568"/></to>
    </wire>
    <wire loc="473:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f6cca977568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca876ca0"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca79be20"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f6cca9a6568"/></to>
    </wire>
    <wire loc="441:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f6cca9a6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8e03d8"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca7965f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6cca9aa5a8"/></to>
    </wire>
    <wire loc="438:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f6cca9aa5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca913e18"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca792e20"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f6cca96f568"/></to>
    </wire>
    <wire loc="477:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f6cca96f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca863ca0"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca78d5f8"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f6cca979668"/></to>
    </wire>
    <wire loc="472:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f6cca979668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca87a478"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca788e20"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f6cca971568"/></to>
    </wire>
    <wire loc="476:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f6cca971568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8673d8"/></to>
    </wire>
    <wire loc="455:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f6cca990568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8adca0"/></to>
    </wire>
    <wire loc="531:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f6cca9467d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca89f3d8"/></to>
    </wire>
    <wire loc="551:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f6cca921558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca819ca0"/></to>
    </wire>
    <wire loc="532:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f6cca944660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca89bca0"/></to>
    </wire>
    <wire loc="460:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f6cca98c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8a4ca0"/></to>
    </wire>
    <wire loc="486:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f6cca963568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca847ca0"/></to>
    </wire>
    <wire loc="497:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f6cca952568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca822ca0"/></to>
    </wire>
    <wire loc="535:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f6cca93e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca891ca0"/></to>
    </wire>
    <wire loc="545:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f6cca92e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca835ca0"/></to>
    </wire>
    <wire loc="557:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f6cca919560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8143d8"/></to>
    </wire>
    <wire loc="445:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f6cca99e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8cd3d8"/></to>
    </wire>
    <wire loc="536:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f6cca93c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca88c3d8"/></to>
    </wire>
    <wire loc="450:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f6cca99a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8c43d8"/></to>
    </wire>
    <wire loc="463:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f6cca985568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8953d8"/></to>
    </wire>
    <wire loc="489:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f6cca95d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8393d8"/></to>
    </wire>
    <wire loc="500:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f6cca94c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8143d8"/></to>
    </wire>
    <wire loc="440:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f6cca9a8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8e5ca0"/></to>
    </wire>
    <wire loc="453:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f6cca994568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8b6d08"/></to>
    </wire>
    <wire loc="466:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f6cca97f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca888ca0"/></to>
    </wire>
    <wire loc="530:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f6cca948970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca89f3d8"/></to>
    </wire>
    <wire loc="548:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f6cca927558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8263d8"/></to>
    </wire>
    <wire loc="555:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f6cca91b558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8143d8"/></to>
    </wire>
    <wire loc="541:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f6cca934560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca84b3d8"/></to>
    </wire>
    <wire loc="471:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f6cca97b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca87fdd8"/></to>
    </wire>
    <wire loc="484:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f6cca967568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca851ca0"/></to>
    </wire>
    <wire loc="495:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f6cca956568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca82bca0"/></to>
    </wire>
    <wire loc="549:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f6cca925558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca822ca0"/></to>
    </wire>
    <wire loc="538:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f6cca93a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca85aca0"/></to>
    </wire>
    <wire loc="443:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f6cca9a2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8d63d8"/></to>
    </wire>
    <wire loc="456:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f6cca98e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8a83d8"/></to>
    </wire>
    <wire loc="493:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f6cca95b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca835ca0"/></to>
    </wire>
    <wire loc="461:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f6cca98a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca89f3d8"/></to>
    </wire>
    <wire loc="474:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f6cca975568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8703d8"/></to>
    </wire>
    <wire loc="487:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f6cca961568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8423d8"/></to>
    </wire>
    <wire loc="498:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f6cca950568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca81d3d8"/></to>
    </wire>
    <wire loc="540:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f6cca936560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca851ca0"/></to>
    </wire>
    <wire loc="451:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f6cca998568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8c0ca0"/></to>
    </wire>
    <wire loc="464:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f6cca983568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca891ca0"/></to>
    </wire>
    <wire loc="542:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f6cca932560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca888ca0"/></to>
    </wire>
    <wire loc="546:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f6cca92c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8303d8"/></to>
    </wire>
    <wire loc="552:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f6cca91f558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8143d8"/></to>
    </wire>
    <wire loc="482:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f6cca96b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca85aca0"/></to>
    </wire>
    <wire loc="543:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f6cca930560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8833d8"/></to>
    </wire>
    <wire loc="454:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f6cca992568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8b13d8"/></to>
    </wire>
    <wire loc="467:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f6cca97d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8833d8"/></to>
    </wire>
    <wire loc="539:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f6cca938560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8553d8"/></to>
    </wire>
    <wire loc="550:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f6cca923558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca81d3d8"/></to>
    </wire>
    <wire loc="485:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f6cca965568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca84b3d8"/></to>
    </wire>
    <wire loc="496:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f6cca954568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8263d8"/></to>
    </wire>
    <wire loc="444:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f6cca9a0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8d2ca0"/></to>
    </wire>
    <wire loc="494:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f6cca959568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8303d8"/></to>
    </wire>
    <wire loc="449:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f6cca99c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8c9ca0"/></to>
    </wire>
    <wire loc="462:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f6cca988568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca89bca0"/></to>
    </wire>
    <wire loc="475:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f6cca973568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca86cca0"/></to>
    </wire>
    <wire loc="488:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f6cca95f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca83eca0"/></to>
    </wire>
    <wire loc="499:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f6cca94e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca819ca0"/></to>
    </wire>
    <wire loc="439:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f6cca9b4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8e9478"/></to>
    </wire>
    <wire loc="452:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f6cca996568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8bb3d8"/></to>
    </wire>
    <wire loc="465:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f6cca981568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca88c3d8"/></to>
    </wire>
    <wire loc="478:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f6cca96d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca85e3d8"/></to>
    </wire>
    <wire loc="534:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f6cca940548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8953d8"/></to>
    </wire>
    <wire loc="547:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f6cca92a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca82bca0"/></to>
    </wire>
    <wire loc="533:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f6cca942560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8953d8"/></to>
    </wire>
    <wire loc="483:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f6cca969568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8553d8"/></to>
    </wire>
    <wire loc="554:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f6cca91d558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca819ca0"/></to>
    </wire>
    <wire loc="558:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f6cca917568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8393d8"/></to>
    </wire>
    <wire loc="529:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f6cca94a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6cca8a4ca0"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6cca7714f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6cca76d100"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6cca774ca8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6cca651a78"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cca76db70"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f6ccaea0400"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f6cca759020"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f6ccae913d0"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca759de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f6cca979668"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f6cca65f780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6cca74a6f0"/></to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f6cca74a6f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f6cca7363e0"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f6cca6505f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6cca74c7b8"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f6cca74c7b8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f6cca73a470"/></to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f6cca73f6f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f6cca72c3e0"/></to>
    </wire>
    <wire loc="73:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f6cca7476f0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f6cca7333e0"/></to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f6cca7456f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f6cca7313e0"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f6cca7506f0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f6cca7383e0"/></to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f6cca7416f0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f6cca72e3e0"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f6cca7496f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f6cca7353e0"/></to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f6cca73e6f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f6cca72b3e0"/></to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f6cca7446f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f6cca7303e0"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f6cca74b6f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f6cca7373e0"/></to>
    </wire>
    <wire loc="81:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f6cca7406f0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f6cca72d3e0"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f6cca7486f0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f6cca7343e0"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f6cca7466f0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f6cca7323e0"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f6cca7516f0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f6cca7393e0"/></to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f6cca7426f0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f6cca72f3e0"/></to>
    </wire>
    <wire loc="131:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6cca1f69b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca1e8d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6cca1e0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6cca1e75c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6cca1d47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cca1d77c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca1f5c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6cca1dcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca1d87c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6cca1e2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6cca1e3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca1f7430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca60cdf0"/></to>
    </wire>
    <wire loc="138:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca1f0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6cca1f0c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cca1da060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca1ef3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cca1d7020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6cca1dc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca1ecc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cca1dd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6cca1e0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cca1ddc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca1d4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cca1d5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6cca1e3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6cca1df470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6cca1d8020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6cca1e6cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6cca1d3020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cca1f7d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6cca1eec50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca1eac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6cca1e1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6cca1e1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca1e85f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca1ef9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6cca1ee638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca1f0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cca1da800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6cca1d57c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cca1e2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6cca1dfc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6cca1f5638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6cca1e54f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6cca1ee020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6cca1e5c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6cca1db470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca1d3c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca608e50"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca606040"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca606d40"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca609c10"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca604a98"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f6cca600838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59c100"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cca59c100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6cca6031e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca57ccf0"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca57ccf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc8be7968"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6cca602d10"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6cca57b948"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6cca57b948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6cc8be6d18"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca600020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca21c020"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca21c020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6cc8be5d98"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cca5ff730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f6cca5f45d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca5921c8"/></to>
    </wire>
    <wire loc="110:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6cc8be5d98"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca517c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6cc8be6d18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6cca5185c8"/></to>
    </wire>
    <wire loc="105:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc8be7968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca51a4e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8be65b8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8bdc980"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8bdc980"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cca36f660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6cca5185c8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6cca4a1500"/></to>
    </wire>
    <wire loc="108:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cc8be5328"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cca518c10"/></to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cca518c10"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cca4a1ad8"/></to>
    </wire>
    <wire loc="111:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cca513ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cc8be4580"/></to>
    </wire>
    <wire loc="115:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc8bcf8c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca516de0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6cca514a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc8bddd48"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc8bddd48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca370498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cca50eb50"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc8bd60c0"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc8bd60c0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6cca374a48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca516de0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca4a2d58"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca517c90"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca49f6d8"/></to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca51a4e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca4a2020"/></to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cca49ed58"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cca513ce8"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6cca49e020"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f6cca514a40"/></to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cca499c18"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cca50eb50"/></to>
    </wire>
    <wire loc="98:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f6cca49d3b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cca48f080"/></to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cca48f080"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6cca4865a8"/></to>
    </wire>
    <wire loc="101:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cca498430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="102:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f6cca497a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6cca489020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca480928"/></to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cca48b9c0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6cca480020"/></to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6cca454b78"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f6cca948970"/></to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f6cca452af0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f6cca944660"/></to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6cca450968"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f6cca942560"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f6cca44e7e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f6cca93c560"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f6cca44c658"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f6cca93e560"/></to>
    </wire>
    <wire loc="14:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f6cca47e060"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f6cca2d2b30"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cca3a78f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cca3cb080"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6cca3cace8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f6cca3cc4f0"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6cca3cc4f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca3a5020"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6cca3c9e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f6cca3aa688"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6cca3aa688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca3a1720"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6cca3c7020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f6cca3a9810"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6cca3a9810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca39c020"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca3a4120"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f6cca963568"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca3a0908"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f6cca961568"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca39b120"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f6cca95f568"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6cc8bd6820"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca371940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6cc8bd6df8"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6cca2db298"/></to>
    </wire>
    <wire loc="11:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6cca2db298"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f6cca2d2b30"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc8bdb880"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cca48f080"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8bdb120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca36fe30"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca36fe30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca2e20e0"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca36eb58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc8bcf8c8"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cca36f660"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cca2e5d18"/></to>
    </wire>
    <wire loc="106:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cca2e5d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8b52af8"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f6cca374a48"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6cca36a480"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca370498"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca2e5020"/></to>
    </wire>
    <wire loc="105:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca2e5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc8b53d80"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca371940"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca36ad60"/></to>
    </wire>
    <wire loc="108:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca2e20e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8b51e20"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca2e2960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca36eb58"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca3592a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca2e20e0"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f6cca35a438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cca48b9c0"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6cca35abd8"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6cca489020"/></to>
    </wire>
    <wire loc="107:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cca2e34a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc8b51268"/></to>
    </wire>
    <wire loc="109:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc8b4f6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca2e2960"/></to>
    </wire>
    <wire loc="111:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6cc8b4fe78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6cc8b55d08"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6cc8b4c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f6cca2c96e0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6cca4865a8"/></to>
    </wire>
    <wire loc="18:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6cca2c4060"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f6cca948970"/></to>
    </wire>
    <wire loc="19:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6cca2c3e00"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f6cca942560"/></to>
    </wire>
    <wire loc="153:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca1bba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6cca1c4100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca1bea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca1b8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6cca1b1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6cca1b8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6cca1a52e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cca1a72e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca1c33a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6cca1ad470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca1a82e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6cca1bda88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca1bca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6cca1b3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6cca1b5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca1b7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca1c7a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></to>
    </wire>
    <wire loc="138:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca1c2c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6cca1c12e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cca1aca38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca1c1a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cca1a8a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca1c2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6cca1aec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca1bc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca1bd2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1c6a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cca1afc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6cca1b0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cca1ae470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca1a6a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cca1a7a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6cca1b4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6cca1b0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6cca1a9a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6cca1b6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6cca1a5a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cca1c6470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6cca1be2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca1bb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6cca1b3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca1b7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6cca1b1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca1ba470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6cca1c4718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca1bac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca1c0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6cca1c0c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6cca1a92e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca1aaa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca1c2638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cca1aa2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6cca1a62e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cca1b4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6cca1af470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6cca1c4d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1c39b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6cca1b6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6cca1c0678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6cca1b5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6cca1adc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca1a3780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca18e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6cca199900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca192470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca18dd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6cca185470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6cca18c5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6cca1797c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cca17b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca198c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6cca181c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca17d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6cca191470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca18f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6cca187c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6cca188470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca18cd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca19a2a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></to>
    </wire>
    <wire loc="138:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca195638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6cca195c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cca17f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca1943a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cca17b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca197900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6cca181470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca191c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca192c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1992e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cca182470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6cca185c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cca182c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca179020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cca17a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6cca188c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6cca184470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6cca17d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6cca18bcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6cca178020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cca19abd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6cca193c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca18fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6cca186470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca18b528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6cca186c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca18ee10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6cca198020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca18d5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca1949b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6cca193638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6cca17e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca17e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca195020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cca17f800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6cca17a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cca187470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6cca184c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6cca198638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1972e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6cca1894f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6cca193020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6cca189c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6cca180470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca178c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f6cca152648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f6cca158ac8"/></to>
    </wire>
    <wire loc="20:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f6cca158ac8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f6cca143a58"/></to>
    </wire>
    <wire loc="16:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f6cca13d360"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f6cca146ba0"/></to>
    </wire>
    <wire loc="21:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f6cca146ba0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f6cca12a108"/></to>
    </wire>
    <wire loc="17:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f6cca13dba8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cca0d9020"/></to>
    </wire>
    <wire loc="18:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f6cca12e530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f6cca12f370"/></to>
    </wire>
    <wire loc="11:/home/muzi/tinyos-main//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f6cca12f370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca0e14e0"/></to>
    </wire>
    <wire loc="18:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6cca125748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6cca12cb78"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6cca12cb78"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6cca103bc8"/></to>
    </wire>
    <wire loc="19:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f6cca12a968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f6cca12e530"/></to>
    </wire>
    <wire loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cca0f3020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6cca0ed3a8"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6cca0ed3a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6cca0ea980"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cca0e7928"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f6ccaec4060"/></to>
    </wire>
    <wire loc="9:/home/muzi/tinyos-main//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca0e05f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f6cca994568"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cca0cacb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cca0bc738"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cca0c9458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cca0bce80"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f6cca0ba820"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6ccaa032a0"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6cca0af8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f6cca9c2020"/></to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6cca0aec98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6cca9c11a0"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6cca0aae20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f6cca9bc810"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6cca0a8d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f6cca7714f8"/></to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6cca0a6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca00f7d0"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cca00f7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca0a6cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca00e430"/></to>
    </wire>
    <wire loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca00e430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cca0a2670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6cca00ed58"/></to>
    </wire>
    <wire loc="129:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cca00ed58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6cca0a2d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f6cca00c638"/></to>
    </wire>
    <wire loc="133:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6cca00c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca0a1478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca00cc50"/></to>
    </wire>
    <wire loc="134:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca00cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca0a1b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca009638"/></to>
    </wire>
    <wire loc="138:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca009638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca0a3da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca003470"/></to>
    </wire>
    <wire loc="151:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca003470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca0a4720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f6cc9fecc58"/></to>
    </wire>
    <wire loc="196:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6cc9fecc58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca0a3538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cc9ff17c0"/></to>
    </wire>
    <wire loc="186:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cc9ff17c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca0a03d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca006c10"/></to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca006c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca09f558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca0015f8"/></to>
    </wire>
    <wire loc="155:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca0015f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca09fde0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca001d98"/></to>
    </wire>
    <wire loc="156:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca001d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6cca0a0e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f6cca007020"/></to>
    </wire>
    <wire loc="142:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6cca007020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca09d6f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f6cc9fed020"/></to>
    </wire>
    <wire loc="191:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6cc9fed020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cca09e650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6cc9fef7c0"/></to>
    </wire>
    <wire loc="188:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cc9fef7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cca09ee80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6cc9fee020"/></to>
    </wire>
    <wire loc="189:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cc9fee020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cca097750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cc9fde808"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cc9fde808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cc9fd8c48"/></to>
    </wire>
    <wire loc="98:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cca0b7940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></to>
    </wire>
    <wire loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cca0b57e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6cca0b4460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f59130"/></to>
    </wire>
    <wire loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cca0a81d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cc9f52ac8"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cc9f52ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cc9f44ac8"/></to>
    </wire>
    <wire loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cca09b0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="153:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca002470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6cca00d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca006470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6cc9ff9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6cca0005c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9fed7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6cc9ff5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6cca005470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6cc9ffbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6cc9ffc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca000d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6cca009c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cc9ff3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca0083a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9fef020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca00b900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6cc9ff5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca005c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca00d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cc9ff6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6cc9ff9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cc9ff6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6cc9ffcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6cc9ff8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6cc9ff1020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6cc9fffcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9fec020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6cca007c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca003c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6cc9ffa470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6cc9fff528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6cc9ffac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca002e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6cca00c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca0089b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6cca007638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6cc9ff27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6cc9ff2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca009020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cc9ff3800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6cc9fee7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cc9ffb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6cc9ff8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca00b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6cc9ffd4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6cc9ffdc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6cc9ff4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9fdd8c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9fd7d58"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc9fc3a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6cc9fd6420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6cca9c11a0"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6cc9fd5688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f6cca9c0378"/></to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6cc9fd4818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f6cca9be508"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6cc9fd3a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6cca774ca8"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6cc9fd26c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc9ee50e0"/></to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc9ee50e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9fd1518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9ec2c10"/></to>
    </wire>
    <wire loc="195:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9ec2c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cc9fd0a88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cc9ee0900"/></to>
    </wire>
    <wire loc="137:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cc9ee0900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6cc9fd0398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f6cc9edf638"/></to>
    </wire>
    <wire loc="139:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6cc9edf638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9fcf328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9fce188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6cc9fccb80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f59130"/></to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6cc9fceaf0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6ccaab9aa8"/></to>
    </wire>
    <wire loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cc9fc8dc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cc9ed6020"/></to>
    </wire>
    <wire loc="155:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cc9ed6020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cc9fc76a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cc9ed67c0"/></to>
    </wire>
    <wire loc="156:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cc9ed67c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6cc9fc86c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f6cc9edd3a0"/></to>
    </wire>
    <wire loc="141:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6cc9edd3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9fc5108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9ec2470"/></to>
    </wire>
    <wire loc="192:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9ec2470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cc9fc6020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6cc9ec5470"/></to>
    </wire>
    <wire loc="188:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6cc9ec5470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cc9fc6850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6cc9ec5c10"/></to>
    </wire>
    <wire loc="189:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6cc9ec5c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9fc5970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9ec6c10"/></to>
    </wire>
    <wire loc="187:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9ec6c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cc9fc3210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6cc9ee3678"/></to>
    </wire>
    <wire loc="129:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6cc9ee3678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f6cc9fb8e38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cc9ef2720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6cca9e8520"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f6cc9f42520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6cc9ef3528"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6cc9f41788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6ccad55980"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9eed730"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cc9ed9c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6cc9ee22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cc9edcdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f6cc9ece020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6cc9ed5020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6cc9ee1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f6cc9ecb7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cc9ec6470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6cc9edbd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6cc9edacc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f6cc9ed07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6cc9ed2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6cc9ed57c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cc9ee5cd8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></to>
    </wire>
    <wire loc="138:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cc9edf020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cc9ec9bc0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6cc9edfd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cc9ee02e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f6cc9ecb020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cc9eda528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cc9edb5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6cc9ee3c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cc9ecc020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f6cc9ece7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cc9ecc7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6cc9ec4c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6cc9ed27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f6cc9ecd020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6cc9ec7c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6cc9ed47c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6cc9edc638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cc9ed94f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f6cc9ecf020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6cc9ed4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f6cc9ecf7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6cc9ed8838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6cc9ee2900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6cc9edc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6cc9ec7470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6cc9ec8c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cc9ec8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6cc9ec4470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cc9ed0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f6cc9ecd7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6cc9ee1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6cc9ee1c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6cc9ed3020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6cc9edd9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6cc9ed37c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f6cc9ec9020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6cc9ec1908"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f6cc9e97668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f6cc9e94528"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cc9e9f8c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc9e99b38"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e74578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e79838"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cc9e732a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9e76468"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cc9e76468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc9e72080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9e72848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6cc9e5c748"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6cc9e58978"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e57728"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e5ce50"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9e57d68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e1f528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e29670"/></to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e1e358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e29020"/></to>
    </wire>
    <wire loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9e1e970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></to>
    </wire>
    <wire loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9e1d7a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6cc9e1c1c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6cc9dd22a8"/></to>
    </wire>
    <wire loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f6cc9df2ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9d4a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9d45ac0"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f6cc9dc5b28"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9ce7060"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cc9ce7060"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6cc9dbaa18"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6cc9dc2020"/></to>
    </wire>
    <wire loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9dba358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9dc37f0"/></to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9dbdb08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6cc9dc49d0"/></to>
    </wire>
    <wire loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9db2020"/></from>
      <to><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9d4ab78"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9d4ab78"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9cff338"/></to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9db3158"/></from>
      <to><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9d49b20"/></to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9d49b20"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9d01338"/></to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f6cc9db6198"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9ce7060"/></to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="OffTimer" scoped="" ref="0x7f6cc9db1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc9ce5128"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9ce5128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendDoneTimer" scoped="" ref="0x7f6cc9dac1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc9cdfa60"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9cdfa60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9db44b0"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9d4d5f8"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9d4d5f8"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9d45198"/></to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Resend" scoped="" ref="0x7f6cc9dbc810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6cca0cc480"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9db77e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab4bc78"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9db4e00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cc9dbb470"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab43c58"/></to>
    </wire>
    <wire loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc9da7438"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc9da7b88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="98:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9da0b50"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd9ab0"/></to>
    </wire>
    <wire loc="9:/home/muzi/tinyos-main//tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd9ab0"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd3020"/></to>
    </wire>
    <wire loc="109:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f6cc9d9e6f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x7f6cc9d9b4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="resend" scoped="" ref="0x7f6cc9d9d598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x7f6cc9d9a350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cc9d01338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6cc9cff338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cc9d39570"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cca0cacb8"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cc9d39c78"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cca0c9458"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9d383e8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9fdd8c0"/></to>
    </wire>
    <wire loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6cc9d3f7e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab47e28"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f6cc9d3b060"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x7f6cc9dc5b28"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9d3e378"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9d01338"/></to>
    </wire>
    <wire loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9d3c208"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6cc9cff338"/></to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="OnTimer" scoped="" ref="0x7f6cc9d44800"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc9cfd420"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9cfd420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc9d3bdd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x7f6cc9d35988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="getCca" scoped="" ref="0x7f6cc9d34928"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x7f6cc9d36a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9cf7a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9cb50c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab4bc78"/></to>
    </wire>
    <wire loc="176:../EER/eer/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f6cc9bad2d8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f6cc96b8e08"/></to>
    </wire>
    <wire loc="79:../EER/eer/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9bf0bd8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9bb3620"/></to>
    </wire>
    <wire loc="128:../EER/eer/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9bb3620"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9a213f0"/></to>
    </wire>
    <wire loc="76:../EER/eer/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f6cc9bfb020"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f6cc9bb4398"/></to>
    </wire>
    <wire loc="125:../EER/eer/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f6cc9bb4398"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f6cc9a221a0"/></to>
    </wire>
    <wire loc="78:../EER/eer/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc9bfb5f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc9bb4970"/></to>
    </wire>
    <wire loc="126:../EER/eer/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc9bb4970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc9a22758"/></to>
    </wire>
    <wire loc="75:../EER/eer/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6cc9bfc1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6cc9bb5810"/></to>
    </wire>
    <wire loc="124:../EER/eer/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6cc9bb5810"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6cc9a24aa0"/></to>
    </wire>
    <wire loc="73:../EER/eer/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc9bff428"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9bb8a88"/></to>
    </wire>
    <wire loc="121:../EER/eer/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc9bb8a88"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9a25660"/></to>
    </wire>
    <wire loc="82:../EER/eer/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9bc72d8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9bb02b0"/></to>
    </wire>
    <wire loc="192:../EER/eer/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9bb02b0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc96b7700"/></to>
    </wire>
    <wire loc="74:../EER/eer/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9bfd5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9bb7c88"/></to>
    </wire>
    <wire loc="123:../EER/eer/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9bb7c88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9a24388"/></to>
    </wire>
    <wire loc="83:../EER/eer/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9bd1020"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9baea98"/></to>
    </wire>
    <wire loc="130:../EER/eer/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9baea98"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9a1e020"/></to>
    </wire>
    <wire loc="80:../EER/eer/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9bf5020"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9bb2450"/></to>
    </wire>
    <wire loc="129:../EER/eer/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9bb2450"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9a20268"/></to>
    </wire>
    <wire loc="122:../EER/eer/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc9bc2db8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9a26d90"/></to>
    </wire>
    <wire loc="174:../EER/eer/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc9bc2db8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc96b5020"/></to>
    </wire>
    <wire loc="175:../EER/eer/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc9bc2db8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9956080"/></to>
    </wire>
    <wire loc="86:../EER/eer/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9ba31c8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9bc3390"/></to>
    </wire>
    <wire loc="87:../EER/eer/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc9ba38f8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc9bba640"/></to>
    </wire>
    <wire loc="234:../EER/eer/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9ba4578"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9955be0"/></to>
    </wire>
    <wire loc="127:../EER/eer/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9a03a28"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9ba31c8"/></to>
    </wire>
    <wire loc="134:../EER/eer/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7f6cc9a0f478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f6cc99c5228"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f6cc99c5228"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f6cc889a6c0"/></to>
    </wire>
    <wire loc="135:../EER/eer/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f6cc9a0cbc8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f6cc99ca020"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f6cc99ca020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f6cc88ac370"/></to>
    </wire>
    <wire loc="138:../EER/eer/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f6cc9a15bd0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f6cc99bf020"/></to>
    </wire>
    <wire loc="141:../EER/eer/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7f6cc9a08380"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f6cc9970b10"/></to>
    </wire>
    <wire loc="44:../EER/eer/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7f6cc9970b10"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f6cc887ead8"/></to>
    </wire>
    <wire loc="147:../EER/eer/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9a17020"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9955be0"/></to>
    </wire>
    <wire loc="166:../EER/eer/CtpP.nc">
      <from><interface-ref name="EerParentSelectionConfig" scoped="" ref="0x7f6cc96a0678"/></from>
      <to><interface-ref name="EerParentSelectionConfig" scoped="" ref="0x7f6cc96971f0"/></to>
    </wire>
    <wire loc="168:../EER/eer/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc9666580"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="178:../EER/eer/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7f6cc96b3020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9956850"/></to>
    </wire>
    <wire loc="179:../EER/eer/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7f6cc96b3c18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc99555c0"/></to>
    </wire>
    <wire loc="180:../EER/eer/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc96b2268"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9955be0"/></to>
    </wire>
    <wire loc="182:../EER/eer/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7f6cc96a2578"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7f6cc994d2b8"/></to>
    </wire>
    <wire loc="184:../EER/eer/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc96b1700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="185:../EER/eer/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f6cc96afd60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccabd1b78"/></to>
    </wire>
    <wire loc="186:../EER/eer/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7f6cc96ae900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc996da60"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc996da60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../EER/eer/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7f6cc96aa9f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc9965020"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9965020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../EER/eer/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc96a3268"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc9ba38f8"/></to>
    </wire>
    <wire loc="189:../EER/eer/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc99ff740"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc9ba38f8"/></to>
    </wire>
    <wire loc="190:../EER/eer/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9a05910"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc96b7700"/></to>
    </wire>
    <wire loc="191:../EER/eer/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc96a3e20"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9a1e020"/></to>
    </wire>
    <wire loc="196:../EER/eer/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7f6cc9a1dde0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6cc9660a60"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6cc9660a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="198:../EER/eer/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc96a4a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="199:../EER/eer/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc99ff020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="216:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc9a1e7e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc988fda8"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc988fda8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc8852020"/></to>
    </wire>
    <wire loc="217:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6cc9a16e60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc97eb9d8"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc97eb9d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc8852bd8"/></to>
    </wire>
    <wire loc="218:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9a07d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc97df1c8"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc97df1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6ccabc2020"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="223:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f6cc9a05378"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc97d51c8"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc97d51c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6ccabc2b68"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="224:../EER/eer/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f6cc9a03060"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f6cc96b8e08"/></to>
    </wire>
    <wire loc="225:../EER/eer/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f6cc9a163f0"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7f6cc96b83d8"/></to>
    </wire>
    <wire loc="226:../EER/eer/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f6cc99fe430"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6ccabd1b78"/></to>
    </wire>
    <wire loc="227:../EER/eer/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9a1d3f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc97e9d60"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc97e9d60"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc884f020"/></to>
    </wire>
    <wire loc="228:../EER/eer/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9a02268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97ea700"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97ea700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8851888"/></to>
    </wire>
    <wire loc="229:../EER/eer/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc9a01888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="236:../EER/eer/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6cc994b5f8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></to>
    </wire>
    <wire loc="238:../EER/eer/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc994d910"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc9656548"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc9656548"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc8737020"/></to>
    </wire>
    <wire loc="239:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc994c978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9651c20"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9651c20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6ccabc2020"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="240:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6cc9950c78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc9655268"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc9655268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc8737bd8"/></to>
    </wire>
    <wire loc="241:../EER/eer/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f6cc9951680"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9655e20"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9655e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8736888"/></to>
    </wire>
    <wire loc="258:../EER/eer/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc994b020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6ccab69398"/></to>
    </wire>
    <wire loc="269:../EER/eer/CtpP.nc">
      <from><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc99fee60"/></from>
      <to><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc964a7f8"/></to>
    </wire>
    <wire loc="270:../EER/eer/CtpP.nc">
      <from><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc96a2b10"/></from>
      <to><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc964a7f8"/></to>
    </wire>
    <wire loc="272:../EER/eer/CtpP.nc">
      <from><interface-ref name="EerParentSelectionHealth" scoped="" ref="0x7f6cc96213a0"/></from>
      <to><interface-ref name="EerParentSelectionHealth" scoped="" ref="0x7f6cc9697de8"/></to>
    </wire>
    <wire loc="273:../EER/eer/CtpP.nc">
      <from><interface-ref name="EerHealth" scoped="" ref="0x7f6cc99fc988"/></from>
      <to><interface-ref name="EerHealth" scoped="" ref="0x7f6cc9649c88"/></to>
    </wire>
    <wire loc="283:../EER/eer/CtpP.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc99f9020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab6e3b0"/></to>
    </wire>
    <wire loc="284:../EER/eer/CtpP.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc994a020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab6e3b0"/></to>
    </wire>
    <wire loc="300:../EER/eer/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f6cc99f9de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:../EER/eer/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc887b458"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9bb2450"/></to>
    </wire>
    <wire loc="20:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc8852020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc8840120"/></to>
    </wire>
    <wire loc="21:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc8852bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc8846cf8"/></to>
    </wire>
    <wire loc="22:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8851888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8845908"/></to>
    </wire>
    <wire loc="23:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc884f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc8842020"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc8846cf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8845908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc8842020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab9ea80"/></to>
    </wire>
    <wire loc="25:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7f6cc8840d78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc8846140"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc8846140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc8833a80"/></to>
    </wire>
    <wire loc="26:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7f6cc883f998"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab8f020"/></to>
    </wire>
    <wire loc="27:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc883e3f0"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd9ab0"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc8832760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc98654f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc88313f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="53:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc98654f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc981d920"/></to>
    </wire>
    <wire loc="54:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc981c6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6ccabcd3e8"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc981b3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc981aa10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></to>
    </wire>
    <wire loc="169:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f6cc9819780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f6cc9818020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc97df760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97de3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc97d5760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97d33f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="277:../EER/eer/EerParentSetEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7f6cc969fa88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="526:../EER/eer/EerParentSetEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7f6cc969f2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc8737020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc8725390"/></to>
    </wire>
    <wire loc="21:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc8737bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc872a020"/></to>
    </wire>
    <wire loc="22:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8736888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc872abd8"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc9653430"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc8734020"/></to>
    </wire>
    <wire loc="23:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc8734020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6cc87282a8"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc872a020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc872abd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6cc87282a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab9ea80"/></to>
    </wire>
    <wire loc="25:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7f6cc8724020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc872b398"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc872b398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc87171b0"/></to>
    </wire>
    <wire loc="26:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7f6cc8724c18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab8f020"/></to>
    </wire>
    <wire loc="27:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc8723700"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd9ab0"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc8717dc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc98654f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc87169d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc9650268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9650e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></to>
    </wire>
    <wire loc="52:../EER/eer/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc95ddd60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc86f4958"/></to>
    </wire>
    <wire loc="47:../EER/eer/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc86f4958"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc9bfb5f8"/></to>
    </wire>
    <wire loc="46:../EER/eer/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc86f5d68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9bff428"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../EER/eer/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9bc3390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f6cc86ee5c8"/></to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc95ca8f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc95c2020"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7f6cc95c69a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc95c4990"/></to>
    </wire>
    <wire loc="17:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6cc95c4990"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc9428668"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6cc95bd408"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6cc95afaa8"/></to>
    </wire>
    <wire loc="14:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6cc95afaa8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6cc942bbd8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f6cc9426cc8"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f6cc95bbd30"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6cc942bbd8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6cc9595498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6cc95a6a08"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6cc942cb90"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6cc942cb90"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6cc9597020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc942a740"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9425020"/></to>
    </wire>
    <wire loc="19:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc9425650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc942d7d0"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc942d7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc9599020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc942c430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc86e3430"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc86e3430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc946b848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9593858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc942a740"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc86dd430"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc9598208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6cc9594550"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc86e47d8"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc86e47d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc946c608"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cc9592550"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc86debd8"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc86debd8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6cc946e910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc9598208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc95290c8"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f6cc9595498"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f6cc95289e8"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6cc9597020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6cc9529968"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc9599020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc952b368"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9526550"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9593858"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f6cc9527718"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f6cc9594550"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cc9521590"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cc9592550"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f6cc9526b88"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc95144c0"/></to>
    </wire>
    <wire loc="88:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc95144c0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f6cc950b888"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cc9520020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6cc9484020"/></to>
    </wire>
    <wire loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6cc9484020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6ccacdfc58"/></to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc951d020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></to>
    </wire>
    <wire loc="89:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc950fcd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6cc9506260"/></to>
    </wire>
    <wire loc="87:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc9512c60"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc950b020"/></to>
    </wire>
    <wire loc="91:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f6cc9506ae8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f6cca938560"/></to>
    </wire>
    <wire loc="92:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f6cc9504968"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f6cca936560"/></to>
    </wire>
    <wire loc="93:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f6cc95027e0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f6cca934560"/></to>
    </wire>
    <wire loc="94:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f6cc9500658"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f6cca930560"/></to>
    </wire>
    <wire loc="95:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f6cc94fe558"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f6cca932560"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc86e2430"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc95144c0"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc86e3b90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc946a080"/></to>
    </wire>
    <wire loc="58:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc946a080"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc9461e20"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc946ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc86dd430"/></to>
    </wire>
    <wire loc="56:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc946b848"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc9462af8"/></to>
    </wire>
    <wire loc="106:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc9462af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc867a9a8"/></to>
    </wire>
    <wire loc="51:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f6cc946e910"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f6cc9468480"/></to>
    </wire>
    <wire loc="55:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc946c608"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc9463d80"/></to>
    </wire>
    <wire loc="105:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6cc9463d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6cc867bbb8"/></to>
    </wire>
    <wire loc="108:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc9461e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8678e20"/></to>
    </wire>
    <wire loc="52:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f6cc9467438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc950fcd0"/></to>
    </wire>
    <wire loc="57:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc94606d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc946ad80"/></to>
    </wire>
    <wire loc="59:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc94652a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc9461e20"/></to>
    </wire>
    <wire loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc9444268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc9461268"/></to>
    </wire>
    <wire loc="107:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc9461268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc8678268"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc945c478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc9512c60"/></to>
    </wire>
    <wire loc="109:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc86776f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc94606d8"/></to>
    </wire>
    <wire loc="111:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6cc8677e78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6cc867d9d8"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6cc8674020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc8647e50"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc945c478"/></to>
    </wire>
    <wire loc="82:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6cc86455b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6cc945cb98"/></to>
    </wire>
    <wire loc="84:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc8645b50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc9444268"/></to>
    </wire>
    <wire loc="85:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8644888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc9444e20"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f6cc9415640"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f6cc9426cc8"/></to>
    </wire>
    <wire loc="44:/home/muzi/tinyos-main//tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6cc940f5d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6ccaf37d30"/></to>
    </wire>
    <wire loc="47:/home/muzi/tinyos-main//tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f6cc940fcb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6cc94051f8"/></to>
    </wire>
    <wire loc="61:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6cc94051f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6cc93a12e8"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6cc93a12e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9397a08"/></to>
    </wire>
    <wire loc="63:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6cc94041c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6cc93fbb60"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc94038d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc93a8578"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc9403300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc93aa9a8"/></to>
    </wire>
    <wire loc="67:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9400c78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc93a7268"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6cc94015d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6cc93a9020"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6cc93a4ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6cc93973f0"/></to>
    </wire>
    <wire loc="60:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc939d5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cc93ff608"/></to>
    </wire>
    <wire loc="69:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6cc93a7bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc93a0ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6cc93a68c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc93a0270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f6cc9399ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f6cc9242020"/></to>
    </wire>
    <wire loc="64:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc93a0ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc926f020"/></to>
    </wire>
    <wire loc="65:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6cc93a0270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6cc9270868"/></to>
    </wire>
    <wire loc="66:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f6cc926fdb8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f6cc9399ba8"/></to>
    </wire>
    <wire loc="70:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc938ea40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cc939d5a8"/></to>
    </wire>
    <wire loc="71:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc926da50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cc939d5a8"/></to>
    </wire>
    <wire loc="72:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6cc9264bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6cc939d5a8"/></to>
    </wire>
    <wire loc="74:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6cc926e6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6cc938b9f8"/></to>
    </wire>
    <wire loc="75:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f6cc926d020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f6cc938f6f8"/></to>
    </wire>
    <wire loc="77:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6cc93859b0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6cc9268b38"/></to>
    </wire>
    <wire loc="78:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f6cc9384188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6cc95c4990"/></to>
    </wire>
    <wire loc="80:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f6cc9265c60"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f6cc95a6a08"/></to>
    </wire>
    <wire loc="332:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f6cc9332830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f6cc9369d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f6cc9335020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f6cc932f918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f6cc926b100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f6cc926b8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../EER/eer/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc922c020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc85cccb8"/></to>
    </wire>
    <wire loc="47:../EER/eer/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6cc85cccb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6cc9bfb5f8"/></to>
    </wire>
    <wire loc="46:../EER/eer/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6cc85cc100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6cc9bff428"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../EER/eer/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9bc3390"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f6cc85c6958"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SimpleEerC" loc="49:SimpleEerC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <documentation loc="45:/home/muzi/tinyos-main//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/muzi/tinyos-main//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/muzi/tinyos-main//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/muzi/tinyos-main//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/muzi/tinyos-main//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SimpleEerAppC.DataTimerC" loc="44(SimpleEerAppC.DataTimerC):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/muzi/tinyos-main//tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/muzi/tinyos-main//tos/system/StateC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/muzi/tinyos-main//tos/system/StateImplC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/muzi/tinyos-main//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/muzi/tinyos-main//tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/muzi/tinyos-main//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <documentation loc="30:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/muzi/tinyos-main//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/muzi/tinyos-main//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/muzi/tinyos-main//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/muzi/tinyos-main//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/muzi/tinyos-main//tos/system/StateC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/muzi/tinyos-main//tos/system/StateC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DefaultLplC" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <documentation loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; The minimum number of samples that must be taken in CC2420DutyCycleP&#10; that show the channel is not clear before a detection event is issued&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultLplP" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC" loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
        <short>&#10; Use this component to duty cycle the radio.</short>
        <long>&#10; Use this component to duty cycle the radio. When a message is heard, &#10; disable DutyCycling.&#10;&#10; @author David Moss dmm@rincon.com&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PowerCycleP" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC.RadioPowerStateC" loc="65(PowerCycleC.RadioPowerStateC):/home/muzi/tinyos-main//tos/system/StateC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.SplitControlStateC" loc="65(PowerCycleC.SplitControlStateC):/home/muzi/tinyos-main//tos/system/StateC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.OnTimerC" loc="44(PowerCycleC.OnTimerC):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.CheckTimerC" loc="44(PowerCycleC.CheckTimerC):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendStateC" loc="65(DefaultLplC.SendStateC):/home/muzi/tinyos-main//tos/system/StateC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.OffTimerC" loc="44(DefaultLplC.OffTimerC):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendDoneTimerC" loc="44(DefaultLplC.SendDoneTimerC):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:/home/muzi/tinyos-main//tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:/home/muzi/tinyos-main//tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:../EER/eer/CollectionC.nc">
      <documentation loc="34:../EER/eer/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="71:../EER/eer/CtpP.nc">
      <documentation loc="56:../EER/eer/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;&#10;  @author Miguel Navarro&#10;  @author Xiaoyang Zhong&#10;  @author Yimei Li&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="115(CtpP.Forwarder):../EER/eer/CtpForwardingEngineP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
            <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/home/muzi/tinyos-main//tos/system/PoolP.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f6cc99efa10"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/home/muzi/tinyos-main//tos/system/PoolP.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f6cc99efa10"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/home/muzi/tinyos-main//tos/system/QueueC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):../EER/eer/LruCtpMsgCacheC.nc">
      <documentation loc="32:../EER/eer/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):../EER/eer/LruCtpMsgCacheP.nc">
      <documentation loc="32:../EER/eer/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:../EER/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="3(CtpP.AMSenderC.SenderC):/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC" loc="47(CtpP.AMSenderC.SenderC.DirectAMSenderC):/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP):/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.LplAMSenderP" loc="1(CtpP.AMSenderC.SenderC.LplAMSenderP):/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="103(CtpP.Router):../EER/eer/EerParentSetEngineP.nc">
      <instance number="0">
        <component-ref qname="EerParentSetEngineP"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1843200">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ParentSelector" loc="40(CtpP.ParentSelector):../EER/eer_parentselection/EerParentSelectionP.nc">
      <instance number="0">
        <component-ref qname="EerParentSelectionP"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="3(CtpP.SendControl.SenderC):/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC" loc="47(CtpP.SendControl.SenderC.DirectAMSenderC):/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP):/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendControl.SenderC.LplAMSenderP" loc="1(CtpP.SendControl.SenderC.LplAMSenderP):/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="EerInstrumentationP" loc="41:../EER/eer/EerInstrumentationP.nc">
      <module/>
    </component>
    <component qname="EerHealthP" loc="41:../EER/eer/EerHealthP.nc">
      <module/>
    </component>
    <component qname="SimpleEerAppC.CollectionSenderC" loc="43(SimpleEerAppC.CollectionSenderC):../EER/eer/CollectionSenderC.nc">
      <documentation loc="32:../EER/eer/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleEerAppC.CollectionSenderC.CollectionSenderP" loc="34(SimpleEerAppC.CollectionSenderC.CollectionSenderP):../EER/eer/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleEerAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(SimpleEerAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):../EER/CollectionIdP.nc">
      <documentation loc="35:../EER/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <documentation loc="30:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/muzi/tinyos-main//tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/usr/src/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/usr/src/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/usr/src/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/muzi/tinyos-main//tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/muzi/tinyos-main//tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleEerAppC.SummaryTimerC" loc="44(SimpleEerAppC.SummaryTimerC):/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleEerAppC.SummarySenderC" loc="43(SimpleEerAppC.SummarySenderC):../EER/eer/CollectionSenderC.nc">
      <documentation loc="32:../EER/eer/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:205">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleEerAppC.SummarySenderC.CollectionSenderP" loc="34(SimpleEerAppC.SummarySenderC.CollectionSenderP):../EER/eer/CollectionSenderP.nc">
      <instance number="1">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleEerAppC.SummarySenderC.CollectionSenderP.CollectionIdP" loc="45(SimpleEerAppC.SummarySenderC.CollectionSenderP.CollectionIdP):../EER/CollectionIdP.nc">
      <documentation loc="35:../EER/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f6ccae89b00" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f6ccae89e78" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f6ccae86230" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f6ccae86588" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f6ccae868e0" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f6ccae86c30" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f6ccae85020" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f6ccae85388" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f6ccae85738" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f6ccae4c938" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f6ccae4cce8" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6ccad19a20" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6ccad19a20"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6ccacd9c10" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6ccacd9c10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6ccacc4598" loc="55:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6ccacc4598"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6ccacc4d00" loc="56:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6ccacc4d00"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6ccacc3110" loc="57:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6ccacc3110"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6ccacc3888" loc="58:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6ccacc3888"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6ccacc3c30" loc="59:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f6ccacc1418" loc="60:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f6ccacc1418"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6ccaca2020" loc="52:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6ccaca2020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6ccaca2788" loc="53:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6ccaca2788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6ccaca2b50" loc="54:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6ccaca2b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6ccaca1348" loc="55:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6ccaca1348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6ccaca16f0" loc="56:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccac65068" loc="46:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccac65068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccac344c0" loc="46:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccac344c0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f6ccac347d0" loc="46:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccabe6510" loc="46:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccabe6510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f6cca912998" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f6cca912d20" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f6cca911108" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f6cca911490" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f6cca9117e0" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/muzi/tinyos-main//tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6cca356998" loc="89:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f6cca348510" loc="42:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/muzi/tinyos-main//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f6cca330a88" loc="52:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6cca104c48" loc="52:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6cca104c48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6cca100398" loc="52:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6cca100398"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="115:../EER/eer/CtpForwardingEngineP.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/muzi/tinyos-main//tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f6cc99efa10" loc="41:/home/muzi/tinyos-main//tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f6cc99efa10"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f6cc99efd60" loc="41:/home/muzi/tinyos-main//tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/muzi/tinyos-main//tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/muzi/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f6cc99e89e0" loc="53:/home/muzi/tinyos-main//tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f6cc99e89e0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f6cc99e8d00" loc="53:/home/muzi/tinyos-main//tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/muzi/tinyos-main//tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f6cc99be198" loc="42:/home/muzi/tinyos-main//tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f6cc99be198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f6cc99be4f0" loc="42:/home/muzi/tinyos-main//tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:../EER/eer/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:../EER/eer/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7f6cc99a0b88" loc="38:../EER/eer/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:../EER/eer/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:../EER/eer/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f6cc999a900" loc="43:../EER/eer/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/muzi/tinyos-main//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6cc9891c90" loc="47:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x7f6cc988a360" loc="3:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6cc9884e68" loc="47:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6cc987c8b8" loc="43:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f6cc9862738" loc="45:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LplAMSenderP" loc="1:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6cc97e7da0" loc="43:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6cc97d9020" loc="44:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="EerParentSetEngineP" loc="103:../EER/eer/EerParentSetEngineP.nc" abstract="">
      <parameters>
        <constant name="routingTableSize" ref="0x7f6cc97c6e70" loc="103:../EER/eer/EerParentSetEngineP.nc">
          <component-ref qname="EerParentSetEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7f6cc97c4208" loc="103:../EER/eer/EerParentSetEngineP.nc">
          <component-ref qname="EerParentSetEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7f6cc97c4578" loc="103:../EER/eer/EerParentSetEngineP.nc">
          <component-ref qname="EerParentSetEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="EerParentSelectionP" loc="40:../EER/eer_parentselection/EerParentSelectionP.nc" abstract="">
      <parameters>
        <constant name="parentTableSize" ref="0x7f6cc9699bc8" loc="40:../EER/eer_parentselection/EerParentSelectionP.nc">
          <component-ref qname="EerParentSelectionP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:../EER/eer/CollectionSenderC.nc" abstract="">
      <documentation loc="32:../EER/eer/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f6cc95dc238" loc="43:../EER/eer/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:../EER/eer/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7f6cc95d7020" loc="35:../EER/eer/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7f6cc95d7368" loc="35:../EER/eer/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:../EER/CollectionIdP.nc" abstract="">
      <documentation loc="35:../EER/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f6cc95d2020" loc="45:../EER/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/muzi/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SummarySend" ref="0x7f6ccaf696b8" loc="61:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SummarySend" scoped="" ref="0x7f6ccaf696b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccaf69a08"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccaf69b90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccaf69d18"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccaf68020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccaf681a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f6ccaf55c48" loc="66:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f6ccaf55c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f6ccaf57020"/>
        <function-ref name="setRoot" scoped="" ref="0x7f6ccaf571a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f6ccaf57330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f6ccaf867a0" loc="50:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6ccaf867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6ccaf86af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f6ccaf87020" loc="51:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f6ccaf87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6ccaf87370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6ccaf874f8"/>
        <function-ref name="start" scoped="" ref="0x7f6ccaf87680"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccaf87808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f6ccaf75278" loc="53:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6ccaf75278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccaf755c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccaf75750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccaf758d8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccaf75a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccaf75be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x7f6ccaf6c598" loc="54:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x7f6ccaf6c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccaf6b8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaf76020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccaf76d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccaf768c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccaf691c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccaf6bd40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccaf76470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccaf81118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccaf6b320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccaf815b8"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccaf81a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EerInstrumentation" ref="0x7f6ccaf58588" loc="63:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6ccaf58588"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerInstrumentation"/>
      </instance>
      <interface-functions>
        <function-ref name="summary" scoped="" ref="0x7f6ccaf61020"/>
        <function-ref name="ctrl_tricklereset" scoped="" ref="0x7f6ccaf58a60"/>
        <function-ref name="summary_size" scoped="" ref="0x7f6ccaf58be8"/>
        <function-ref name="data_pktdup" scoped="" ref="0x7f6ccaf58d70"/>
        <function-ref name="ctrl_txpkt" scoped="" ref="0x7f6ccaf62020"/>
        <function-ref name="init" scoped="" ref="0x7f6ccaf621a8"/>
        <function-ref name="data_queuedrop" scoped="" ref="0x7f6ccaf62330"/>
        <function-ref name="data_txpkt" scoped="" ref="0x7f6ccaf624b8"/>
        <function-ref name="data_rxpkt" scoped="" ref="0x7f6ccaf62640"/>
        <function-ref name="ctrl_rxpkt" scoped="" ref="0x7f6ccaf627c8"/>
        <function-ref name="data_rxack" scoped="" ref="0x7f6ccaf62950"/>
        <function-ref name="data_inconsistent" scoped="" ref="0x7f6ccaf62ad8"/>
        <function-ref name="set_total_time" scoped="" ref="0x7f6ccaf62c60"/>
        <function-ref name="ctrl_parentchange" scoped="" ref="0x7f6ccaf588d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f6ccaf7f528" loc="52:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f6ccaf7f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6ccaf7f878"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccaf7fa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SummaryTimer" ref="0x7f6ccaf68670" loc="62:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SummaryTimer" scoped="" ref="0x7f6ccaf68670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccaf648f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaf66020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccaf66d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccaf668c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccaf631c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccaf64d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccaf66470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccaf671e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccaf64320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccaf67688"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccaf67b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMessage" ref="0x7f6ccaf48020" loc="138:SimpleEerC.nc">
      <component-ref qname="SimpleEerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendMessage" scoped="" ref="0x7f6ccaf48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccaf48370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccaf484f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6ccaf311b0" loc="58:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccaf311b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf31500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6ccaf37d30" loc="57:/home/muzi/tinyos-main//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6ccaf37d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6ccaf340d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaf30020" loc="42:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaf30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf30370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f6ccaf2b020" loc="6:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f6ccaf2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf2b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaf2d198" loc="4:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaf2d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf2d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f6ccaf2d868" loc="5:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f6ccaf2d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf2dbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f6ccaf2b6c0" loc="7:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f6ccaf2b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf2ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaf25080" loc="2:/home/muzi/tinyos-main//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaf25080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf253d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f6ccaf2e8e8" loc="39:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f6ccaf2e8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf2ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f6ccaf06bf0" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6ccaf06bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6ccaf0bad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6ccaf0b1a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6ccaf0b330"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6ccaf0b4b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6ccaf0b020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6ccaf0b640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6ccaf0b7c8"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6ccaf0b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaf0f730" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaf0f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaf0fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f6ccaef6340" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6ccaef6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6ccaef51a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6ccaef6818"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6ccaef69a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6ccaef6b28"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6ccaef6690"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6ccaef6cb0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6ccaef6e38"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6ccaef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f6ccaef54d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6ccaef54d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6ccaef5828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaef7bc0" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaef7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaef6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f6ccaeb3d30" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f6ccaeb3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccaeb20d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccaeb2260"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaeb23e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccaeb2570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccaeb26f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaeb2880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccaeb2a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccaeb2b90"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccaeb2d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f6ccaea1020" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f6ccaea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccaea1370"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccaea14f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaea1680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccaea1808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccaea1990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaea1b18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccaea1ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccaea1e28"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccaea0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f6ccaeaa6e0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f6ccaeaa6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaeaaa30"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccaeaabb8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccaeaad40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaea9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaea91a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccaea9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f6ccae8f3d0" loc="68:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f6ccae8f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae8f720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae8f8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae8fa30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae8fbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae8fd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f6ccaeb0d80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f6ccaeb0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaeaf170"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccaeaf2f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccaeaf480"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccaeaf608"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaeaf790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f6ccae96868" loc="61:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f6ccae96868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae96bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae96d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae95020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae951a8"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f6ccae8c3d0" loc="71:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f6ccae8c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae8c720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae8c8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae8ca30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae8cbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae8cd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f6ccae9c120" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f6ccae9c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccae9c470"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccae9c5f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae9c780"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccae9c908"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccae9ca90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae9cc18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae9cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae9b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f6ccaeb44d0" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f6ccaeb44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccaeb4820"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccaeb49a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaeb4b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccaeb4cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccaeb4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaebc020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccaebc1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccaebc330"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccaebc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f6ccae913d0" loc="66:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f6ccae913d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae91720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae918a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae91a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae91bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae91d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f6ccae98d40" loc="59:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f6ccae98d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae970d8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae97260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae973e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae97570"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae976f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f6ccaea0400" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f6ccaea0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccaea0850"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccaea09d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaea0b60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccaea0ce8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccaea0e70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae9f020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae9f1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae9f330"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae9f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f6ccaea96e0" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f6ccaea96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaea9a30"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccaea9bb8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccaea9d40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaea3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaea31a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccaea3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f6ccae8e3d0" loc="69:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f6ccae8e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae8e720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae8e8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae8ea30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae8ebb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae8ed40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f6ccae9f898" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f6ccae9f898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccae9fbe8"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccae9fd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae9e020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccae9e1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccae9e330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae9e4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae9e640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae9e7c8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae9e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f6ccaeafb40" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f6ccaeafb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaeac020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccaeac1a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccaeac330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccaeac4b8"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaeac640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f6ccaec4060" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f6ccaec4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccaec43b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccaec4538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaec46c0"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaec4848"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaec49d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaec4b58"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccaec4ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaec4e68"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccaec3020"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccaec31a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccaec3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f6ccae956e0" loc="62:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f6ccae956e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae95a30"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae95bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae95d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae94020"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f6ccaebc898" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f6ccaebc898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccaebcbe8"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccaebcd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaeb3020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccaeb31a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccaeb3330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaeb34b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccaeb3640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccaeb37c8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccaeb3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f6ccae9b588" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f6ccae9b588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccae9b8d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccae9ba60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae9bbe8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccae9bd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccae9a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae9a1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae9a330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae9a4b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f6ccaea5710" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f6ccaea5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaea5a60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccaea5be8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccaea5d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaeaa020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaeaa1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccaeaa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f6ccae903d0" loc="67:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f6ccae903d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae90720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae908a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae90a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae90bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae90d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f6ccaeb0060" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f6ccaeb0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaeb03b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccaeb0538"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccaeb06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccaeb0848"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaeb09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f6ccae97aa8" loc="60:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f6ccae97aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae97df8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae96020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae961a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae96330"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae964b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f6ccae8d3d0" loc="70:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f6ccae8d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae8d720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae8d8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae8da30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae8dbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae8dd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f6ccae9ed30" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f6ccae9ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccae9d0d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccae9d260"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae9d3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccae9d570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccae9d6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae9d880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae9da08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae9db90"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae9dd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f6ccaea36a8" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f6ccaea36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccaea39f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccaea3b80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaea3d08"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaea2020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaea21a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaea2330"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccaea24b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaea2640"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccaea27c8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccaea2950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccaea2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f6ccae94558" loc="63:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f6ccae94558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae948a8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae94a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae94bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae94d40"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f6ccae923d0" loc="65:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f6ccae923d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae92720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae928a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae92a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae92bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae92d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f6ccae933d0" loc="64:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f6ccae933d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae93920"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae93aa8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae93c30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae93db8"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f6ccae98020" loc="58:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f6ccae98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae98370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae984f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae98680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae98808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae98990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f6ccae9aa20" loc="57:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f6ccae9aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccae9ad70"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccae99020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae991a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccae99330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccae994b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae99640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae997c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae99950"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae99ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f6ccae56d18" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6ccae56d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae540a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f6ccae56700" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f6ccae56700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae56a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f6ccae54368" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6ccae54368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae546b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f6ccae560c8" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccae560c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae56438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6ccae58960" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccae58960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccae58cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccae58e38"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae57020"/>
        <function-ref name="get" scoped="" ref="0x7f6ccae571a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae57330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae574b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccae57640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae577c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccae57950"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccae57ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccae57c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f6ccae4e638" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f6ccae4e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae4e988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f6ccae4e020" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f6ccae4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae4e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f6ccae4ec50" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f6ccae4ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f6ccae4f8a0" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccae4f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae4fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6ccae501e8" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccae501e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccae50538"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccae506c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae50848"/>
        <function-ref name="get" scoped="" ref="0x7f6ccae509d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae50b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae50ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccae50e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae4f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccae4f1a8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccae4f330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccae4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccae05c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccae05c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae04020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccae041a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccae04330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae044b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae04640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccae047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccae4ac80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccae4ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccae06020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccae061a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae06330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccae064b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccae06640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae067c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccae06950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccae06ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccae06c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccae02100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccae02100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccae02450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccae05020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccae05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccae05370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccae054f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccae05680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccae05808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccae05990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccae04a90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccae04a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccae04de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccae03020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccae031a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccae03330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccae034b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccae03640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccae037c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccae03950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccae03ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccae03c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccae03de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadfec58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadfec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadfc020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadfc1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadfc330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadfc4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadfc640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadfc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccae00c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccae00c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadff020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadff1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadff330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadff4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadff640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadff7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadff950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadffad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadffc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadfa100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadfa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadfa450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadfe020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadfe370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadfe4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadfe680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadfe808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadfe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadfca90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadfca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadfcde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadfb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadfb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadfb330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadfb4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadfb640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadfb7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadfb950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadfbad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadfbc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadfbde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadf6c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadf6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadf5020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadf51a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadf5330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadf54b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadf5640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadf57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccadf8c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccadf8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadf7020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadf71a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadf7330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadf74b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadf7640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadf77c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadf7950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadf7ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadf7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadf3100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadf3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadf3450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadf6020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadf6370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadf64f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadf6680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadf6808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadf6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadf5a90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadf5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadf5de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadf4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadf41a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadf4330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadf44b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadf4640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadf47c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadf4950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadf4ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadf4c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadf4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadefc58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadefc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccaded020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccaded1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccaded330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaded4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaded640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccaded7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccadf1c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccadf1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadf0020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadf01a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadf0330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadf04b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadf0640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadf07c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadf0950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadf0ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadf0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadeb100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadeb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadeb450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadef020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadef370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadef4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadef680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadef808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadef990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadeda90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadeda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadedde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadec020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadec1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadec330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadec4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadec640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadec7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadec950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadecad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadecc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadecde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccade7c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccade7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccade6020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccade61a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccade6330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccade64b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccade6640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccade67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccade9c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccade9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccade8020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccade81a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccade8330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccade84b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccade8640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccade87c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccade8950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccade8ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccade8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccade4100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccade4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccade4450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccade7020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccade7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccade7370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccade74f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccade7680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccade7808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccade7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccade6a90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccade6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccade6de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccade5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccade51a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccade5330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccade54b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccade5640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccade57c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccade5950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccade5ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccade5c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccade5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccade0c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccade0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadde020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadde1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadde330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadde4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadde640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadde7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccade2c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccade2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccade1020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccade11a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccade1330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccade14b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccade1640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccade17c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccade1950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccade1ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccade1c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccaddc100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccaddc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccaddc450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccade0020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccade0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccade0370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccade04f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccade0680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccade0808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccade0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccaddea90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccaddea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccaddede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccaddd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccaddd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaddd330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccaddd4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaddd640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccaddd7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaddd950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadddad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadddc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadddde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadd8c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadd8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadd7020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadd71a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadd7330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadd74b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadd7640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadd77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccaddac80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccaddac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadd9020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadd91a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadd9330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadd94b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadd9640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadd97c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadd9950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadd9ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadd9c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadd5100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadd5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadd5450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadd8020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadd8370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadd84f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadd8680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadd8808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadd8990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadd7a90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadd7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadd7de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadd6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadd61a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadd6330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadd64b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadd6640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadd67c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadd6950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadd6ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadd6c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadd6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadd1c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadd1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadcf020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadcf1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadcf330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadcf4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadcf640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadcf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccadd3c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccadd3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadd2020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadd21a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadd2330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadd24b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadd2640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadd27c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadd2950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadd2ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadd2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadcd100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadcd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadcd450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadd1020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadd1370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadd14f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadd1680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadd1808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadd1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadcfa90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadcfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadcfde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadce020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadce1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadce330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadce4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadce640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadce7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadce950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadcead8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadcec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadcede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadc9c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadc9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadc8020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadc81a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadc8330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadc84b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadc8640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadc87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccadcbc80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccadcbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadca020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadca1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadca330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadca4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadca640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadca7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadca950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadcaad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadcac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadc6100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadc6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadc6450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadc9020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadc9370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadc94f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadc9680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadc9808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadc9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadc8a90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadc8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadc8de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadc7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadc71a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadc7330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadc74b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadc7640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadc77c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadc7950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadc7ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadc7c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadc7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6ccadc2c58" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6ccadc2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadc1020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6ccadc11a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6ccadc1330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadc14b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadc1640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6ccadc17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f6ccadc4c80" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f6ccadc4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccadc3020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccadc31a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadc3330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccadc34b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccadc3640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadc37c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccadc3950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccadc3ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccadc3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f6ccadbe100" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f6ccadbe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadbe450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6ccadc2020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f6ccadc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccadc2370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccadc24f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccadc2680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccadc2808"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccadc2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6ccadc1a90" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccadc1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccadc1de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccadbf020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccadbf1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccadbf330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccadbf4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccadbf640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccadbf7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccadbf950"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccadbfad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccadbfc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccadbfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f6ccadb9b60" loc="7:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f6ccadb9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f6ccadba520" loc="4:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f6ccadba520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadba870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f6ccadbac68" loc="5:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f6ccadbac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f6ccadb9418" loc="6:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f6ccadb9418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccadb9768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f6ccb099cc0" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6ccb099cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6ccb3050a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f6ccb463e08" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f6ccb463e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f6ccb3df1a8"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f6ccb3df330"/>
        <function-ref name="sleep" scoped="" ref="0x7f6ccb3df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f6ccb169580" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f6ccb169580"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6ccb1698d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f6ccaf0eaa8" loc="39:/home/muzi/tinyos-main//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f6ccaf0eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f6ccad85950"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f6ccad85020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f6ccad851a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f6ccad85330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f6ccaf0edf8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f6ccad854b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f6ccad85640"/>
        <function-ref name="initClocks" scoped="" ref="0x7f6ccad857c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6ccad79418" loc="60:/home/muzi/tinyos-main//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6ccad79418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccad79768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6ccaf33c38" loc="57:/home/muzi/tinyos-main//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6ccaf33c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6ccad86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f6ccad86ce0" loc="59:/home/muzi/tinyos-main//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f6ccad86ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccad790a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f6ccad86308" loc="58:/home/muzi/tinyos-main//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6ccad86308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccad86658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6ccad867e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6ccad86968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6ccb4961c8" loc="48:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb4961c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccb496518"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccb4966a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6ccb461390" loc="47:/home/muzi/tinyos-main//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6ccb461390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccb4616e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6ccb461868"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6ccb4619f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6ccb0247f8" loc="56:/home/muzi/tinyos-main//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f6ccb0247f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccb024b48"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccb024cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f6ccb01fb48" loc="57:/home/muzi/tinyos-main//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f6ccb01fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f6ccb021020"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f6ccb0211a8"/>
        <function-ref name="sleep" scoped="" ref="0x7f6ccb021330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6ccb026940" loc="55:/home/muzi/tinyos-main//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f6ccb026940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccb026c90"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6ccb026e18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6ccb024020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6ccad6fa60" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleEerAppC.DataTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccad6fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccabd3d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccabd4470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccabd31c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccabd4d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccabd2648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccabd21f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccabd48c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccabd6620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccabd3790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccabd6ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccabd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6ccad69b60" loc="49:/home/muzi/tinyos-main//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad69b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccad63d98"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccad654d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccad631f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccad65d78"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccad62688"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccad62238"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccad65928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccad666f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccad637c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccad66b90"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccad65088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6ccad5d208" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f6ccad5d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccad5a5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccad5cb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccad5b8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccad5b470"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccad58020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccad5aa40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccad5b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccad5dd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccad5a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccad5c238"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccad5c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6ccad55980" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6ccad55980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccad57560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccad604d8" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccad604d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccad60828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6ccac6dc00" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6ccac6dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccac69410"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccac6b4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6ccac6bdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccac6b930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6ccac69898"/>
        <function-ref name="start" scoped="" ref="0x7f6ccac6c9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccac6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccac6d418" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccac6d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccac6d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc90ab808" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc90ab808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc90a8020"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc90a9020"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc90a9930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc90a94a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc90a84a8"/>
        <function-ref name="start" scoped="" ref="0x7f6cc90aa598"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc90aaa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc90ab020" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc90ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc90ab370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6cc9093020" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc9093020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6cc9093370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6cc90934f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6cc9093680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6cc9093808"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9093990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6cc90965e0" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc90965e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9096930"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cc9096ab8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc9096c40"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9096dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc9095020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc90951a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc9095330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc90954b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc9095640"/>
        <function-ref name="setMode" scoped="" ref="0x7f6cc90957c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6cc9095950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6cc9095bd8" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc9095bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6cc9094020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6cc90941a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc9094330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6cc90944b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6cc9094640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc90947c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6cc9094950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6cc9094ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6cc9094c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6ccad33cb8" loc="52:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6ccad33cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6ccad320a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6ccad32228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6ccad323b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6ccad32538"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccad326c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6ccad37858" loc="50:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccad37858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccad37ba8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccad37d30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccad36020"/>
        <function-ref name="get" scoped="" ref="0x7f6ccad361a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccad36330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccad364b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccad36640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccad367c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccad36950"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccad36ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccad36c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6ccad344d0" loc="51:/home/muzi/tinyos-main//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6ccad344d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6ccad34820"/>
        <function-ref name="getControl" scoped="" ref="0x7f6ccad349a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccad34b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6ccad34cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6ccad34e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccad33020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6ccad331a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6ccad33330"/>
        <function-ref name="setControl" scoped="" ref="0x7f6ccad334b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f6cc90858c8" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc90858c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6cc9085c18"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6cc9085da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6cc9084020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6cc90841a8"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9084330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6cc9087020" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc9087020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9087370"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cc90874f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc9087680"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9087808"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc9087990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc9087b18"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc9087ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc9087e28"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc9086020"/>
        <function-ref name="setMode" scoped="" ref="0x7f6cc90861a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6cc9086330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc908b020" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc908b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9088690"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc90896f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc9088088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9089b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc9088b18"/>
        <function-ref name="start" scoped="" ref="0x7f6cc908bd70"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9089270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc908c7a8" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc908c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc908caf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6cc90865b8" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc90865b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6cc9086908"/>
        <function-ref name="getControl" scoped="" ref="0x7f6cc9086a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc9086c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6cc9086da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6cc9085020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc90851a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6cc9085330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6cc90854b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6cc9085640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6ccace1dd8" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6ccace1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccace6be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccace5548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccace50c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccace59d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f6ccacdfc58" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f6ccacdfc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccacdc9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccacda330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccacdce78"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccacda7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6ccacc92a0" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6ccacc92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccacc95f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6ccacc9778"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6ccacc9900"/>
        <function-ref name="get" scoped="" ref="0x7f6ccacc9a88"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6ccacc9c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccacc9d98"/>
        <function-ref name="getMode" scoped="" ref="0x7f6ccacc8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccacc81a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccacc8330"/>
        <function-ref name="setMode" scoped="" ref="0x7f6ccacc84b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6ccacc8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6ccacd7330" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6ccacd7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccaccb0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaccb9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaccb548"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccaccbe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6ccaca9e20" loc="63:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f6ccaca9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccaca8be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaca7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccaca70c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccaca79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6ccacc5c50" loc="62:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6ccacc5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccacab9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccaca9330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccacabe78"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccaca97b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc90a5830" loc="61:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc90a5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc90a2020"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc90a3020"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc90a3930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc90a34a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc90a24a8"/>
        <function-ref name="start" scoped="" ref="0x7f6cc90a45e0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc90a4ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f6cc909fce8" loc="73:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f6cc909fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc909c410"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc909d4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc909ddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc909d930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc909c898"/>
        <function-ref name="start" scoped="" ref="0x7f6cc909eac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc909d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6cc90a2ad0" loc="68:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cc90a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc90a1860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc909f1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc90a1ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc909f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f6ccac39020" loc="74:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f6ccac39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccac39370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccac394f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f6ccac3c020" loc="49:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6ccac3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccac3a690"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccac3b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6ccac3a088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccac3bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6ccac3ab18"/>
        <function-ref name="start" scoped="" ref="0x7f6ccac3cd70"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccac3b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6ccac66d88" loc="48:/home/muzi/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccac66d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccac3e088"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccac406c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccac3f470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccac3f020"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccac3e928"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccac3e4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccac40b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccac41908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccac3fa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccac41da8"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccac40278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f6ccabea478" loc="71:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f6ccabea478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccabea7c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccabea950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f6ccabef208" loc="49:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f6ccabef208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccabeb5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccabeeb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccabed8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccabed470"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccabea020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccabeba40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccabed020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccabefd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccabeb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccabee238"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccabee6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6ccabf5020" loc="48:/home/muzi/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6ccabf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccabf1358"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccabf49b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6ccabf2748"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6ccabf22d8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6ccabf1c38"/>
        <function-ref name="gett0" scoped="" ref="0x7f6ccabf17c8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccabf4e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6ccabf5b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6ccabf2d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6ccabf4088"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccabf4548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6ccabe8c38" loc="48:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6ccabe8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccabe7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6ccabe7e48" loc="49:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6ccabe7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6ccabddbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6ccabdc548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6ccabdc0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6ccabdc9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6ccabd1b78" loc="61:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6ccabd1b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6ccabce020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6ccabce1a8"/>
        <function-ref name="start" scoped="" ref="0x7f6ccabce330"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccabce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6ccabcd3e8" loc="63:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6ccabcd3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccabcd738"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccabcd8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccabcda48"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccabcdbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccabcdd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6ccabc2b68" loc="65:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6ccabc2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccabc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6ccabb40d0" loc="67:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6ccabb40d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccabb4420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6ccabb45a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccabb4730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccabb48b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6ccabb4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6ccab95710" loc="70:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6ccab95710"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6ccaba2c58"/>
        <function-ref name="clear" scoped="" ref="0x7f6ccab9d380"/>
        <function-ref name="isValid" scoped="" ref="0x7f6ccaba2578"/>
        <function-ref name="set" scoped="" ref="0x7f6ccab9da60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6ccab8f020" loc="72:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6ccab8f370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6ccab8f4f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6ccab8f680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6ccab8f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6ccabc2020" loc="64:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6ccabc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccabc2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6ccab9ea80" loc="69:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab9ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6ccab9edd0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6ccaba3020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6ccaba31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6ccaba48a0" loc="68:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6ccaba48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6ccaba4bf0"/>
        <function-ref name="source" scoped="" ref="0x7f6ccaba4d78"/>
        <function-ref name="address" scoped="" ref="0x7f6ccabbf020"/>
        <function-ref name="destination" scoped="" ref="0x7f6ccabbf1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6ccabbf330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6ccabbf4b8"/>
        <function-ref name="type" scoped="" ref="0x7f6ccabbf640"/>
        <function-ref name="setType" scoped="" ref="0x7f6ccabbf7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6ccabbf950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6ccabbfad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6ccabbfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6ccab94670" loc="71:/home/muzi/tinyos-main//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6ccab94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6ccab93ad0"/>
        <function-ref name="clear" scoped="" ref="0x7f6ccab921f0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6ccab933f0"/>
        <function-ref name="set" scoped="" ref="0x7f6ccab928d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6ccab7db90" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab7db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6ccab7c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6ccab7c1a8"/>
        <function-ref name="start" scoped="" ref="0x7f6ccab7c330"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccab7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6ccab742e0" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab742e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6ccab74630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6ccab747b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6ccab74940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6ccab74ac8"/>
        <function-ref name="setCca" scoped="" ref="0x7f6ccab74c50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6ccab74dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6ccab56b50" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f6ccab56b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6ccab61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6ccab775b8" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6ccab775b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccab77908"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6ccab77a90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab77c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab77da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6ccab76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6ccab7cc30" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6ccab7cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccab7b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab7b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab7b330"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccab7b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccab7b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6ccab7a968" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6ccab7a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccab7acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6ccab6e3b0" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab6e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6ccab6e700"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6ccab6e888"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6ccab6ea10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6ccab6eb98"/>
        <function-ref name="getPower" scoped="" ref="0x7f6ccab6ed20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6ccab75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6ccab63170" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab63170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6ccab634c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6ccab63648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6ccab637d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6ccab63958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6ccab7bdc0" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6ccab7bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccab7a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6ccab75348" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab75348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6ccab75698"/>
        <function-ref name="noAck" scoped="" ref="0x7f6ccab75820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6ccab759a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6ccab62020" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6ccab62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6ccab62370"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6ccab624f8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6ccab62680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6ccab62808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6ccab62990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6ccab78020" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6ccab78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6ccab78370"/>
        <function-ref name="source" scoped="" ref="0x7f6ccab784f8"/>
        <function-ref name="address" scoped="" ref="0x7f6ccab78680"/>
        <function-ref name="destination" scoped="" ref="0x7f6ccab78808"/>
        <function-ref name="setSource" scoped="" ref="0x7f6ccab78990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6ccab78b18"/>
        <function-ref name="type" scoped="" ref="0x7f6ccab78ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f6ccab78e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6ccab77020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6ccab771a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6ccab77330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6ccab69398" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6ccab69398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6ccab696e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6ccab5a878" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab5a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6ccab5abc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6ccab5ad50"/>
        <function-ref name="start" scoped="" ref="0x7f6ccab54020"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccab541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6ccab49630" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6ccab49630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6ccab49980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6ccab48768" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6ccab48768"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6ccab48ab8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6ccab48c40"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6ccab48dc8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6ccab47020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6ccab471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6ccab4ce28" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab4ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6ccab4b1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6ccab4b330"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6ccab4b4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6ccab4b640"/>
        <function-ref name="getPower" scoped="" ref="0x7f6ccab4b7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6ccab4b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6ccab4d9e0" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6ccab4d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccab4dd30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab4c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab4c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccab4c330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccab4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6ccab49c78" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6ccab49c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6ccab48020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6ccab481a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6ccab48330"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6ccab484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6ccab52670" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f6ccab52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccab529c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6ccab4bc78" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6ccab4bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6ccab49020"/>
        <function-ref name="noAck" scoped="" ref="0x7f6ccab491a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6ccab49330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6ccab4eb38" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6ccab4eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccab53020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccab531a8"/>
        <function-ref name="request" scoped="" ref="0x7f6ccab53330"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccab534b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccab53640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6ccab53950" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f6ccab53950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccab53ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab53e28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab52020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccab521a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccab52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6ccab52cf0" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6ccab52cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6ccab4d0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6ccab4d228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab4d3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab4d538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6ccab4d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6ccab4c810" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6ccab4c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccab4cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6ccab47e28" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab47e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6ccab441a8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6ccab44330"/>
        <function-ref name="start" scoped="" ref="0x7f6ccab444b8"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccab44640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6ccab43c58" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab43c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6ccab42020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6ccab421a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6ccab42330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6ccab424b8"/>
        <function-ref name="setCca" scoped="" ref="0x7f6ccab42640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6ccab427c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6ccab448f8" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6ccab448f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccab44c48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab44dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab43020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccab431a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccab43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6ccab43600" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6ccab43600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6ccab43950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6ccab41770" loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6ccab41770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6ccab41ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6ccab41c48"/>
        <function-ref name="start" scoped="" ref="0x7f6ccab41dd0"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccab3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6ccab3d020" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6ccab3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6ccab3d370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6ccab3d4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6ccab3d680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6ccab3d808"/>
        <function-ref name="setCca" scoped="" ref="0x7f6ccab3d990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6ccab3db18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6ccab34558" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f6ccab34558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6ccab348a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6ccab34a30"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6ccab34bb8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6ccab34d40"/>
        <function-ref name="setCca" scoped="" ref="0x7f6ccab33020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6ccab331a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6ccab2ade0" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6ccab2ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6ccab1e170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6ccab1e2f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6ccab1e480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6ccab1e608"/>
        <function-ref name="getPower" scoped="" ref="0x7f6ccab1e790"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6ccab1e918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f6ccab2d7a8" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6ccab2d7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccab2daf8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccab2dc80"/>
        <function-ref name="modify" scoped="" ref="0x7f6ccab2de08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccab34020"/>
        <function-ref name="resend" scoped="" ref="0x7f6ccab341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6ccab3e2d8" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6ccab3e2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6ccab3e628"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab3e7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6ccab3e938"/>
        <function-ref name="cancel" scoped="" ref="0x7f6ccab3eac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6ccab3ec48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6ccab298d0" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6ccab298d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6ccab29c20"/>
        <function-ref name="rand32" scoped="" ref="0x7f6ccab29da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6ccab3a060" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6ccab3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6ccab3a3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccab3a538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6ccab1d020" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6ccab1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6ccab1d370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6ccab1d4f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6ccab1d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f6ccab35e38" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccab35e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6ccab3b1c0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6ccab3b348"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6ccab3b4d0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6ccab3b658"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6ccab3b7e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6ccab3b968"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6ccab3baf0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6ccab3bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6ccab1f760" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6ccab1f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6ccab1fab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6ccab1fc38"/>
        <function-ref name="led1On" scoped="" ref="0x7f6ccab1fdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6ccab2a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6ccab2a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccab2a330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6ccab2a4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6ccab2aad8"/>
        <function-ref name="set" scoped="" ref="0x7f6ccab2a640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6ccab2a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6ccab2a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6ccab3ddf8" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6ccab3ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccab3c170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccab3c2f8"/>
        <function-ref name="request" scoped="" ref="0x7f6ccab3c480"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccab3c608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccab3c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f6ccab113e8" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f6ccab113e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6ccab11838"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6ccab119c0"/>
        <function-ref name="isState" scoped="" ref="0x7f6ccab11b48"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6ccab11cd0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6ccab11e58"/>
        <function-ref name="forceState" scoped="" ref="0x7f6ccab1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f6ccab0e988" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f6ccab0e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccab0ecd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccab0ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f6ccab0fb30" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f6ccab0fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccab0fe80"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccab0e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f6ccab10c00" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f6ccab10c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccab0f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccab0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6ccaab9aa8" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6ccaab9aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6ccaab9df8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6ccaac5020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6ccaac51a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6ccaac5330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6ccaac54b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6ccaac5640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6ccaac57c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6ccaac5950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6ccaac5ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6ccaac5c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6ccaac5de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6ccaac4020"/>
        <function-ref name="sync" scoped="" ref="0x7f6ccaac41a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6ccaac4430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6ccaac45b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6ccaab4d28" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f6ccaab4d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaab78b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6ccaab7d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6ccaac48b0" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccaac48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6ccaac4c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6ccaac4d88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6ccaab8020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6ccaab81a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6ccaab8330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6ccaab84b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6ccaab8640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6ccaab87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6ccaac9b80" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6ccaac9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccaac6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccaac61a8"/>
        <function-ref name="request" scoped="" ref="0x7f6ccaac6330"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccaac64b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccaac6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6ccaaaf4b0" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6ccaaaf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6ccaaaf800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6ccaaaf988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6ccaaafb10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6ccaaafc98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6ccaaafe20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6ccaaae020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6ccaaae1a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6ccaaae330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6ccaaae4b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6ccaaae640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6ccaaae7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6ccaaae950"/>
        <function-ref name="sync" scoped="" ref="0x7f6ccaaaead8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6ccaaaed60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6ccaaad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f6ccaa8a9d0" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6ccaa8a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa8ad20"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f6ccaaa7998" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6ccaaa7998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6ccaaa7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f6ccaaa9370" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f6ccaaa9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccaaa6ab0"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaaa8a58"/>
        <function-ref name="startAt" scoped="" ref="0x7f6ccaaa64a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccaaa6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6ccaaa4020"/>
        <function-ref name="start" scoped="" ref="0x7f6ccaaa80f8"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccaaa85d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f6ccaa8d8a8" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6ccaa8d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa8dbf8"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa8dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f6ccaaa2378" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f6ccaaa2378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6ccaaa26c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6ccaaa2850"/>
        <function-ref name="toggle" scoped="" ref="0x7f6ccaaa29d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6ccaaa2b60"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaaa2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6ccaaa2e70"/>
        <function-ref name="set" scoped="" ref="0x7f6ccaa9d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6ccaa9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6ccaaac658" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f6ccaaac658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaaab1e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6ccaaab638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f6ccaa783f0" loc="126:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f6ccaa783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccaa78740"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccaa788c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f6ccaa893a8" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6ccaa893a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa896f8"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa89880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6ccaa89c18" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6ccaa89c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa88020"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa881a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f6ccaa8e708" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6ccaa8e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa8ea58"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa8ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6ccaa93170" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6ccaa93170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6ccaa934c0"/>
        <function-ref name="changed" scoped="" ref="0x7f6ccaa93648"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6ccaa937d0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6ccaa93958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6ccaaa3100" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6ccaaa3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6ccaaa3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6ccaaa35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6ccaaa3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6ccaaa38e8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaaa3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6ccaaa3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6ccaaa3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6ccaaa2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f6ccaa873c0" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6ccaa873c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6ccaa87910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f6ccaa9d500" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f6ccaa9d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6ccaa9d850"/>
        <function-ref name="isInput" scoped="" ref="0x7f6ccaa9d9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6ccaa9db60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6ccaa9dce8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaa9de70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6ccaa9c020"/>
        <function-ref name="set" scoped="" ref="0x7f6ccaa9c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6ccaa9c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaab0080" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaab0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaab03d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6ccaa8a158" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6ccaa8a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa8a4a8"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa8a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f6ccaa87ca0" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6ccaa87ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6ccaa86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6ccaa863b0" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6ccaa863b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccaa86700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccaa86888"/>
        <function-ref name="request" scoped="" ref="0x7f6ccaa86a10"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccaa86b98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccaa86d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f6ccaa84e50" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f6ccaa84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccaa831e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccaa83370"/>
        <function-ref name="request" scoped="" ref="0x7f6ccaa834f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccaa83680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccaa83808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6ccaaad318" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f6ccaaad318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6ccaaad668"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6ccaaad7f0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6ccaaad978"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6ccaaadb00"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6ccaaadc88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6ccaaade10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6ccaaac020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6ccaaac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f6ccaa8d020" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6ccaa8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa8d370"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa8d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f6ccaa8ce60" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6ccaa8ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa8e1e8"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa8e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f6ccaa85460" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6ccaa85460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6ccaa857b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6ccaa83ac0" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6ccaa83ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6ccaa83e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6ccaa82020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6ccaa821a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6ccaa82330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6ccaa824b8"/>
        <function-ref name="get" scoped="" ref="0x7f6ccaa82640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6ccaa827c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6ccaa82de8"/>
        <function-ref name="set" scoped="" ref="0x7f6ccaa82950"/>
        <function-ref name="led0On" scoped="" ref="0x7f6ccaa82ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6ccaa82c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f6ccaa7a598" loc="125:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f6ccaa7a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6ccaa7a8e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6ccaa7aa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6ccaab06b0" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6ccaab06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccaab0a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccaab0b88"/>
        <function-ref name="request" scoped="" ref="0x7f6ccaab0d10"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccaaaf020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccaaaf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f6ccaa9a958" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6ccaa9a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa9aca8"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa9ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f6ccaa9a020" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6ccaa9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6ccaa9a470"/>
        <function-ref name="write" scoped="" ref="0x7f6ccaa9a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f6ccaa98b78" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6ccaa98b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6ccaa9b020"/>
        <function-ref name="disable" scoped="" ref="0x7f6ccaa9b1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6ccaa9b330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6ccaa9b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f6ccaa84140" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f6ccaa84140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6ccaa84490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6ccaa84618"/>
        <function-ref name="request" scoped="" ref="0x7f6ccaa847a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6ccaa84928"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6ccaa84ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f6ccaa85b38" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6ccaa85b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6ccaa87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6ccaa068d8" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6ccaa068d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6ccaa06c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6ccaa032a0" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6ccaa032a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6ccaa01918"/>
        <function-ref name="fired" scoped="" ref="0x7f6ccaa02980"/>
        <function-ref name="startAt" scoped="" ref="0x7f6ccaa01310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6ccaa02e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6ccaa01da0"/>
        <function-ref name="start" scoped="" ref="0x7f6ccaa02020"/>
        <function-ref name="stop" scoped="" ref="0x7f6ccaa024f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cca9feb78" loc="42:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cca9feb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cca9fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6cca9fd4f8" loc="43:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6cca9fd4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cca9c6c88"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca9c7d08"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cca9c6680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cca9c61f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cca9c5150"/>
        <function-ref name="start" scoped="" ref="0x7f6cca9c73a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cca9c7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc8fe44b8" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fe44b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc8fe1b18"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fe3b90"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc8fe1510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc8fe1088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc8fe0020"/>
        <function-ref name="start" scoped="" ref="0x7f6cc8fe3230"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc8fe3708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc8ff1c08" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc8ff1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc8fe4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc8fdc020" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc8fda690"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fdb6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc8fda088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc8fdbb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc8fdab18"/>
        <function-ref name="start" scoped="" ref="0x7f6cc8fdcd70"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc8fdb270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc8fdd6e8" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc8fdd6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc8fdda38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f6cc8fc5740" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc8fc5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6cc8fc5a90"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6cc8fc5c18"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6cc8fc5da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6cc8fc4020"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fc41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f6cc8fc9d70" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc8fc9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc8fc70f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cc8fc7278"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc8fc7400"/>
        <function-ref name="get" scoped="" ref="0x7f6cc8fc7588"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc8fc7710"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc8fc7898"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc8fc7a20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc8fc7ba8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc8fc7d30"/>
        <function-ref name="setMode" scoped="" ref="0x7f6cc8fc6020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6cc8fc61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f6cc8fc6430" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc8fc6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6cc8fc6780"/>
        <function-ref name="getControl" scoped="" ref="0x7f6cc8fc6908"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc8fc6a90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6cc8fc6c18"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6cc8fc6da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc8fc5020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6cc8fc51a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6cc8fc5330"/>
        <function-ref name="setControl" scoped="" ref="0x7f6cc8fc54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f6cc8fbb020" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f6cc8fbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6cc8fbb370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f6cc8fbb4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f6cc8fbb680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f6cc8fbb808"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fbb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6cc8fbe5a8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cc8fbe5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc8fbe8f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cc8fbea80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc8fbec08"/>
        <function-ref name="get" scoped="" ref="0x7f6cc8fbed90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc8fbd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc8fbd1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc8fbd330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc8fbd4b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc8fbd640"/>
        <function-ref name="setMode" scoped="" ref="0x7f6cc8fbd7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6cc8fbd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc8fc2648" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fc2648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc8fbfcc0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fc1d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc8fbf6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc8fbf230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc8fbe190"/>
        <function-ref name="start" scoped="" ref="0x7f6cc8fc13f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc8fc18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc8fc3d90" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc8fc3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc8fc2170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6cc8fbdbd8" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cc8fbdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6cc8fbc020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6cc8fbc1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cc8fbc330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6cc8fbc4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6cc8fbc640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cc8fbc7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6cc8fbc950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6cc8fbcad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6cc8fbcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6cca9e8520" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cca9e8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca9e73a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca9e7cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca9e7830"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca9e6190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6cca9df060" loc="63:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f6cca9df060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca9dfdb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca9de6f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca9de270"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca9deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6cca9e3e40" loc="62:/home/muzi/tinyos-main//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cca9e3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca9e2be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca9e1548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca9e10c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca9e19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6cc8fd7020" loc="61:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f6cc8fd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc8fd4690"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fd56f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc8fd4088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc8fd5b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc8fd4b18"/>
        <function-ref name="start" scoped="" ref="0x7f6cc8fd7d70"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc8fd5270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f6cc8fd0450" loc="73:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f6cc8fd0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc8fceab0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc8fcfb30"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cc8fce4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc8fce020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cc8fcd020"/>
        <function-ref name="start" scoped="" ref="0x7f6cc8fcf1d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc8fcf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6cc8fd31a8" loc="68:/home/muzi/tinyos-main//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cc8fd31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc8fd2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc8fd2930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc8fd24a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc8fd2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f6cca9c0378" loc="44:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f6cca9c0378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9c06c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9c0850"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9c09d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9c0b60"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9c0ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9c0e70"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9be020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f6cca9be508" loc="45:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f6cca9be508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9be858"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9be9e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9beb68"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9becf0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9bee78"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9bd030"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9bd1b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f6cca9bd698" loc="46:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f6cca9bd698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9bd9e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9bdb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9bdcf8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9bde80"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9bc030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9bc1b8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9bc340"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9bc4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f6cca9c11a0" loc="43:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6cca9c11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9c14f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9c1678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9c1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9c1988"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9c1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9c1c98"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9c1e20"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f6cca9bb998" loc="48:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f6cca9bb998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9bbce8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9bbe70"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9ba1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9ba330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9ba4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9ba640"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9ba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f6cca9c2020" loc="42:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f6cca9c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9c2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9c24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9c2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9c2808"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9c2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9c2b18"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9c2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9c2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f6cca9bc810" loc="47:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f6cca9bc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9bcb60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9bcce8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9bce70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9bb020"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9bb330"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9bb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6cca9a4568" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6cca9a4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9a48b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9a4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9a4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9a4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9a3330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9a34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9a3640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9a37c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9a3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca9a3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9a3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9a2020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6cca990568" loc="66:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6cca990568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9908b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca990a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca990bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca990d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca98f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca98f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca98f330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca98f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca98f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca98f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca98f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca98fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca98fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca98e020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca98e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f6cca9467d0" loc="145:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f6cca9467d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca946b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca946ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca946e30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca945020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9451a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca945330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9454b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca945640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9457c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca945950"/>
        <function-ref name="set" scoped="" ref="0x7f6cca945ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca945c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca945de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca944120"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9442a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f6cca921558" loc="165:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f6cca921558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9218a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca921a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca921bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca921d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca920020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca920330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9204b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca920640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9207c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca920950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca920ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca920c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca91f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca91f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f6cca944660" loc="146:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f6cca944660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9449b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca944b38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca944cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca944e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca943020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca943330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9434b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca943640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9437c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca943950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca943ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca943c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca942020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f6cca98c568" loc="71:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f6cca98c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca98c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca98ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca98cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca98cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca98b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca98b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca98b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca98b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca98b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca98b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca98b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca98bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca98bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca98a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca98a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f6cca977568" loc="84:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f6cca977568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9778b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca977a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca977bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca977d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca976020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca976330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca976640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9767c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca976950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca976ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca976c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca975020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f6cca963568" loc="97:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f6cca963568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9638b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca963a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca963bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca963d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca962020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca962330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca962640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9627c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca962950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca962ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca962c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca961020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f6cca952568" loc="108:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f6cca952568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9528b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca952a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca952bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca952d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca951020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca951330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9514b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca951640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9517c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca951950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca951ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca951c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca950020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f6cca93e560" loc="149:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f6cca93e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca93e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca93ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca93ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca93ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca93d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca93d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca93d330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca93d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca93d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca93d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca93d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca93dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca93dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca93c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca93c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f6cca92e558" loc="159:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f6cca92e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca92e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca92ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca92ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca92ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca92d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca92d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca92d330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca92d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca92d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca92d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca92d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca92dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca92dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca92c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca92c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f6cca919560" loc="171:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f6cca919560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9198b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca919a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca919bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca919d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca918020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca918330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9184b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca918640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9187c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca918950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca918ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca918c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca917020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6cca99e568" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6cca99e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca99e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca99ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca99ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca99ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca99d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca99d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca99d330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca99d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca99d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca99d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca99d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca99dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca99dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca99c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca99c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f6cca93c560" loc="150:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f6cca93c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca93c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca93ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca93cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca93cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca93b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca93b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca93b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca93b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca93b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca93b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca93b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca93bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca93bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca93a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca93a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6cca99a568" loc="61:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6cca99a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca99a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca99aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca99abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca99ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca999020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca999330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca999640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9997c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca999950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca999ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca999c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca998020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f6cca985568" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f6cca985568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9858b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca985a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca985bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca985d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca984020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca984330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9844b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca984640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9847c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca984950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca984ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca984c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca983020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f6cca971568" loc="87:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f6cca971568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9718b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca971a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca971bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca971d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca970020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca970330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9704b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca970640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9707c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca970950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca970ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca970c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca96f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca96f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f6cca95d568" loc="100:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f6cca95d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca95d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca95da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca95dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca95dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca95c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca95c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca95c330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca95c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca95c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca95c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca95c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca95cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca95cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca95b020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca95b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f6cca94c568" loc="111:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f6cca94c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca94c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca94ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca94cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca94cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca94b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca94b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca94b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca94b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca94b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca94b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca94b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca94bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca94bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca94a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca94a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6cca9a8568" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6cca9a8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9a88b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9a8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9a8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9a8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9a7330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9a74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9a7640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9a77c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9a7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca9a7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9a7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9a6020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6cca994568" loc="64:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6cca994568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9949b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca994b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca994cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca994e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca993020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca993330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9934b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca993640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9937c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca993950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca993ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca993c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca992020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f6cca97f568" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f6cca97f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca97f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca97fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca97fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca97fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca97e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca97e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca97e330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca97e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca97e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca97e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca97e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca97ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca97ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca97d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca97d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f6cca948970" loc="144:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f6cca948970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca948cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca948e48"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca947020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9471a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca947330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9474b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca947640"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9477c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca947950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca947ad8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca947c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca947de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca946020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9462a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca946430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f6cca927558" loc="162:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f6cca927558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9278a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca927a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca927bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca927d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca926020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca926330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9264b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca926640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9267c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca926950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca926ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca926c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca925020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f6cca91b558" loc="169:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f6cca91b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca91b8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca91ba30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca91bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca91bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca91a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca91a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca91a330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca91a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca91a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca91a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca91a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca91aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca91ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca919020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f6cca934560" loc="155:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f6cca934560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9348b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca934a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca934bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca934d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca933020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca933330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca933640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9337c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca933950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca933ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca933c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca932020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f6cca97b568" loc="82:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f6cca97b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca97bab8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca97bc40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca97bdc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca97a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca97a1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca97a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca97a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca97a640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca97a7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca97a950"/>
        <function-ref name="set" scoped="" ref="0x7f6cca97aad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca97ac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca97ade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca979120"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9792a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f6cca967568" loc="95:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f6cca967568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9678b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca967a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca967bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca967d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca966020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca966330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca966640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9667c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca966950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca966ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca966c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca965020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f6cca956568" loc="106:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f6cca956568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9568b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca956a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca956bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca956d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca955020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca955330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9554b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca955640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9557c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca955950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca955ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca955c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca954020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f6cca925558" loc="163:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f6cca925558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9258a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca925a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca925bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca925d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca924020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca924330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9244b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca924640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9247c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca924950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca924ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca924c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca923020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f6cca93a558" loc="152:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f6cca93a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca93a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca93aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca93abb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca93ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca939020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca939330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca939640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9397c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca939950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca939ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca939c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca938020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6cca9a2568" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6cca9a2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9a28b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9a2a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9a2bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9a2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9a1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9a1330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9a14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9a1640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9a17c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9a1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca9a1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9a1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9a0020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6cca98e568" loc="67:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6cca98e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca98e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca98ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca98ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca98ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca98d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca98d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca98d330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca98d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca98d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca98d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca98d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca98dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca98dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca98c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca98c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f6cca95b568" loc="104:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f6cca95b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca95b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca95ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca95bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca95bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca95a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca95a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca95a330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca95a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca95a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca95a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca95a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca95aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca95ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca959020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f6cca98a568" loc="72:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f6cca98a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca98a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca98aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca98abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca98ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca989020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca989330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca989640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9897c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca989950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca989ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca989c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca988020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f6cca975568" loc="85:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f6cca975568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9758b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca975a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca975bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca975d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca974020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca974330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca974640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9747c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca974950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca974ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca974c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca973020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f6cca961568" loc="98:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f6cca961568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9618b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca961a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca961bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca961d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca960020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca960330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca960640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9607c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca960950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca960ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca960c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca95f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca95f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f6cca950568" loc="109:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f6cca950568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9508b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca950a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca950bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca950d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca94f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca94f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca94f330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca94f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca94f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca94f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca94f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca94fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca94fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca94e020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca94e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f6cca936560" loc="154:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f6cca936560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9368b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca936a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca936bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca936d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca935020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca935330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca935640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9357c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca935950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca935ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca935c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca934020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6cca9aa5a8" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6cca9aa5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9aa8f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9aaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9aac08"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9aad90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9b6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9b61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9b6330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9b64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9b6640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9b67c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9b6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca9b6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9b6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9b4020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6cca998568" loc="62:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6cca998568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9988b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca998a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca998bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca998d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca997020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca997330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca997640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9977c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca997950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca997ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca997c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca996020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f6cca983568" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f6cca983568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9838b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca983a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca983bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca983d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca982020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca982330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca982640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9827c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca982950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca982ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca982c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca981020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f6cca96f568" loc="88:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f6cca96f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca96f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca96fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca96fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca96fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca96e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca96e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca96e330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca96e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca96e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca96e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca96e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca96ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca96ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca96d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca96d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f6cca932560" loc="156:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f6cca932560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9328b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca932a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca932bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca932d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca931020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca931330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9314b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca931640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9317c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca931950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca931ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca931c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca930020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f6cca92c558" loc="160:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f6cca92c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca92c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca92ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca92cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca92cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca92b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca92b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca92b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca92b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca92b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca92b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca92b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca92bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca92bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca92a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca92a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f6cca91f558" loc="166:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f6cca91f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca91f8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca91fa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca91fbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca91fd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca91e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca91e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca91e330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca91e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca91e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca91e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca91e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca91ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca91ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca91d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca91d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f6cca96b568" loc="93:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f6cca96b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca96b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca96ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca96bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca96bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca96a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca96a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca96a330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca96a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca96a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca96a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca96a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca96aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca96ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca969020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f6cca930560" loc="157:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f6cca930560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9308b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca930a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca930bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca930d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca92f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca92f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca92f330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca92f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca92f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca92f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca92f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca92fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca92fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca92e020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca92e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6cca9a6568" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6cca9a6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9a68b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9a6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9a6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9a6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9a5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9a5330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9a54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9a5640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9a57c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9a5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca9a5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9a5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9a4020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6cca992568" loc="65:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6cca992568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9928b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca992a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca992bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca992d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca991020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca991330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9914b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca991640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9917c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca991950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca991ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca991c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca990020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f6cca97d568" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f6cca97d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca97d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca97da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca97dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca97dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca97c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca97c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca97c330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca97c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca97c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca97c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca97c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca97cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca97cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca97b020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca97b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f6cca938560" loc="153:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f6cca938560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9388b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca938a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca938bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca938d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca937020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca937330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9374b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca937640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9377c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca937950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca937ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca937c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca936020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f6cca923558" loc="164:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f6cca923558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9238a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca923a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca923bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca923d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca922020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca922330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9224b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca922640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9227c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca922950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca922ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca922c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca921020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f6cca979668" loc="83:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f6cca979668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9799b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca979b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca979cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca979e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca978020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca978330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9784b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca978640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9787c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca978950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca978ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca978c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca977020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f6cca965568" loc="96:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f6cca965568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9658b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca965a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca965bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca965d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca964020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca964330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca964640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9647c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca964950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca964ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca964c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca963020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f6cca954568" loc="107:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f6cca954568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9548b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca954a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca954bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca954d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca953020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca953330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9534b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca953640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9537c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca953950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca953ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca953c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca952020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6cca9a0568" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6cca9a0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9a08b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9a0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9a0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9a0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca99f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca99f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca99f330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca99f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca99f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca99f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca99f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca99fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca99fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca99e020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca99e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f6cca959568" loc="105:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f6cca959568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9598b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca959a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca959bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca959d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca957020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca957330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9574b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca957640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9577c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca957950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca957ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca957c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca956020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6cca99c568" loc="60:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6cca99c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca99c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca99ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca99cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca99cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca99b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca99b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca99b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca99b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca99b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca99b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca99b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca99bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca99bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca99a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca99a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f6cca988568" loc="73:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f6cca988568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9888b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca988a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca988bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca988d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca986020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca986330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9864b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca986640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9867c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca986950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca986ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca986c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca985020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f6cca973568" loc="86:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f6cca973568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9738b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca973a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca973bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca973d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca972020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca972330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca972640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9727c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca972950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca972ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca972c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca971020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f6cca95f568" loc="99:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f6cca95f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca95f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca95fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca95fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca95fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca95e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca95e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca95e330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca95e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca95e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca95e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca95e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca95ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca95ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca95d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca95d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f6cca94e568" loc="110:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f6cca94e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca94e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca94ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca94ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca94ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca94d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca94d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca94d330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca94d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca94d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca94d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca94d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca94dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca94dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca94c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca94c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6cca9b4568" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6cca9b4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9b48b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca9b4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9b4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca9b4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9a91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9a9330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9a94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca9a9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9a97c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca9a9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca9a9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9a9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca9a8020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6cca996568" loc="63:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6cca996568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9968b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca996a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca996bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca996d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca995020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca995330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca995640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9957c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca995950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca995ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca995c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca994020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f6cca981568" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f6cca981568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9818b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca981a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca981bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca981d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca980020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca980330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9804b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca980640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9807c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca980950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca980ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca980c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca97f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca97f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f6cca96d568" loc="89:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f6cca96d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca96d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca96da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca96dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca96dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca96c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca96c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca96c330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca96c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca96c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca96c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca96c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca96cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca96cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca96b020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca96b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f6cca940548" loc="148:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f6cca940548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca940898"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca940a20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca940ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca940d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca93f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca93f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca93f330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca93f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca93f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca93f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca93f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca93fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca93fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca93e020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca93e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f6cca92a558" loc="161:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f6cca92a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca92a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca92aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca92abb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca92ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca928020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca928330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9284b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca928640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9287c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca928950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca928ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca928c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca927020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f6cca942560" loc="147:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f6cca942560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9428b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca942a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca942bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca942d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca941020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca941330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca941640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9417c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca941950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca941ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca941c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca940020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f6cca969568" loc="94:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f6cca969568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9698b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca969a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca969bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca969d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca968020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca968330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca968640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9687c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca968950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca968ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca968c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca967020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f6cca91d558" loc="168:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f6cca91d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca91d8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca91da30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca91dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca91dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca91c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca91c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca91c330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca91c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca91c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca91c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca91c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca91cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca91cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca91b020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca91b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f6cca917568" loc="172:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f6cca917568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca9178b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca917a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca917bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca917d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca916020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca9161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca916330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca9164b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca916640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca9167c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca916950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca916ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca916c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca915020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f6cca94a5b8" loc="143:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f6cca94a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca94ad08"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca949020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca9491a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca949330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca9494b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca949640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca9497c8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca949950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca949ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca949c60"/>
        <function-ref name="set" scoped="" ref="0x7f6cca949de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca948020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca9481a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca948430"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca9485b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca913e18" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca913e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8ed1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8ed330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8ed4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8ed640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8ed7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8ed950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8edad8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8edc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8edde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8ec020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8ec1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8ec330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8ec4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8ec740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8ec8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8e9478" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8e9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8e97c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8e9950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8e9ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8e9c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8e9de8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8e8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8e81a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8e8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8e84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8e8640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8e87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8e8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8e8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8e8d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8e5ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8e5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8e4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8e41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8e4330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8e44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8e4640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8e47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8e4950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8e4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8e4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8e4de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8e3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8e31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8e3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8e35b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8e3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8e03d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8e03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8e0728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8e08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8e0a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8e0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8e0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8de020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8de1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8de330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8de4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8de640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8de7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8de950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8dead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8ded60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8dbca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8dbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8da020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8da1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8da330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8da4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8da640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8da7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8da950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8daad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8dac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8dade8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8d9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8d91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8d9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8d95b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8d9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8d63d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8d63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8d6728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8d68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8d6a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8d6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8d6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8d5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8d51a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8d5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8d54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8d5640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8d57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8d5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8d5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8d5d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8d2ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8d2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8d1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8d11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8d1330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8d14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8d1640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8d17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8d1950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8d1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8d1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8d1de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8d0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8d01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8d0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8d05b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8d0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8cd3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8cd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8cd728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8cd8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8cda38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8cdbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8cdd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8cc1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8cc330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8cc4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8cc640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8cc7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8cc950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8ccad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8ccd60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8c9ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8c9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8c8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8c81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8c8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8c84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8c8640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8c87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8c8950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8c8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8c8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8c8de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8c7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8c71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8c7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8c75b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8c7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8c43d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8c43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8c4728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8c48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8c4a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8c4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8c4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8c3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8c31a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8c3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8c34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8c3640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8c37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8c3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8c3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8c3d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8c0ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8c0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8bf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8bf1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8bf330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8bf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8bf640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8bf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8bf950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8bfad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8bfc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8bfde8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8be020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8be1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8be330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8be5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8be740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8bb3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8bb3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8bb728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8bb8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8bba38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8bbbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8bbd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8b91a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8b9330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8b94b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8b9640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8b97c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8b9950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8b9ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8b9d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8b6d08" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8b6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8b5228"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8b53b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8b5538"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8b56c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8b5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8b59d0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8b5b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8b5ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8b5e68"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8b4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8b41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8b4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8b45b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8b4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8b13d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8b13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8b1728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8b18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8b1a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8b1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8b1d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8b0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8b01a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8b0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8b04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8b0640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8b07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8b0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8b0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8b0d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8adca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8ac1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8ac330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8ac4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8ac640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8ac7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8ac950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8acad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8acc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8acde8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8ab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8ab1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8ab330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8ab5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8ab740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8a83d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8a83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8a8728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8a88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8a8a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8a8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8a8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8a71a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8a7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8a74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8a7640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8a77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8a7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8a7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8a7d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8a4ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8a4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca8a3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8a31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca8a3330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8a34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca8a3640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8a37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8a3950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca8a3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8a3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca8a3de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8a2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8a21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca8a2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8a25b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca8a2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca89f3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca89f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca89f728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca89f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca89fa38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca89fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca89fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca89e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca89e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca89e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca89e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca89e640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca89e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca89e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca89ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca89ed60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca89d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca89bca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca89bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca89a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca89a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca89a330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca89a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca89a640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca89a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca89a950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca89aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca89ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca89ade8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca899020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8991a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca899330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8995b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca899740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8953d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8953d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca895728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8958b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca895a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca895bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca895d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca894020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8941a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca894330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8944b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca894640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8947c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca894950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca894ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca894d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca893020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca891ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca891ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca890020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8901a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca890330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8904b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca890640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8907c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca890950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca890ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca890c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca890de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca88f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca88f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca88f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca88f5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca88f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca88c3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca88c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca88c728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca88c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca88ca38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca88cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca88cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca88b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca88b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca88b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca88b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca88b640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca88b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca88b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca88bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca88bd60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca88a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca888ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca888ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca887020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8871a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca887330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8874b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca887640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8877c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca887950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca887ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca887c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca887de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca886020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8861a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca886330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8865b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca886740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8833d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8833d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca883728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8838b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca883a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca883bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca883d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca882020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8821a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca882330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8824b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca882640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8827c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca882950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca882ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca882d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca881020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca87fdd8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca87fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca87e170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca87e2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca87e480"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca87e608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca87e790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca87e918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca87eaa0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca87ec28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca87edb0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca87d020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca87d1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca87d330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca87d4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca87d740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca87d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca87a478" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca87a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca87a7c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca87a950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca87aad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca87ac60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca87ade8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca879020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8791a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca879330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8794b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca879640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8797c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca879950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca879ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca879d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca878020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca876ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca876ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca874020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8741a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca874330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8744b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca874640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8747c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca874950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca874ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca874c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca874de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca873020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8731a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca873330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8735b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca873740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8703d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8703d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca870728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8708b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca870a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca870bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca870d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca86f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca86f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca86f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca86f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca86f640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca86f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca86f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca86fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca86fd60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca86e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca86cca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca86cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca86b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca86b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca86b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca86b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca86b640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca86b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca86b950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca86bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca86bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca86bde8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca86a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca86a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca86a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca86a5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca86a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8673d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8673d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca867728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8678b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca867a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca867bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca867d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca866020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8661a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca866330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8664b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca866640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8667c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca866950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca866ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca866d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca863ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca863ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca862020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8621a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca862330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8624b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca862640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8627c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca862950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca862ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca862c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca862de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca861020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8611a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca861330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8615b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca861740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca85e3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca85e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca85e728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca85e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca85ea38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca85ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca85ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca85d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca85d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca85d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca85d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca85d640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca85d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca85d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca85dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca85dd60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca85c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca85aca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca85aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca859020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8591a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca859330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8594b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca859640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8597c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca859950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca859ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca859c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca859de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca858020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8581a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca858330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8585b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca858740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8553d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8553d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca855728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8558b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca855a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca855bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca855d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca854020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8541a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca854330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8544b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca854640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8547c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca854950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca854ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca854d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca853020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca851ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca851ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca84f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca84f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca84f330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca84f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca84f640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca84f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca84f950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca84fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca84fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca84fde8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca84e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca84e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca84e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca84e5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca84e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca84b3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca84b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca84b728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca84b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca84ba38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca84bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca84bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca84a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca84a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca84a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca84a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca84a640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca84a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca84a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca84aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca84ad60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca849020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca847ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca847ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca846020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8461a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca846330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8464b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca846640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8467c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca846950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca846ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca846c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca846de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca845020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8451a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca845330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8455b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca845740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8423d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8423d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca842728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8428b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca842a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca842bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca842d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca841020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8411a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca841330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8414b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca841640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8417c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca841950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca841ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca841d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca840020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca83eca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca83eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca83d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca83d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca83d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca83d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca83d640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca83d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca83d950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca83dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca83dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca83dde8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca83c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca83c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca83c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca83c5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca83c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8393d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8393d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca839728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8398b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca839a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca839bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca839d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca838020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8381a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca838330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8384b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca838640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8387c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca838950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca838ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca838d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca837020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca835ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca835ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca834020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8341a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca834330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8344b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca834640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8347c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca834950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca834ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca834c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca834de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca833020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8331a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca833330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8335b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca833740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8303d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8303d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca830728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8308b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca830a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca830bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca830d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca82f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca82f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca82f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca82f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca82f640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca82f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca82f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca82fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca82fd60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca82e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca82bca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca82bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca82a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca82a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca82a330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca82a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca82a640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca82a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca82a950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca82aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca82ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca82ade8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca829020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8291a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca829330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8295b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca829740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8263d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8263d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca826728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8268b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca826a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca826bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca826d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca825020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8251a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca825330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8254b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca825640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8257c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca825950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca825ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca825d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca824020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca822ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca822ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca821020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8211a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca821330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8214b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca821640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8217c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca821950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca821ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca821c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca821de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca820020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8201a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca820330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8205b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca820740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca81d3d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca81d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca81d728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca81d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca81da38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca81dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca81dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca81c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca81c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca81c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca81c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca81c640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca81c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca81c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca81cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca81cd60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca81b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca819ca0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca819ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca818020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8181a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca818330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca8184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca818640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca8187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca818950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca818ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca818c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca818de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca817020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca8171a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca817330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca8175b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca817740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6cca8143d8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f6cca8143d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca814728"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca8148b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca814a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca814bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca814d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca813020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca8131a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca813330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca8134b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca813640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca8137c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca813950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca813ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca813d60"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca812020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca7beda0" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca7beda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7a4170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca7a42f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca7a4480"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca7a4608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca7a4790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca7a4918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca7a4aa0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca7a4c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca7a4db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca7a3020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7a31a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca7a3330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca7a34b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca7a3740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7a38c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca7bfc30" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca7bfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7be020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca7be1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca7be330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca7be4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca7be640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca7be7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7be950"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7bead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca79f5f8" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca79f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca79f948"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca79fad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca79fc58"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca79fde0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca79e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca79e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca79e330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca79e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca79e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca79e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca79e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca79ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca79ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca79d020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca79d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca7a0410" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca7a0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7a0760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca7a08e8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca7a0a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca7a0bf8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca7a0d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca79f020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca79f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca79f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca79be20" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca79be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca79a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca79a330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca79a4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca79a640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca79a7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca79a950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca79aad8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca79ac60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca79ade8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca799020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7991a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca799330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca7994b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca799740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7998c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca79ccd0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca79ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca79b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca79b228"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca79b3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca79b538"/>
        <function-ref name="get" scoped="" ref="0x7f6cca79b6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca79b848"/>
        <function-ref name="set" scoped="" ref="0x7f6cca79b9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca79bb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca7965f8" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca7965f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca796948"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca796ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca796c58"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca796de0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca795020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca7951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca795330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca7954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca795640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca7957c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca795950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca795ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca795c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca794020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca797448" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca797448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca797798"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca797920"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca797aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca797c30"/>
        <function-ref name="get" scoped="" ref="0x7f6cca797db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca796020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7961a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca796330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca792e20" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca792e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7911a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca791330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca7914b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca791640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca7917c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca791950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca791ad8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca791c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca791de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca790020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7901a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca790330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca7904b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca790740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7908c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca793cd0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca793cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca792228"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca7923b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca792538"/>
        <function-ref name="get" scoped="" ref="0x7f6cca7926c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca792848"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7929d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca792b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca78d5f8" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca78d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca78d948"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca78dad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca78dc58"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca78dde0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca78b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca78b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca78b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca78b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca78b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca78b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca78b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca78bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca78bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca78a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca78a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca78e410" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca78e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca78e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca78e8e8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca78ea70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca78ebf8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca78ed80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca78d020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca78d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca78d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca788e20" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca788e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7871a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca787330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca7874b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca787640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca7877c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca787950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca787ad8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca787c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca787de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca786020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7861a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca786330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca7864b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca786740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7868c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca789cd0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca789cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca7880a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca788228"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca7883b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca788538"/>
        <function-ref name="get" scoped="" ref="0x7f6cca7886c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca788848"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7889d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca788b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f6cca7714f8" loc="42:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6cca7714f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6cca771848"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca7719d0"/>
        <function-ref name="captured" scoped="" ref="0x7f6cca771b58"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6cca771ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f6cca7740e0" loc="43:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6cca7740e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca774430"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca7745b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6cca774740"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6cca7748c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f6cca774ca8" loc="44:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6cca774ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca770020"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca7701a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6cca770330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6cca7704b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f6cca759020" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f6cca759020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f6cca759370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f6cca7594f8"/>
        <function-ref name="captured" scoped="" ref="0x7f6cca759680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca759808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca759990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f6cca759b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6cca76d100" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f6cca76d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6cca76d450"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca76d5d8"/>
        <function-ref name="captured" scoped="" ref="0x7f6cca76d760"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6cca76d8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f6cca76db70" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f6cca76db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f6cca75a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f6cca75a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cca75a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f6cca75a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f6cca75a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cca75a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6cca75a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f6cca75aad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6cca75ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f6cca759de0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca759de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca758170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca7582f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca758480"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca758608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca758790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca758918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca758aa0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca758c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca758db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca757020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca7571a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca757330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca7574b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca757740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca7578c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6cca74a6f0" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6cca74a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca74aa40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca74abc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca74ad50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca749020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7491a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca749330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6cca73f6f0" loc="58:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6cca73f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca73fa40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca73fbc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca73fd50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca73e020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca73e1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca73e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6cca7476f0" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6cca7476f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca747a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca747bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca747d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca746020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7461a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca746330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6cca7456f0" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6cca7456f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca745a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca745bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca745d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca744020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7441a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca744330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6cca7506f0" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6cca7506f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca750a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca750bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca750d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca74b020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca74b1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca74b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6cca7416f0" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6cca7416f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca741b40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca741cc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca741e50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca740020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7401a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca740330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6cca7496f0" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6cca7496f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca749a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca749bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca749d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca748020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7481a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca748330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6cca73e6f0" loc="59:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6cca73e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca73ea40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca73ebc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca73ed50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca73d020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca73d1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca73d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6cca74c7b8" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6cca74c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca74cb08"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca74cc90"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca74ce18"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca751020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7511a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca751330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6cca7446f0" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6cca7446f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca744a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca744bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca744d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca742020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7421a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca742330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6cca74b6f0" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6cca74b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca74ba40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca74bbc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca74bd50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca74a020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca74a1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca74a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6cca7406f0" loc="57:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6cca7406f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca740a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca740bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca740d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca73f020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca73f1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca73f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6cca7486f0" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6cca7486f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca748a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca748bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca748d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca747020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7471a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca747330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6cca7466f0" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6cca7466f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca746a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca746bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca746d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca745020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7451a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca745330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6cca7516f0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6cca7516f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca751a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca751bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca751d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca750020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7501a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca750330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6cca7426f0" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6cca7426f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca742a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca742bc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca742d50"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca741020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca7411a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca741330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f6cca7363e0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f6cca7363e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca736730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7368b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca736a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca736bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca736d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca735020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f6cca72c3e0" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f6cca72c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca72c730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca72c8b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca72ca40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca72cbc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca72cd50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca72b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f6cca7333e0" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f6cca7333e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca733730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7338b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca733a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca733bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca733d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca732020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f6cca7313e0" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f6cca7313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca731730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7318b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca731a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca731bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca731d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca730020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f6cca7383e0" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f6cca7383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca738730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7388b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca738a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca738bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca738d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca737020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f6cca72e3e0" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f6cca72e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca72e830"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca72e9b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca72eb40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca72ecc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca72ee50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca72d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f6cca7353e0" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f6cca7353e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca735730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7358b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca735a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca735bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca735d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca734020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f6cca72b3e0" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f6cca72b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca72b730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca72b8b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca72ba40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca72bbc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca72bd50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca72a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f6cca73a470" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f6cca73a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca73a7c0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca73a948"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca73aad0"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca73ac58"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca73ade0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca739020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f6cca7303e0" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f6cca7303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca730730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7308b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca730a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca730bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca730d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca72f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f6cca7373e0" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f6cca7373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca737730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7378b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca737a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca737bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca737d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca736020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f6cca72d3e0" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f6cca72d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca72d730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca72d8b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca72da40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca72dbc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca72dd50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca72c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f6cca7343e0" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f6cca7343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca734730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7348b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca734a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca734bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca734d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca733020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f6cca7323e0" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f6cca7323e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca732730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7328b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca732a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca732bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca732d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca731020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f6cca7393e0" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f6cca7393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca739730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca7398b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca739a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca739bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca739d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca738020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f6cca72f3e0" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f6cca72f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca72f730"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca72f8b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca72fa40"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca72fbc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca72fd50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca72e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f6cca65f780" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f6cca65f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca65fad0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca65fc58"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca65fde0"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca652020"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca6521a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca652330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6cca660b58" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f6cca660b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca65f020"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca65f1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6cca65f330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6cca65f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f6cca6505f8" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f6cca6505f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca650948"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca650ad0"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca650c58"/>
        <function-ref name="edge" scoped="" ref="0x7f6cca650de0"/>
        <function-ref name="enable" scoped="" ref="0x7f6cca64f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f6cca64f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6cca651a78" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f6cca651a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca651dc8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca650020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6cca6501a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6cca650330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6cca1e9470" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca1e9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e99c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e9b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6cca1f69b8" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6cca1f69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6cca1ed470" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca1ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ed7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ed948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6cca1e8d98" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca1e8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e7170"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6cca1e0470" loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6cca1e0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e07c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6cca1e75c0" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6cca1e75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e7910"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e7a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6cca1d47c0" loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6cca1d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d4b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6cca1d77c0" loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cca1d77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d7b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6cca1f5c50" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca1f5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6cca1dcc10" loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6cca1dcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1db020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6cca1d87c0" loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca1d87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d8b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6cca1ec470" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6cca1ec470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ec7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ec948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6cca1ea470" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca1ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ea7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ea948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6cca1e2c10" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6cca1e2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e1020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6cca1e3470" loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6cca1e3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e37c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6cca1e7d60" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca1e7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e60d8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cca1f7430" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca1f7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca1f7780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca1f7908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca1f7a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6cca1f0638" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca1f0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6cca1f0c50" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6cca1f0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1ef0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6cca1da060" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cca1da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1da3b0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1da538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6cca1ef3a0" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca1ef3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1ef6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6cca1d7020" loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cca1d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d7370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6cca1f4900" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca1f4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f4c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6cca1dc470" loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6cca1dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1dc7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1dc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6cca1ecc10" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca1ecc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ea020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6cca1edc10" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca1edc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ec020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6cca1f63a0" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1f63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6cca1dd470" loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cca1dd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1dd7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1dd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6cca1e0c10" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6cca1e0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1df020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6cca1ddc10" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cca1ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1dc020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6cca1d4020" loc="107:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca1d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d4370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6cca1d5020" loc="105:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cca1d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d5370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6cca1e3c10" loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6cca1e3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e2020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6cca1df470" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6cca1df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1df7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1df948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6cca1d8020" loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6cca1d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d8370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6cca1e6cc8" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6cca1e6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e50a0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e5228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6cca1d3020" loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6cca1d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca1d3370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca1d34f8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d3680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca1d3808"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca1d3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6cca1f7d58" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cca1f7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f60d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6cca1eec50" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6cca1eec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ed020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6cca1eac10" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca1eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e9020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6cca1e1470" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6cca1e1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e17c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6cca1e6528" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca1e6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e6878"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6cca1e1c10" loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6cca1e1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e0020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6cca1e9e10" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca1e9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e81a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6cca1f5020" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6cca1f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6cca1e85f8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca1e85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e8948"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca1f87d0" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca1f87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca1f8b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca1f8ca8"/>
        <function-ref name="request" scoped="" ref="0x7f6cca1f8e30"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca1f7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca1f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6cca1ef9b8" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca1ef9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1efd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6cca1ee638" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6cca1ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1ee988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6cca1d97c0" loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6cca1d97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d9b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6cca1d9020" loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca1d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d9370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6cca1f0020" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca1f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6cca1da800" loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cca1da800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1dab50"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1dacd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6cca1d57c0" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6cca1d57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1d5b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6cca1e2470" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cca1e2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e27c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6cca1dfc10" loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6cca1dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1dd020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6cca1f5638" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6cca1f5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6cca1f42e8" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1f42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1f4638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6cca1e54f0" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6cca1e54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e5840"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e59c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6cca1ee020" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6cca1ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1ee370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6cca1e5c90" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6cca1e5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1e3020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6cca1db470" loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6cca1db470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1dbbc0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1dbd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6cca1d3c58" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca1d3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca1d2020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca1d21a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1d2330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca1d24b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca1d2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6cca611c00" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f6cca611c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca610020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca6101a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca610330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca6104b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca610640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cca612cb0" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca612cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca6110a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca611228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca6113b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6cca60f020" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f6cca60f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca60f370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca60f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6cca60fd60" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f6cca60fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca60e0d8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca60e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca612020" loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca612370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca6124f8"/>
        <function-ref name="request" scoped="" ref="0x7f6cca612680"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca612808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca612990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6cca60ead8" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f6cca60ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca60ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f6cca600020" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cca600370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cca6004f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6cca608e50" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f6cca608e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca6071e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca607370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca6074f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca607680"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca607808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cca60cdf0" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca60cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca609170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca6092f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca609480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f6cca602d10" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6cca602d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6cca6010a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f6cca600838" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f6cca600838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cca600b88"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cca600d10"/>
        <function-ref name="isState" scoped="" ref="0x7f6cca5ff020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cca5ff1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cca5ff330"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cca5ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6cca6031e8" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6cca6031e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca603538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca6036c0"/>
        <function-ref name="request" scoped="" ref="0x7f6cca603848"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca6039d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca603b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6cca606040" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f6cca606040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca606390"/>
        <function-ref name="write" scoped="" ref="0x7f6cca606518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6cca606d40" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f6cca606d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca6040d8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca604260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cca5ff730" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cca5ff730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cca5ffa80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cca5ffc08"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cca5ffd90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cca5f9020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cca5f91a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca5f9330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cca5f94b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cca5f9ad8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca5f9640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cca5f97c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cca5f9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca609c10" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca609c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca608020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca6081a8"/>
        <function-ref name="request" scoped="" ref="0x7f6cca608330"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca6084b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca608640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f6cca5f45d0" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f6cca5f45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cca5f4920"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cca5f4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6cca604a98" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f6cca604a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca604de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cca59c100" loc="67:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cca59c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cca59c450"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cca59c5d8"/>
        <function-ref name="isState" scoped="" ref="0x7f6cca59c760"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cca59c8e8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cca59ca70"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cca59cbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cca59a858" loc="66:/home/muzi/tinyos-main//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cca59a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cca59aba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cca59ad30"/>
        <function-ref name="isState" scoped="" ref="0x7f6cca597020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cca5971a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cca597330"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cca5974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cca5945d8" loc="66:/home/muzi/tinyos-main//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cca5945d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cca594928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cca5921c8" loc="67:/home/muzi/tinyos-main//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cca5921c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cca592518"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cca5926a0"/>
        <function-ref name="isState" scoped="" ref="0x7f6cca592828"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cca5929b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cca592b38"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cca592cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6cca21c020" loc="44:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca21c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cca21c370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cca21c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6cca57b948" loc="43:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6cca57b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6cca57bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca57ccf0" loc="42:/home/muzi/tinyos-main//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca57ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca57b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca57b228"/>
        <function-ref name="request" scoped="" ref="0x7f6cca57b3b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca57b538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca57b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc8be65b8" loc="82:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8be65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc8be6908"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8be6a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6cc8be5d98" loc="87:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6cc8be5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8be4170"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8be42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6cc8be4580" loc="89:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cc8be4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cc8be48d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6cc8be6d18" loc="83:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6cc8be6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6cc8be50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc8be7968" loc="81:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc8be7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc8be7cb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc8be7e40"/>
        <function-ref name="request" scoped="" ref="0x7f6cc8be6020"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc8be61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc8be6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6cc8be5328" loc="85:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cc8be5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6cc8be5678"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6cc8be5800"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6cc8be5988"/>
        <function-ref name="write" scoped="" ref="0x7f6cc8be5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6cca516de0" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca516de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cca518170"/>
        <function-ref name="configure" scoped="" ref="0x7f6cca5182f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6cca517c90" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca517c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cca514020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cca5141a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6cca513ce8" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cca513ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cca5120a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6cca5185c8" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6cca5185c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6cca518918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6cca514a40" loc="79:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6cca514a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca514d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca513020"/>
        <function-ref name="request" scoped="" ref="0x7f6cca5131a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca513330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca5134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca51a4e8" loc="73:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca51a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca51a838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca51a9c0"/>
        <function-ref name="request" scoped="" ref="0x7f6cca51ab48"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca51acd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca51ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6cca518c10" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cca518c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6cca517020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6cca5171a8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6cca517330"/>
        <function-ref name="write" scoped="" ref="0x7f6cca5174b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6cca50eb50" loc="81:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cca50eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca511020"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca5111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6cca4a2d58" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca4a2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cca4a10f0"/>
        <function-ref name="configure" scoped="" ref="0x7f6cca4a1278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6cca49f6d8" loc="79:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f6cca49f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cca49fa48"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cca49fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f6cca49ed58" loc="82:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f6cca49ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cca49d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6cca4a1500" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f6cca4a1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6cca4a1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f6cca49d3b8" loc="83:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6cca49d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cca49d708"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cca49d890"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cca49da18"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cca49dba0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cca49dd28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cca49c020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cca49c1a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cca49c330"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cca49c4b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cca49c640"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cca49c7c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cca49c950"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cca49cad8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cca49cd60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cca49b020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cca49b1a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cca49b330"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cca49b4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cca49b640"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cca49b7c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cca49b950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cca49bad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cca49bc60"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cca49bde8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cca49a020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cca49a3a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cca49a530"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cca49a6b8"/>
        <function-ref name="tx" scoped="" ref="0x7f6cca49a840"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cca49a9c8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cca49ab50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cca49acd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cca49ae60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cca499020"/>
        <function-ref name="rx" scoped="" ref="0x7f6cca4991a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cca499330"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cca4994b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cca499640"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cca4997c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cca499950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cca498430" loc="85:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cca498430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cca498780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cca498908"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cca498a90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cca498c18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cca498da0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca497020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cca4971a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cca4977c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca4974b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cca497330"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cca497640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6cca49e020" loc="81:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6cca49e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca49e390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca49e518"/>
        <function-ref name="request" scoped="" ref="0x7f6cca49e6a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca49e828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca49e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca4a2020" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca4a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca4a2390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca4a2518"/>
        <function-ref name="request" scoped="" ref="0x7f6cca4a26a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca4a2828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca4a29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6cca4a1ad8" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6cca4a1ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6cca4a1e28"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6cca49f020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6cca49f1a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca49f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6cca499c18" loc="84:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cca499c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca498020"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca4981a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f6cca497a90" loc="102:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f6cca497a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cca497de0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cca496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f6cca489020" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6cca489020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca489370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6cca48b9c0" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cca48b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca48bd10"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca48a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6cca48f080" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cca48f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cca48f3d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cca48f558"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cca48f6e0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cca48f868"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cca48f9f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cca48fb78"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cca48fd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cca48e020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cca48e1a8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cca48e330"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cca48e4b8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cca48e640"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cca48e7c8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cca48ea50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cca48ebd8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cca48ed60"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cca48d020"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cca48d1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cca48d330"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cca48d4b8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cca48d640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cca48d7c8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cca48d950"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cca48dad8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cca48dc60"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cca48c020"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cca48c1a8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cca48c330"/>
        <function-ref name="tx" scoped="" ref="0x7f6cca48c4b8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cca48c640"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cca48c7c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cca48c950"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cca48cad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cca48cc60"/>
        <function-ref name="rx" scoped="" ref="0x7f6cca48cde8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cca48b020"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cca48b1a8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cca48b330"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cca48b4b8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cca48b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6cca450968" loc="82:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6cca450968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca450cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca450e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca44f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca44f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca44f330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca44f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca44f640"/>
        <function-ref name="get" scoped="" ref="0x7f6cca44f7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca44f950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca44fad8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca44fc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca44fde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca44e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca44e2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca44e430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6cca480020" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6cca480020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca480370"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca4804f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f6cca44e7e0" loc="83:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f6cca44e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca44eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca44ecb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca44ee40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca44d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca44d1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca44d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca44d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca44d640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca44d7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca44d950"/>
        <function-ref name="set" scoped="" ref="0x7f6cca44dad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca44dc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca44dde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca44c120"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca44c2a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f6cca44c658" loc="84:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f6cca44c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca44c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca44cb30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca44ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca44ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca44b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca44b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca44b330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca44b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca44b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca44b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca44b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca44bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca44bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca44a020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca44a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f6cca4865a8" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6cca4865a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cca4868f8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cca486a80"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cca486c08"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cca486d90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cca484020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cca4841a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cca484330"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cca4844b8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cca484640"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cca4847c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cca484950"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cca484ad8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cca484c60"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cca483020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cca4831a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cca483330"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cca4834b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cca483640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cca4837c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cca483950"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cca483ad8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cca483c60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cca483de8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cca482020"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cca4821a8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cca482530"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cca4826b8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cca482840"/>
        <function-ref name="tx" scoped="" ref="0x7f6cca4829c8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cca482b50"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cca482cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cca482e60"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cca481020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cca4811a8"/>
        <function-ref name="rx" scoped="" ref="0x7f6cca481330"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cca4814b8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cca481640"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cca4817c8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cca481950"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cca481ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f6cca47e060" loc="79:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f6cca47e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6cca47e3b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6cca47e538"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6cca47e6c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6cca47e848"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6cca47e9d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6cca47eb58"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6cca47ece0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6cca47ee68"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cca47d020"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6cca47d1a8"/>
        <function-ref name="getData" scoped="" ref="0x7f6cca47d330"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6cca47d4b8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6cca47d640"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6cca47d8c8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6cca47da50"/>
        <function-ref name="getIV" scoped="" ref="0x7f6cca47dbd8"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6cca47dd60"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6cca458020"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6cca4581a8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6cca458330"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6cca4584b8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6cca458640"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6cca4587c8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6cca458950"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6cca458ad8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6cca458e60"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6cca457020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6cca4571a8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6cca457330"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6cca4574b8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6cca457640"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6cca4577c8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6cca457950"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6cca457ad8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6cca457c60"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6cca457de8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6cca456020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6cca4561a8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6cca456330"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6cca4564b8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6cca456640"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6cca4567c8"/>
        <function-ref name="setData" scoped="" ref="0x7f6cca456950"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6cca456ad8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6cca456c60"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6cca456de8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6cca455020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6cca4551a8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6cca455330"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6cca4558b8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6cca455a40"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6cca455bc8"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6cca455d50"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6cca454020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6cca4541a8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6cca454330"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6cca4544b8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6cca454640"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6cca4547c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f6cca452af0" loc="81:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f6cca452af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca452e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca451020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca4511a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca451330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca4514b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca451640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca4517c8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca451950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca451ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca451c60"/>
        <function-ref name="set" scoped="" ref="0x7f6cca451de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca450020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca4501a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca450430"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca4505b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6cca480928" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca480928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca480c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6cca454b78" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6cca454b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca453020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca4531a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca453330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca4534b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca453640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca4537c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca453950"/>
        <function-ref name="get" scoped="" ref="0x7f6cca453ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca453c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca453de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca452020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca4521a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca452330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca4525b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca452740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6cca3d2e38" loc="46:/home/muzi/tinyos-main//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cca3d2e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cca3cf1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cca3cf348"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cca3cf4d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cca3cf658"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cca3cf7e0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3cf968"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cca3cfaf0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cca3ce1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3cfc78"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cca3cfe00"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cca3ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f6cca3cace8" loc="50:/home/muzi/tinyos-main//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f6cca3cace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3c9228"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3c93b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3c9538"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3c96c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3c9848"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3c99d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3c9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cca3cb080" loc="46:/home/muzi/tinyos-main//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cca3cb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cca3cb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f6cca3c9e70" loc="51:/home/muzi/tinyos-main//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f6cca3c9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3c81e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3c8370"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3c84f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3c8680"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3c8808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3c8990"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3c8b18"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3c8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6cca3cb648" loc="47:/home/muzi/tinyos-main//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cca3cb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cca3cb998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cca3cbb20"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cca3cbca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cca3cbe30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cca3ca020"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3ca1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cca3ca330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cca3ca950"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3ca4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cca3ca640"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cca3ca7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f6cca3c7020" loc="52:/home/muzi/tinyos-main//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f6cca3c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3c7370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3c74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3c7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3c7808"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3c7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3c7b18"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3c7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3c7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f6cca3cc4f0" loc="41:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f6cca3cc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3cc840"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3cc9c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3ccb50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3cccd8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3cce60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3aa020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3aa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f6cca3aa688" loc="42:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f6cca3aa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3aa9d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3aab60"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3aace8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3aae70"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3a91a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3a9330"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f6cca3a78f8" loc="44:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cca3a78f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cca3a7c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f6cca3a9810" loc="43:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f6cca3a9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3a9b60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3a9ce8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3a9e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3a7020"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3a7330"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3a74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3a7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca3a4120" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca3a4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3a4470"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3a45f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca3a4780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3a4908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3a4a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca3a4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3a4da0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca3a31a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca3a3330"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3a34b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca3a3640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca3a37c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca3a3a50"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3a3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca3a5020" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca3a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3a5370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3a54f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3a5680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3a5808"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3a5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3a5b18"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3a5ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3a5e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca3a0908" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca3a0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3a0c58"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3a0de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca39f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca39f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca39f330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca39f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca39f640"/>
        <function-ref name="get" scoped="" ref="0x7f6cca39f7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca39f950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca39fad8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca39fc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca39fde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca39e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca39e2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca39e430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca3a1720" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca3a1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca3a1a70"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca3a1bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca3a1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca3a0020"/>
        <function-ref name="get" scoped="" ref="0x7f6cca3a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca3a0330"/>
        <function-ref name="set" scoped="" ref="0x7f6cca3a04b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca3a0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca39b120" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca39b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca39b470"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca39b5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca39b780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca39b908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca39ba90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca39bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca39bda0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca39a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca39a1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca39a330"/>
        <function-ref name="set" scoped="" ref="0x7f6cca39a4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca39a640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca39a7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca39aa50"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca39abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca39c020" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca39c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca39c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca39c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca39c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca39c808"/>
        <function-ref name="get" scoped="" ref="0x7f6cca39c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca39cb18"/>
        <function-ref name="set" scoped="" ref="0x7f6cca39cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca39ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc8bdc980" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8bdc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc8bdccd0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8bdce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f6cc8bd6820" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f6cc8bd6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cc8bd6b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cc8bcf8c8" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc8bcf8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc8bcfc18"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc8bcfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f6cc8bd6df8" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6cc8bd6df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6cc8bd5170"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6cc8bd52f8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6cc8bd5480"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6cc8bd5608"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6cc8bd5790"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6cc8bd5918"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6cc8bd5aa0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6cc8bd5c28"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cc8bd5db0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6cc8bd4020"/>
        <function-ref name="getData" scoped="" ref="0x7f6cc8bd41a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6cc8bd4330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6cc8bd44b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6cc8bd4740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6cc8bd48c8"/>
        <function-ref name="getIV" scoped="" ref="0x7f6cc8bd4a50"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6cc8bd4bd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6cc8bd4d60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6cc8bd3020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6cc8bd31a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6cc8bd3330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6cc8bd34b8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6cc8bd3640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6cc8bd37c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6cc8bd3950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6cc8bd3cd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6cc8bd3e60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6cc8bd2020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6cc8bd21a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6cc8bd2330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6cc8bd24b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6cc8bd2640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6cc8bd27c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6cc8bd2950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6cc8bd2ad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6cc8bd2c60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6cc8bd2de8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6cc8bd1020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6cc8bd11a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6cc8bd1330"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6cc8bd14b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6cc8bd1640"/>
        <function-ref name="setData" scoped="" ref="0x7f6cc8bd17c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6cc8bd1950"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6cc8bd1ad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6cc8bd1c60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6cc8bd1de8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6cc8bd0020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6cc8bd01a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6cc8bd0730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6cc8bd08b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6cc8bd0a40"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6cc8bd0bc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6cc8bd0d50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6cc8bcf020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6cc8bcf1a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6cc8bcf330"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6cc8bcf4b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6cc8bcf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6cc8bd60c0" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc8bd60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc8bd6410"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc8bd6598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc8bddd48" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc8bddd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc8bdc0d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc8bdc260"/>
        <function-ref name="request" scoped="" ref="0x7f6cc8bdc3e8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc8bdc570"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc8bdc6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6cc8bdb880" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc8bdb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cc8bdbbd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cc8bdbd58"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cc8bda020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cc8bda1a8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cc8bda330"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cc8bda4b8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cc8bda640"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cc8bda7c8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cc8bda950"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cc8bdaad8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cc8bdac60"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cc8bdade8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cc8bd9020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cc8bd92a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cc8bd9430"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cc8bd95b8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cc8bd9740"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cc8bd98c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cc8bd9a50"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cc8bd9bd8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cc8bd9d60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cc8bd8020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cc8bd81a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cc8bd8330"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc8bd84b8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cc8bd8840"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cc8bd89c8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cc8bd8b50"/>
        <function-ref name="tx" scoped="" ref="0x7f6cc8bd8cd8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cc8bd8e60"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cc8bd7020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cc8bd71a8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cc8bd7330"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cc8bd74b8"/>
        <function-ref name="rx" scoped="" ref="0x7f6cc8bd7640"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cc8bd77c8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cc8bd7950"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cc8bd7ad8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cc8bd7c60"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cc8bd7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cc8bdb120" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8bdb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc8bdb470"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc8bdb5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cca36f660" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cca36f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cca36f9b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cca36fb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cca36eb58" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca36eb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cca36c020"/>
        <function-ref name="configure" scoped="" ref="0x7f6cca36c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6cca374a48" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6cca374a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca374d98"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca371020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca370498" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca370498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca3707e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca370970"/>
        <function-ref name="request" scoped="" ref="0x7f6cca370af8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca370c80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca370e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6cca371940" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca371940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca371c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cca36fe30" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca36fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cca36e1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cca36e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6cca3592a8" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca3592a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cca3595f8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cca359780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6cca36a480" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6cca36a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca36a7f0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca36a978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f6cca35abd8" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6cca35abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca359020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6cca36ad60" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cca36ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cca35a170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f6cca35a438" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f6cca35a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cca35a788"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cca35a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cca2e5d18" loc="92:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cca2e5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cca2e30d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cca2e3260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cca2e2960" loc="96:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cca2e2960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cca2e2cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f6cca2e2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6cca2e34a8" loc="93:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cca2e34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca2e37f8"/>
        <function-ref name="requested" scoped="" ref="0x7f6cca2e3980"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca2e3b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca2e3c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cca2e3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca2e5020" loc="91:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca2e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca2e5390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca2e5518"/>
        <function-ref name="request" scoped="" ref="0x7f6cca2e56a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca2e5828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca2e59b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cca2e20e0" loc="94:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cca2e20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cca2e2430"/>
        <function-ref name="userId" scoped="" ref="0x7f6cca2e25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc8b55730" loc="44:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc8b55730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc8b55a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6cc8b55d08" loc="45:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6cc8b55d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc8b540a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6cc8b54228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6cc8b543b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc8b54538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc8b52af8" loc="55:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc8b52af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc8b52e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8b51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cc8b4f6f8" loc="60:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc8b4f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc8b4fa68"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc8b4fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6cc8b4fe78" loc="61:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6cc8b4fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc8b4e1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6cc8b4e380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6cc8b4e508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc8b4e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6cc8b51268" loc="56:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc8b51268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc8b515b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6cc8b51740"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc8b518c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc8b51a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8b51bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc8b4e8d8" loc="62:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc8b4e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc8b4ec28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc8b4edb0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc8b4d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc8b4d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc8b4d330"/>
        <function-ref name="get" scoped="" ref="0x7f6cc8b4d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc8b4d640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc8b4dc60"/>
        <function-ref name="set" scoped="" ref="0x7f6cc8b4d950"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc8b4d7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc8b4dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc8b53d80" loc="54:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc8b53d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc8b52170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc8b522f8"/>
        <function-ref name="request" scoped="" ref="0x7f6cc8b52480"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc8b52608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc8b52790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cc8b51e20" loc="57:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8b51e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc8b4f1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc8b4f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6cc8b4c020" loc="75:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f6cc8b4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc8b4c370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc8b4c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f6cca2db298" loc="4:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f6cca2db298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6cca2db5e8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6cca2db770"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6cca2db8f8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6cca2dba80"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6cca2dbc08"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6cca2dbd90"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6cca2d8020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6cca2d81a8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cca2d8330"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6cca2d84b8"/>
        <function-ref name="getData" scoped="" ref="0x7f6cca2d8640"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6cca2d87c8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6cca2d8950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6cca2d8bd8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6cca2d8d60"/>
        <function-ref name="getIV" scoped="" ref="0x7f6cca2d7020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6cca2d71a8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6cca2d7330"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6cca2d74b8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6cca2d7640"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6cca2d77c8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6cca2d7950"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6cca2d7ad8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6cca2d7c60"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6cca2d7de8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6cca2d6220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6cca2d63a8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6cca2d6530"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6cca2d66b8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6cca2d6840"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6cca2d69c8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6cca2d6b50"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6cca2d6cd8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6cca2d6e60"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6cca2d5020"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6cca2d51a8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6cca2d5330"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6cca2d54b8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6cca2d5640"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6cca2d57c8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6cca2d5950"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6cca2d5ad8"/>
        <function-ref name="setData" scoped="" ref="0x7f6cca2d5c60"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6cca2d5de8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6cca2d4020"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6cca2d41a8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6cca2d4330"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6cca2d44b8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6cca2d4640"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6cca2d4bc8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6cca2d4d50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6cca2d3020"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6cca2d31a8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6cca2d3330"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6cca2d34b8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6cca2d3640"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6cca2d37c8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6cca2d3950"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6cca2d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f6cca2c96e0" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f6cca2c96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cca2c9a30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cca2c9bb8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cca2c9d40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cca2c8020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cca2c81a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cca2c8330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cca2c84b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cca2c8640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cca2c87c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cca2c8950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cca2c8ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cca2c8c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cca2c8de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cca2c7120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cca2c72a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cca2c7430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cca2c75b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cca2c7740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cca2c78c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cca2c7a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cca2c7bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cca2c7d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cca2c6020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cca2c61a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cca2c6330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cca2c66b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cca2c6840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cca2c69c8"/>
        <function-ref name="tx" scoped="" ref="0x7f6cca2c6b50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cca2c6cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cca2c6e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cca2c5020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cca2c51a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cca2c5330"/>
        <function-ref name="rx" scoped="" ref="0x7f6cca2c54b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cca2c5640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cca2c57c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cca2c5950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cca2c5ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cca2c5c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6cca2c3e00" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6cca2c3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca2c21a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca2c2330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca2c24b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca2c2640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca2c27c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca2c2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca2c2ad8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca2c2c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca2c2de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca2c1020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca2c11a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca2c1330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca2c14b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca2c1740"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca2c18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f6cca2d2b30" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f6cca2d2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f6cca2d2e80"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f6cca2cf030"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f6cca2cf1b8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f6cca2cf340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f6cca2cf4c8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f6cca2cf650"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f6cca2cf7d8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f6cca2cf960"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cca2cfae8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f6cca2cfc70"/>
        <function-ref name="getData" scoped="" ref="0x7f6cca2cfdf8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f6cca2ce020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f6cca2ce1a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f6cca2ce430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f6cca2ce5b8"/>
        <function-ref name="getIV" scoped="" ref="0x7f6cca2ce740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f6cca2ce8c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f6cca2cea50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f6cca2cebd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f6cca2ced60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f6cca2cd020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f6cca2cd1a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f6cca2cd330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f6cca2cd4b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f6cca2cd640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f6cca2cd9c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f6cca2cdb50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f6cca2cdcd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f6cca2cde60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f6cca2cc020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f6cca2cc1a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f6cca2cc330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f6cca2cc4b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f6cca2cc640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f6cca2cc7c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f6cca2cc950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f6cca2ccad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f6cca2ccc60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f6cca2ccde8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f6cca2cb020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f6cca2cb1a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f6cca2cb330"/>
        <function-ref name="setData" scoped="" ref="0x7f6cca2cb4b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f6cca2cb640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f6cca2cb7c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f6cca2cb950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f6cca2cbad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f6cca2cbc60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f6cca2cbde8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f6cca2ca420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f6cca2ca5a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f6cca2ca730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f6cca2ca8b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f6cca2caa40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f6cca2cabc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f6cca2cad50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f6cca2c9020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f6cca2c91a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f6cca2c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6cca2c4060" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6cca2c4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca2c43b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca2c4538"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca2c46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca2c4848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca2c49d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca2c4b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca2c4ce0"/>
        <function-ref name="get" scoped="" ref="0x7f6cca2c4e68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca2c3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca2c31a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca2c3330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca2c34b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca2c3640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca2c38c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca2c3a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6cca1bba88" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca1bba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ba020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6cca1c4100" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6cca1c4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c4450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6cca1bea88" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca1bea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1bedd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6cca1b8470" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca1b8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b87c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6cca1b1c10" loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6cca1b1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b0020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6cca1b8c10" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6cca1b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b7020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6cca1a52e8" loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6cca1a52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a5638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6cca1a72e8" loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cca1a72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a7638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6cca1c33a0" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca1c33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6cca1ad470" loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6cca1ad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ad7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ad948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6cca1a82e8" loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca1a82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a8638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6cca1bda88" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6cca1bda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1bddd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6cca1bca88" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca1bca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1bcdd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6cca1b3470" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6cca1b3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b37c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6cca1b5c10" loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6cca1b5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b4020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6cca1b7470" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca1b7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b77c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cca1c7a90" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca1c7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca1c7de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca1c6020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca1c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6cca1c2c50" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca1c2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6cca1c12e8" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6cca1c12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c1738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6cca1aca38" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cca1aca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1acd88"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6cca1c1a00" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca1c1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6cca1a8a88" loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cca1a8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a8dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6cca1c2020" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca1c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6cca1aec10" loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6cca1aec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ad020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6cca1bc2e8" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca1bc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1bc638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1bc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6cca1bd2e8" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca1bd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1bd638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1bd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6cca1c6a88" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6cca1afc10" loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cca1afc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ae020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6cca1b0470" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6cca1b0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b07c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6cca1ae470" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cca1ae470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ae7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ae948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6cca1a6a88" loc="107:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca1a6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a6dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6cca1a7a88" loc="105:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cca1a7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a7dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6cca1b4470" loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6cca1b4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b47c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6cca1b0c10" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6cca1b0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1af020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6cca1a9a88" loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6cca1a9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a9dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6cca1b6470" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6cca1b6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b67c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6cca1a5a88" loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6cca1a5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca1a5dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca1a3020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a31a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca1a3330"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca1a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6cca1c6470" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cca1c6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6cca1be2e8" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6cca1be2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1be638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1be7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6cca1bb2e8" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca1bb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1bb638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6cca1b3c10" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6cca1b3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b1020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6cca1b7c10" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca1b7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b6020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6cca1b1470" loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6cca1b1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b17c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6cca1ba470" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca1ba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ba7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ba948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6cca1c4718" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6cca1c4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6cca1bac10" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca1bac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b8020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca1c8e60" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca1c8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca1c71e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca1c7370"/>
        <function-ref name="request" scoped="" ref="0x7f6cca1c74f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca1c7680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca1c7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6cca1c0060" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca1c0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6cca1c0c90" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6cca1c0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6cca1a92e8" loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6cca1a92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a9638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6cca1aaa88" loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca1aaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1aadd8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6cca1c2638" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca1c2638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c2988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6cca1aa2e8" loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cca1aa2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1aa638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1aa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6cca1a62e8" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6cca1a62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1a6638"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6cca1b4c10" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cca1b4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b3020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6cca1af470" loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6cca1af470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1af7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1af948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6cca1c4d30" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6cca1c4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6cca1c39b8" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1c39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6cca1b6c10" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6cca1b6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b5020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6cca1c0678" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6cca1c0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1c09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6cca1b5470" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6cca1b5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1b57c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1b5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6cca1adc10" loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6cca1adc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1ac5e8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1ac770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6cca1a3780" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca1a3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca1a3ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca1a3c58"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1a3de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca1a2020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca1a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6cca18e470" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca18e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18e9c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18eb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6cca199900" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6cca199900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca199c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6cca192470" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca192470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1927c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca192948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6cca18dd98" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca18dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18c170"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6cca185470" loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6cca185470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1857c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca185948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6cca18c5c0" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6cca18c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18c910"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6cca1797c0" loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6cca1797c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca179b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca179c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6cca17b7c0" loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cca17b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17bb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6cca198c50" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca198c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca197020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6cca181c10" loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6cca181c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca180020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6cca17d7c0" loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca17d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17db10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6cca191470" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6cca191470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1917c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca191948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6cca18f470" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca18f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6cca187c10" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6cca187c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca186020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6cca188470" loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6cca188470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1887c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca188948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6cca18cd60" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca18cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18b0d8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cca19a2a8" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca19a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca19a5f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca19a780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca19a908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6cca195638" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca195638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca195988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6cca195c50" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6cca195c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1940d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6cca17f060" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cca17f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17f3b0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6cca1943a0" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca1943a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca1946f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6cca17b020" loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cca17b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17b370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6cca197900" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca197900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca197c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6cca181470" loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6cca181470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1817c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca181948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6cca191c10" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca191c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18f020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6cca192c10" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca192c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca191020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6cca1992e8" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca1992e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca199638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6cca182470" loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cca182470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1827c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca182948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6cca185c10" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6cca185c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca184020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6cca182c10" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cca182c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca181020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6cca179020" loc="107:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca179020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca179370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1794f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6cca17a020" loc="105:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cca17a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17a370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6cca188c10" loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6cca188c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca187020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6cca184470" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6cca184470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1847c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca184948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6cca17d020" loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6cca17d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17d370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6cca18bcc8" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6cca18bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1890a0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca189228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6cca178020" loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6cca178020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca178370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca1784f8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca178680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca178808"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca178990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6cca19abd0" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cca19abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca199020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6cca193c50" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6cca193c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca192020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6cca18fc10" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca18fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18e020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6cca186470" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6cca186470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1867c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca186948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6cca18b528" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6cca18b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18b878"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6cca186c10" loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6cca186c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca185020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6cca18ee10" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca18ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18d1a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6cca198020" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6cca198020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca198370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6cca18d5f8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca18d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca18d948"/>
        <function-ref name="write" scoped="" ref="0x7f6cca18dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca19b558" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca19b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca19b8a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca19ba30"/>
        <function-ref name="request" scoped="" ref="0x7f6cca19bbb8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca19bd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca19a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6cca1949b8" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca1949b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca194d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6cca193638" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6cca193638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca193988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6cca17e7c0" loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6cca17e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17eb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6cca17e020" loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6cca17e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17e370"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6cca195020" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca195020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca195370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6cca17f800" loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cca17f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17fb50"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17fcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6cca17a7c0" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6cca17a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca17ab10"/>
        <function-ref name="write" scoped="" ref="0x7f6cca17ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6cca187470" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cca187470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca1877c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca187948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6cca184c10" loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6cca184c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca182020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6cca198638" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6cca198638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca198988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6cca1972e8" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca1972e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca197638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6cca1894f0" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6cca1894f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca189840"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1899c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6cca193020" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6cca193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca193370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6cca189c90" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6cca189c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca188020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca1881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6cca180470" loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6cca180470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca180bc0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca180d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6cca178c58" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca178c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca177020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca1771a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca177330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca1774b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca177640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f6cca16e690" loc="54:/home/muzi/tinyos-main//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6cca16e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6cca16e9e0"/>
        <function-ref name="changed" scoped="" ref="0x7f6cca16eb68"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6cca16ecf0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6cca16ee78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6cca170cd0" loc="13:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6cca170cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6cca1590a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6cca155190" loc="5:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6cca155190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6cca1554e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f6cca152648" loc="8:/home/muzi/tinyos-main//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6cca152648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca152998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f6cca158ac8" loc="8:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6cca158ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca158e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f6cca13d360" loc="14:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6cca13d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca13d6b0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca13d838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f6cca13dba8" loc="15:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f6cca13dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cca141020"/>
        <function-ref name="stop" scoped="" ref="0x7f6cca1411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f6cca143a58" loc="11:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f6cca143a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca143da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f6cca146ba0" loc="8:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6cca146ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca12e020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca12e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f6cca12e530" loc="11:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f6cca12e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca12e880"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca12ea08"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca12eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca12ed18"/>
        <function-ref name="get" scoped="" ref="0x7f6cca12d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca12d1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca12d330"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca12d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f6cca125748" loc="15:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6cca125748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6cca128578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f6cca12a108" loc="11:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f6cca12a108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca12a458"/>
        <function-ref name="write" scoped="" ref="0x7f6cca12a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f6cca12a968" loc="14:/home/muzi/tinyos-main//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f6cca12a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca12acb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca12ae40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca129020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca1291a8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca129330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca1294b8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca129640"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca1297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6cca12cb78" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6cca12cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6cca1068f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6cca103bc8" loc="54:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f6cca103bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6cca0f4948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6cca0f3020" loc="55:/home/muzi/tinyos-main//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cca0f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca0f3d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca0f26b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca0f2230"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca0f2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f6cca0ed3a8" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f6cca0ed3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca0ec130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca0eca40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca0ec5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca0eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f6cca0e7928" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f6cca0e7928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cca0e7c78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f6cca0e7e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f6cca0e6020"/>
        <function-ref name="get" scoped="" ref="0x7f6cca0e61a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f6cca0e6330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca0e64b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cca0e6640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca0e67c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca0e6950"/>
        <function-ref name="setMode" scoped="" ref="0x7f6cca0e6ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f6cca0e6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6cca0ea980" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cca0ea980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6ccaf8ca48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca0e8730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cca0e7088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cca0e8bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cca0e7510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f6cca12f370" loc="3:/home/muzi/tinyos-main//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f6cca12f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca12f6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca12f848"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca12f9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca12fb58"/>
        <function-ref name="get" scoped="" ref="0x7f6cca12fce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca12fe68"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0e2020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca0e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f6cca0e05f8" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f6cca0e05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca0e0948"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca0e0ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cca0e0c58"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca0e0de0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca0df020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cca0df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca0df330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca0df4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cca0df640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cca0df7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0df950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cca0dfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cca0dfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cca0de020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca0de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f6cca0e14e0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f6cca0e14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca0e1830"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca0e19b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca0e1b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca0e1cc8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca0e1e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca0e0020"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0e01a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca0e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cca0d9020" loc="14:/home/muzi/tinyos-main//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cca0d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cca0d9370"/>
        <function-ref name="stop" scoped="" ref="0x7f6cca0d94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6cca0cb140" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cca0cb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6cca0cb490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6cca0cb618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6cca0cb7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6cca0cb928"/>
        <function-ref name="setCca" scoped="" ref="0x7f6cca0cbab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6cca0cbc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6cca0cacb8" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cca0cacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cca0c90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f6cca0cc480" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6cca0cc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cca0cc7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cca0cc958"/>
        <function-ref name="modify" scoped="" ref="0x7f6cca0ccae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cca0ccc68"/>
        <function-ref name="resend" scoped="" ref="0x7f6cca0ccdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cca0cfc50" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cca0cfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cca0cc020"/>
        <function-ref name="stop" scoped="" ref="0x7f6cca0cc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6cca0c9458" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cca0c9458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cca0c97a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6cca0bf7c0" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cca0bf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6cca0bfb10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6cca0bfc98"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6cca0bfe20"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6cca0bc020"/>
        <function-ref name="setCca" scoped="" ref="0x7f6cca0bc1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6cca0bc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6cca0b4460" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6cca0b4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6cca0b3900"/>
        <function-ref name="clear" scoped="" ref="0x7f6cca0b2020"/>
        <function-ref name="isValid" scoped="" ref="0x7f6cca0b3220"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0b2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6cca09fde0" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca09fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca09e170"/>
        <function-ref name="write" scoped="" ref="0x7f6cca09e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6cca09e650" loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cca09e650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca09e9a0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca09eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6cca0bc738" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cca0bc738"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cca0bca88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f6cca0a1478" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca0a1478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca0a17c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f6cca0a8d60" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6cca0a8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6cca0af0d8"/>
        <function-ref name="disable" scoped="" ref="0x7f6cca0af260"/>
        <function-ref name="captured" scoped="" ref="0x7f6cca0af3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6cca0af570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f6cca0ba820" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f6cca0ba820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cca0b7020"/>
        <function-ref name="fired" scoped="" ref="0x7f6cca0b8020"/>
        <function-ref name="startAt" scoped="" ref="0x7f6cca0b8930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cca0b84a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6cca0b74a8"/>
        <function-ref name="start" scoped="" ref="0x7f6cca0b9598"/>
        <function-ref name="stop" scoped="" ref="0x7f6cca0b9a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6cca0b7940" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cca0b7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cca0b7c90"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cca0b7e18"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cca0b5020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cca0b51a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cca0b5330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cca0b54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f6cca0a3538" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cca0a3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0a3888"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0a3a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6cca0a3da8" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca0a3da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0a2170"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0a22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f6cca097750" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cca097750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cca097aa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6cca097c28"/>
        <function-ref name="sfd" scoped="" ref="0x7f6cca097db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cca0c09f8" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cca0c09f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cca0c0d48"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cca0bf020"/>
        <function-ref name="modify" scoped="" ref="0x7f6cca0bf1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cca0bf330"/>
        <function-ref name="resend" scoped="" ref="0x7f6cca0bf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f6cca0a6cb0" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca0a6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca0a40a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca0a4228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca0a43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f6cca0a1b68" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca0a1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca0a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6cca0aec98" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6cca0aec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca0aa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca0aa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca0aa330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca0aa4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cca0aa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca0aa7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0aa950"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca0aaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cca0c1b28" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cca0c1b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cca0c1e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cca0b57e8" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cca0b57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cca0b5b38"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cca0b5cc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cca0b5e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f6cca0a81d8" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cca0a81d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cca0a8528"/>
        <function-ref name="isSet" scoped="" ref="0x7f6cca0a86b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cca0a8838"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0a89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6cca0a03d0" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca0a03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0a0920"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0a0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6cca0a6020" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6cca0a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca0a6370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca0a64f8"/>
        <function-ref name="request" scoped="" ref="0x7f6cca0a6680"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca0a6808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca0a6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f6cca0af8b8" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f6cca0af8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca0afd08"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca0ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca0ae1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca0ae330"/>
        <function-ref name="get" scoped="" ref="0x7f6cca0ae4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca0ae640"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0ae7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca0ae950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6cca09ee80" loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cca09ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca09d1f8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca09d380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f6cca09d6f0" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6cca09d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca09da40"/>
        <function-ref name="write" scoped="" ref="0x7f6cca09dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6cca0a2670" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cca0a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca0a29c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f6cca0aae20" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f6cca0aae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cca0a71a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cca0a7330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cca0a74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cca0a7640"/>
        <function-ref name="get" scoped="" ref="0x7f6cca0a77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cca0a7950"/>
        <function-ref name="set" scoped="" ref="0x7f6cca0a7ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cca0a7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cca09b0c0" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cca09b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cca09b410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cca09b598"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cca09b720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cca09b8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cca09ba30"/>
        <function-ref name="get" scoped="" ref="0x7f6cca09bbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cca09bd40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cca09a4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6cca09a020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cca09a1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cca09a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6cca09f558" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca09f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca09f8a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca09fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cca0c0198" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cca0c0198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cca0c04e8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cca0c0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f6cca0a4720" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6cca0a4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cca0a4a70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cca0a4bf8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0a4d80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cca0a3020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cca0a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f6cca0a2d40" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6cca0a2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca0a10d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f6cca0a0e30" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6cca0a0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca09f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6cca0bce80" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cca0bce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cca0ba1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6cca002470" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cca002470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0029c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca002b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6cca00d9b8" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6cca00d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6cca006470" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cca006470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0067c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca006948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6cca001d98" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cca001d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca000170"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0002f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6cc9ff9470" loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6cc9ff9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff97c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6cca0005c0" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6cca0005c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca000910"/>
        <function-ref name="write" scoped="" ref="0x7f6cca000a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6cc9fed7c0" loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9fed7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fedb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fedc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6cc9fef7c0" loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cc9fef7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fefb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fefc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6cca00cc50" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6cca00cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6cc9ff5c10" loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6cc9ff5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff4020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6cc9ff17c0" loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cc9ff17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff1b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6cca005470" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6cca005470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0057c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca005948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6cca003470" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6cca003470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0037c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cca003948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6cc9ffbc10" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6cc9ffbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffa020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6cc9ffc470" loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6cc9ffc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffc7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6cca000d60" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6cca000d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fff0d8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fff260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cca00e430" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cca00e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cca00e780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cca00e908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cca00ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6cca009638" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cca009638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca009988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6cca009c50" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6cca009c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca0080d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6cc9ff3060" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cc9ff3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff33b0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff3538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6cca0083a0" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6cca0083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca0086f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6cc9fef020" loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9fef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fef370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fef4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6cca00b900" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cca00b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6cc9ff5470" loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6cc9ff5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff57c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6cca005c10" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cca005c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca003020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6cca006c10" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cca006c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca005020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6cca00d3a0" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6cca00d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6cc9ff6470" loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cc9ff6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff67c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6cc9ff9c10" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6cc9ff9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff8020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6cc9ff6c10" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cc9ff6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff5020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6cc9fed020" loc="107:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6cc9fed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fed370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fed4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6cc9fee020" loc="105:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cc9fee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fee370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fee4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6cc9ffcc10" loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6cc9ffcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffb020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6cc9ff8470" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6cc9ff8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff87c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6cc9ff1020" loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6cc9ff1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff1370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6cc9fffcc8" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6cc9fffcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffd0a0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffd228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6cc9fec020" loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9fec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cc9fec370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cc9fec4f8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fec680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cc9fec808"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cc9fec990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6cca00ed58" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cca00ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6cca007c50" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6cca007c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca006020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6cca003c10" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cca003c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca002020"/>
        <function-ref name="write" scoped="" ref="0x7f6cca0021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6cc9ffa470" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6cc9ffa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffa7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6cc9fff528" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6cc9fff528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fff878"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fffa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6cc9ffac10" loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6cc9ffac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff9020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6cca002e10" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6cca002e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca0011a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cca001330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6cca00c020" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6cca00c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6cca0015f8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cca0015f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cca001948"/>
        <function-ref name="write" scoped="" ref="0x7f6cca001ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cca00f7d0" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cca00f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cca00fb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cca00fca8"/>
        <function-ref name="request" scoped="" ref="0x7f6cca00fe30"/>
        <function-ref name="granted" scoped="" ref="0x7f6cca00e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cca00e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6cca0089b8" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6cca0089b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca008d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6cca007638" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6cca007638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca007988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6cc9ff27c0" loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6cc9ff27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff2b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6cc9ff2020" loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6cc9ff2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff2370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6cca009020" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cca009020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca009370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6cc9ff3800" loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cc9ff3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff3b50"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff3cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6cc9fee7c0" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6cc9fee7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9feeb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9feec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6cc9ffb470" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cc9ffb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffb7c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6cc9ff8c10" loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6cc9ff8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff6020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6cca00c638" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6cca00c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6cca00b2e8" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6cca00b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca00b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6cc9ffd4f0" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6cc9ffd4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffd840"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffd9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6cca007020" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6cca007020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cca007370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6cc9ffdc90" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6cc9ffdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ffc020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ffc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6cc9ff4470" loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6cc9ff4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ff4bc0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ff4d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6cc9fecc58" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6cc9fecc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cc9feb020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cc9feb1a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9feb330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cc9feb4b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cc9feb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6cc9fde808" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cc9fde808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9fdeb58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6cc9fdece0"/>
        <function-ref name="sfd" scoped="" ref="0x7f6cc9fdee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9fdd168" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9fdd168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9fdd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6cc9fdd8c0" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9fdd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cc9fddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9fde020" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9fde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc9fde370"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9fde4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f6cc9fd5688" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f6cc9fd5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc9fd59d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9fd5b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc9fd5ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc9fd5e70"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9fd4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc9fd41a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9fd4330"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc9fd44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6cc9fceaf0" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6cc9fceaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6cc9fcee40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6cc9fcd020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6cc9fcd1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6cc9fcd330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6cc9fcd4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6cc9fcd640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6cc9fcd7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6cc9fcd950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6cc9fcdad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6cc9fcdc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6cc9fcdde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6cc9fcc020"/>
        <function-ref name="sync" scoped="" ref="0x7f6cc9fcc1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6cc9fcc430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6cc9fcc5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f6cc9fb8e38" loc="148:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f6cc9fb8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9fb71c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9fb7348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6cc9fccb80" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6cc9fccb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6cc9fc9020"/>
        <function-ref name="clear" scoped="" ref="0x7f6cc9fc9700"/>
        <function-ref name="isValid" scoped="" ref="0x7f6cc9fcb8f8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9fc9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f6cc9fd4818" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f6cc9fd4818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc9fd4b68"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9fd4cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc9fd4e78"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc9fd3030"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9fd31b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc9fd3340"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9fd34c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc9fd3650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6cc9fc76a8" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cc9fc76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fc79f8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6cc9fc6020" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cc9fc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fc6370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fc64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f6cc9fc5108" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9fc5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fc5458"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fc55e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6cc9fcf328" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9fcf328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc9fcf678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc9fcf800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc9fcf988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc9fcfb10"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc9fcfc98"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc9fcfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6cc9fd8c48" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6cc9fd8c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9fd7020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6cc9fd71a8"/>
        <function-ref name="sfd" scoped="" ref="0x7f6cc9fd7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f6cc9fd0398" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6cc9fd0398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9fd06e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6cc9fd6420" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f6cc9fd6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc9fd6770"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9fd68f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc9fd6a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc9fd6c08"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9fd6d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc9fd5020"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9fd51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc9fd5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f6cc9fc5970" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9fc5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fc5cc0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fc5e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9fdcdf8" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9fdcdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9fd8170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cc9fce188" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9fce188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9fce4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9fce660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9fce7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9fd7600" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9fd7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9fd7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6cc9fd26c0" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f6cc9fd26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9fd2a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9fd2b98"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9fd2d20"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9fd1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9fd11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6cc9fc6850" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cc9fc6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fc6ba0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fc6d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f6cc9fd1518" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9fd1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cc9fd1868"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cc9fd19f0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fd1b78"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cc9fd1d00"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cc9fd0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6cc9fc3210" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cc9fc3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9fc3760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6cc9fd7d58" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9fd7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cc9fd60d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc9fc3a18" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc9fc3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc9fc3d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc9fc2020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc9fc21a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc9fc2330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9fc24b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9fc2640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9fc27c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9fc2de8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9fc2950"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9fc2ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc9fc2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6cc9fc8dc8" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cc9fc8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9fc7170"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9fc72f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f6cc9fc86c8" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6cc9fc86c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9fc8a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f6cc9fd3a30" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6cc9fd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cc9fd3d80"/>
        <function-ref name="disable" scoped="" ref="0x7f6cc9fd2020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6cc9fd21a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6cc9fd2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f6cc9fd0a88" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cc9fd0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9fcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9fd8460" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9fd8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc9fd87b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9fd8938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6cc9f5a6b0" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc9f5a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6cc9f5aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6cc9f5e4b0" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f5e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc9f5e800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc9f5e988"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc9f5eb10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc9f5ec98"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc9f5ee20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc9f5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6cc9f59130" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f59130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6cc9f58588"/>
        <function-ref name="clear" scoped="" ref="0x7f6cc9f58c68"/>
        <function-ref name="isValid" scoped="" ref="0x7f6cc9f59e80"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9f56380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f6cc9f5bd08" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f5bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9f5a0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9f5a228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9f5a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6cc9f52ac8" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cc9f52ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9f52e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f6cc9f51020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9f511a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9f51330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6cc9f55020" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6cc9f55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6cc9f54478"/>
        <function-ref name="clear" scoped="" ref="0x7f6cc9f54b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f6cc9f55d70"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9f52278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc9f5b3b8" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc9f5b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc9f5b708"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc9f5b890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc9f5ba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6cc9f4c630" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc9f4c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6cc9f4c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6cc9f4e2e8" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9f4e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc9f4e638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc9f4e7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc9f4e948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc9f4ead0"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc9f4ec58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc9f4ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6cc9f43618" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9f43618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9f43968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9f43af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9f43c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9f43e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9f42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f6cc9f4b060" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f6cc9f4b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6cc9f494b8"/>
        <function-ref name="clear" scoped="" ref="0x7f6cc9f49b98"/>
        <function-ref name="isValid" scoped="" ref="0x7f6cc9f4bdb0"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9f482b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f6cc9f4db60" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9f4db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9f4c020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9f4c1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9f4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6cc9f44ac8" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6cc9f44ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9f44e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f6cc9f43020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9f431a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9f43330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f6cc9f42520" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f6cc9f42520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9f410f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f6cc9f41788" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6cc9f41788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9f3f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6cc9f47020" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6cc9f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6cc9f45478"/>
        <function-ref name="clear" scoped="" ref="0x7f6cc9f45b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f6cc9f47d70"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9f44278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc9f4d210" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc9f4d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc9f4d560"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc9f4d6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc9f4d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6cc9ef3528" loc="48:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f6cc9ef3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9ef20f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6cc9ef2720" loc="49:/home/muzi/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cc9ef2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9ef0578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc9eef020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc9ef0a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc9eef4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9eed730" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9eed730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9ee9a18"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9eea158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9eeae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9eea9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9ee82e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9ee9e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9eea5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9eec370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9ee9448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9eec810"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9eeccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6cc9ed9c90" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6cc9ed9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed83e8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6cc9ee22e8" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f6cc9ee22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee2638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6cc9edcdd8" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6cc9edcdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9edb170"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9edb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6cc9ed67c0" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6cc9ed67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed6b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f6cc9ece020" loc="86:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f6cc9ece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ece370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ece4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6cc9ed5020" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f6cc9ed5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed5370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6cc9ec2470" loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f6cc9ec2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec27c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6cc9ec5470" loc="104:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f6cc9ec5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec57c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6cc9ee1638" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f6cc9ee1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f6cc9ecb7c0" loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f6cc9ecb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecbb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6cc9ec6470" loc="102:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6cc9ec6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec67c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6cc9edbd60" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f6cc9edbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9eda0d8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9eda260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6cc9edacc8" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f6cc9edacc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed90a0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed9228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f6cc9ed07c0" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f6cc9ed07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed0b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6cc9ed2020" loc="79:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f6cc9ed2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed2370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6cc9ed57c0" loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f6cc9ed57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed5b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6cc9ee5cd8" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6cc9ee5cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6cc9ee30a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6cc9ee3228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6cc9ee33b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6cc9edf020" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6cc9edf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9edf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6cc9edf638" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f6cc9edf638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9edfa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f6cc9ec9bc0" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f6cc9ec9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec8020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6cc9edfd50" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f6cc9edfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9edd0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6cc9ec6c10" loc="103:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6cc9ec6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec5020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6cc9ee02e8" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6cc9ee02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee0638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f6cc9ecb020" loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f6cc9ecb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecb370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6cc9eda528" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6cc9eda528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9eda878"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9edaa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6cc9edb5c0" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6cc9edb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9edb910"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9edba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6cc9ee3c90" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f6cc9ee3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f6cc9ecc020" loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f6cc9ecc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecc370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f6cc9ece7c0" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f6cc9ece7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9eceb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f6cc9ecc7c0" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f6cc9ecc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9eccb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9eccc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6cc9ec4c10" loc="107:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f6cc9ec4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec2020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6cc9ec5c10" loc="105:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f6cc9ec5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec4020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6cc9ed27c0" loc="80:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f6cc9ed27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed2b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f6cc9ecd020" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f6cc9ecd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecd370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6cc9ec7c10" loc="101:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f6cc9ec7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec6020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6cc9ed47c0" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f6cc9ed47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed4b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6cc9ec2c10" loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f6cc9ec2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cc9ec1020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cc9ec11a8"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec1330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cc9ec14b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cc9ec1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6cc9ee3678" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f6cc9ee3678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6cc9edc638" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f6cc9edc638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9edc988"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9edcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6cc9ed94f0" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6cc9ed94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed9840"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed99c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f6cc9ecf020" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f6cc9ecf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecf370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6cc9ed4020" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f6cc9ed4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed4370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f6cc9ecf7c0" loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f6cc9ecf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecfb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6cc9ed8838" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f6cc9ed8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed8b88"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6cc9ee2900" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f6cc9ee2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6cc9ed6020" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6cc9ed6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed6370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc9ee50e0" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc9ee50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9ee5430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9ee55b8"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9ee5740"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9ee58c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9ee5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6cc9edd3a0" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f6cc9edd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9edd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6cc9edc020" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f6cc9edc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9edc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6cc9ec7470" loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f6cc9ec7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec77c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6cc9ec8c10" loc="99:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f6cc9ec8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec7020"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6cc9ee0900" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6cc9ee0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6cc9ec8470" loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6cc9ec8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec87c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6cc9ec4470" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f6cc9ec4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec47c0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6cc9ed0020" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6cc9ed0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed0370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f6cc9ecd7c0" loc="89:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f6cc9ecd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ecdb10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ecdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6cc9ee1020" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f6cc9ee1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6cc9ee1c50" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f6cc9ee1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9ee0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6cc9ed3020" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f6cc9ed3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed3370"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6cc9edd9b8" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f6cc9edd9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6cc9eddd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6cc9ed37c0" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f6cc9ed37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ed3b10"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ed3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f6cc9ec9020" loc="94:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f6cc9ec9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6cc9ec9770"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec98f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6cc9ec1908" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f6cc9ec1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6cc9ec1c58"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6cc9ec1de0"/>
        <function-ref name="write" scoped="" ref="0x7f6cc9ec0020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6cc9ec01a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6cc9ec0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6cc9e9b690" loc="46:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc9e9b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc9e9b9e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc9e9bb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6cc9e97668" loc="45:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f6cc9e97668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9e9b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9e9f8c8" loc="44:/home/muzi/tinyos-main//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9e9f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9e9fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6cc9e93568" loc="48:/home/muzi/tinyos-main//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc9e93568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc9e938b8"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc9e93a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6cc9e94528" loc="47:/home/muzi/tinyos-main//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f6cc9e94528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9e930c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9e99b38" loc="46:/home/muzi/tinyos-main//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9e99b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9e94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cc9e9dbb0" loc="67:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cc9e9dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9e95020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9e951a8"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9e95330"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9e954b8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9e95640"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9e957c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9e79838" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e79838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e79b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e79d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e78020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e781a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e78330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9e7ca70" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9e7ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e7cdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e79020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e791a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e79330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e794b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9e74578" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e74578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e748c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e74a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e74bd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e74d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9e75298" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9e75298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e755e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e75770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e758f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e75a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e75c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6cc9e72080" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc9e72080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc9e723d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc9e72558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9e75e80" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9e75e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9e741f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cc9e72848" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9e72848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e72b98"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9e72d20"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9e71020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f6cc9e732a0" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cc9e732a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9e735f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9e73778"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9e73900"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9e73a88"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9e73c10"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9e73d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cc9e76468" loc="67:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cc9e76468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9e767b8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9e76940"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9e76ac8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9e76c50"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9e76dd8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9e61020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9e5ce50" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e5b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9e5c080" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9e5c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e5c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f6cc9e5c748" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6cc9e5c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e5ca98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9e57728" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e57728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e57a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9e57020" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9e57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9e57370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9e582b0" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9e582b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e58600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cc9e57d68" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9e57d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e550f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9e55278"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9e55400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f6cc9e58978" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f6cc9e58978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e58cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9e29020" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e29370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9e29670" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e29670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e299c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e29b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e29cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e29e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9e2da40" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9e2da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e2dd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e2c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e2c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e2c330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e2c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6cc9e2cdb8" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6cc9e2cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e2b170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e2b2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e2b480"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e2b608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e2b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9e2c748" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9e2c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e2ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc9e5de20" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc9e5de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9e2d1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9e2d330"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9e2d4b8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9e2d640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9e2d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6cc9e2bae8" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6cc9e2bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e2be38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6cc9e2a1a8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6cc9e2a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9e2a4f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9e2a680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e2a808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e2a990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9e2ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9e1f528" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9e1f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e1f878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e1fa00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e1fb88"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e1fd10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9e1e358" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9e1e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e1e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f6cc9df2ac0" loc="184:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f6cc9df2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9df2e10"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9df1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6cc9e1e970" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9e1e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc9e1ecc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc9e1ee48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc9e1d020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc9e1d1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc9e1d330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc9e1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f6cc9e21490" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f6cc9e21490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e217e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e21968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e21af0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e21c78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e21e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6cc9e1c1c0" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6cc9e1c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc9e1c510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6cc9e1c698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6cc9e1c820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc9e1c9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cc9e1d7a8" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9e1d7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e1daf8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9e1dc80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9e1de08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6cc9e22dc8" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f6cc9e22dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e21170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc9e24428" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc9e24428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9e24778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9e24900"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9e24a88"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9e24c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9e24d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6cc9e22118" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f6cc9e22118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9e22468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e225f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e22778"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9e22900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9e22a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f6cc9e20188" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f6cc9e20188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9e204d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f6cc9e20808" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f6cc9e20808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9e20b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9e20ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9e20e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9e1f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9e1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9dd3c28" loc="44:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9dd3c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9dd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6cc9dd22a8" loc="45:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6cc9dd22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc9dd25f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6cc9dd2780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6cc9dd2908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc9dd2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6cc9dc5020" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9dc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9dc5370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9dc54f8"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9dc5680"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9dc5808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9dc49d0" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9dc49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9dc4d20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9dc3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9dc31a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9dc3330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9dc34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9dc37f0" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9dc37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9dc3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9dc7d50" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9dc7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9dc60d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9dc6260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9dc63e8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9dc6570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9dc66f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6cc9dc72f0" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6cc9dc72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6cc9dc7640"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6cc9dc77c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6cc9dc7950"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6cc9dc7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f6cc9dc5b28" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f6cc9dc5b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9dc5e78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9dc4030"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9dc41b8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9dc4340"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9dc44c8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9dc4650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6cc9dc2020" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6cc9dc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9dc2370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9dc24f8"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9dc2680"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9dc2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9dc6988" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9dc6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9dc6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9dba358" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9dba358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9dba6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9dbdb08" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9dbdb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9dbde58"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9dbc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9dbc1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9dbc330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9dbc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f6cc9d9e6f0" loc="109:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f6cc9d9e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d9ea40"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d9ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioBackoff" ref="0x7f6cc9dbb470" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cc9dbb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6cc9dbb7c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6cc9dbb948"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6cc9dbbad0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6cc9dbbc58"/>
        <function-ref name="setCca" scoped="" ref="0x7f6cc9dbbde0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6cc9dba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f6cc9da0b50" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9da0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc9da4020"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc9da41a8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f6cc9da4330"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f6cc9da44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OffTimer" ref="0x7f6cc9db1020" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OffTimer" scoped="" ref="0x7f6cc9db1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9dad2b8"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9db0978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9dae6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9dae278"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9dadb58"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9dad708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9db0dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9db1b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9daec98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9db0088"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9db0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9dbe730" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9dbe730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9dbea80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9dbec08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9dbed90"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9dbd020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9dbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6cc9dc1c60" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6cc9dc1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6cc9dbe020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6cc9dbe1a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6cc9dbe330"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6cc9dbe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f6cc9db6198" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f6cc9db6198"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9db65e8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9db6770"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9db68f8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9db6a80"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9db6c08"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9db6d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6cc9da7438" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc9da7438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc9da7788"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc9da7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resend" ref="0x7f6cc9dbc810" loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resend" scoped="" ref="0x7f6cc9dbc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9dbcb60"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9dbcce8"/>
        <function-ref name="modify" scoped="" ref="0x7f6cc9dbce70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9dbb020"/>
        <function-ref name="resend" scoped="" ref="0x7f6cc9dbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9dc1618" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9dc1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9dc1968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6cc9dbaa18" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6cc9dbaa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9dbad68"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9db9020"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9db91a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9db9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9dbd438" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9dbd438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9dbd788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cc9db4e00" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9db4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9db71a8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9db7330"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9db74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x7f6cc9db3158" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9db3158"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9db34a8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9db3630"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9db37b8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9db3940"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9db3ac8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9db3c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x7f6cc9d9b4f0" loc="111:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x7f6cc9d9b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d9b840"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d9b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc9da7b88" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc9da7b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc9da6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc9da61a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc9da6330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc9da64b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9da6640"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9da67c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9da6950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9da5020"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9da6ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9da6c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc9da6de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDoneTimer" ref="0x7f6cc9dac1d0" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendDoneTimer" scoped="" ref="0x7f6cc9dac1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9da85f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9dabaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9da98c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9da9470"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9da7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9da8a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9da9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9dacd18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9da8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9dab200"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9dab6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f6cc9db77e0" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9db77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc9db7b30"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc9db7cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc9db7e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f6cc9db2020" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9db2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9db2370"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9db24f8"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9db2680"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9db2808"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9db2990"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9db2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resend" ref="0x7f6cc9d9d598" loc="110:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="resend" scoped="" ref="0x7f6cc9d9d598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d9d8e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d9da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerCycle" ref="0x7f6cc9db44b0" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9db44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x7f6cc9db4800"/>
        <function-ref name="detected" scoped="" ref="0x7f6cc9db4988"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x7f6cc9db4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x7f6cc9d9a350" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x7f6cc9d9a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d9a6a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d9a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6cc9d4a020" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9d4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9d4a370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9d4a4f8"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9d4a680"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9d4a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPowerState" ref="0x7f6cc9d49b20" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9d49b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9d49e70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9d48020"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9d481a8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9d48330"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9d484b8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9d48640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControlState" ref="0x7f6cc9d4ab78" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9d4ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9d49020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9d491a8"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9d49330"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9d494b8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9d49640"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9d497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x7f6cc9d4d5f8" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9d4d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x7f6cc9d4d948"/>
        <function-ref name="detected" scoped="" ref="0x7f6cc9d4dad0"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x7f6cc9d4dc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6cc9d45ac0" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9d45ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9d45e10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9d44020"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9d441a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9d44330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteIndicator" ref="0x7f6cc9d39c78" loc="70:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6cc9d39c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cc9d38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x7f6cc9d39570" loc="69:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6cc9d39570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cc9d398c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f6cc9d3b060" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f6cc9d3b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9d3b3b0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9d3b538"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9d3b6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9d3b848"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9d3b9d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9d3bb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x7f6cc9d35988" loc="96:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x7f6cc9d35988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d35dd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d34020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6cc9d3f7e8" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f6cc9d3f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9d3fb38"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9d3fcc0"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9d3fe48"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9d3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x7f6cc9d3e378" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x7f6cc9d3e378"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9d3e6c8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9d3e850"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9d3e9d8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9d3eb60"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9d3ece8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9d3ee70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x7f6cc9d383e8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6cc9d383e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6cc9d38738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc9d3bdd0" loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc9d3bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc9d3a170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc9d3a2f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc9d3a480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc9d3a608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9d3a790"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9d3a918"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9d3aaa0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9d391a8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9d3ac28"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9d3adb0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc9d39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getCca" ref="0x7f6cc9d34928" loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getCca" scoped="" ref="0x7f6cc9d34928"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d34c78"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d34e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f6cc9d3c208" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f6cc9d3c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9d3c558"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9d3c6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9d3c868"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9d3c9f0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9d3cb78"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9d3cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OnTimer" ref="0x7f6cc9d44800" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OnTimer" scoped="" ref="0x7f6cc9d44800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9d40a18"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9d41158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9d41e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9d419f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9d3f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9d40e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9d415a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9d43370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9d40448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9d43810"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9d43cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x7f6cc9d45198" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x7f6cc9d45198"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x7f6cc9d454e8"/>
        <function-ref name="detected" scoped="" ref="0x7f6cc9d45670"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x7f6cc9d457f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x7f6cc9d36a10" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x7f6cc9d36a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9d36d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9d35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cc9d01338" loc="67:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.RadioPowerStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cc9d01338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9d01688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9d01810"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9d01998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9d01b20"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9d01ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9d01e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cc9cff338" loc="67:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.SplitControlStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cc9cff338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9cff688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9cff810"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9cff998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9cffb20"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9cffca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9cffe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9cfd420" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.OnTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9cfd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9cf96c8"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9cfcdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9cfaad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9cfa688"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9cf8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9cf9b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9cfa238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9cfc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9cf90f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9cfc4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9cfc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9cf7a60" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.CheckTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9cf7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9cf3d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9cf4470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9cf31c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9cf4d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9cf2648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9cf21f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9cf48c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9cf5620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9cf3790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9cf5ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9cf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6cc9ce7060" loc="67:/home/muzi/tinyos-main//tos/system/StateC.nc">
      <component-ref qname="DefaultLplC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f6cc9ce7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6cc9ce73b0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6cc9ce7538"/>
        <function-ref name="isState" scoped="" ref="0x7f6cc9ce76c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6cc9ce7848"/>
        <function-ref name="requestState" scoped="" ref="0x7f6cc9ce79d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f6cc9ce7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9ce5128" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.OffTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9ce5128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9ce15f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9ce4a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9ce38c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9ce3470"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9ce0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9ce1a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9ce3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9ce5c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9ce1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9ce4158"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9ce45f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9cdfa60" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.SendDoneTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9cdfa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9cdbd60"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9cdd470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9cdb1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9cddd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9cda648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9cda1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9cdd8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9cde620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9cdb790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9cdeac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9cdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x7f6cc9cd9ab0" loc="3:/home/muzi/tinyos-main//tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc9cd9e00"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc9cd6020"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f6cc9cd61a8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f6cc9cd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x7f6cc9cd3020" loc="5:/home/muzi/tinyos-main//tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc9cd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc9cd3370"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc9cd34f8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f6cc9cd3680"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f6cc9cd3808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9cbde18" loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9cbde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9cbc1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9cbc330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9cbc4b8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9cbc640"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9cbc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9cc14a8" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9cc14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9cc17f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9cc1980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9cc1b08"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9cc1c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9cc1e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6cc9cbd128" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6cc9cbd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6cc9cbd478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6cc9cbd600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6cc9cbd788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6cc9cbd910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6cc9cbda98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f6cc9cb50c0" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9cb50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc9cb5410"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc9cb5598"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc9cb5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6cc9cba380" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f6cc9cba380"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6cc9cba6d0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6cc9cba858"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6cc9cba9e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6cc9cbab68"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6cc9cbacf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9c98cc8" loc="59:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9c98cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9c970a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9c98020" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9c98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9c98370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9c984f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9c98680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9c98808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9c98990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6cc9c96ab0" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f6cc9c96ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6cc9c96e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6cc9c95020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6cc9c951a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6cc9c95330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6cc9c954b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6cc9c95640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6cc9c957c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6cc9c95950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6cc9c95ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6cc9c95c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6cc9c95de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6cc9c94020"/>
        <function-ref name="sync" scoped="" ref="0x7f6cc9c941a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6cc9c94430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6cc9c945b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6cc9c99020" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6cc9c99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6cc9c99370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6cc9c994f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6cc9c99680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6cc9c99808"/>
        <function-ref name="setCca" scoped="" ref="0x7f6cc9c99990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6cc9c99b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6cc9c9a400" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f6cc9c9a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6cc9c9a750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6cc9c926a0" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f6cc9c926a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6cc9c929f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6cc9c92b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6cc9c92d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6cc9c91020"/>
        <function-ref name="setCca" scoped="" ref="0x7f6cc9c911a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6cc9c91330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9c9b2a8" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9c9b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9c9b5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9c9b780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9c9b908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9c9ba90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9c9bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc9ca0938" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc9ca0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9ca0c88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9ca0e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9c9f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9c9f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9c9f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6cc9c9d628" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6cc9c9d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9c9d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6cc9c97368" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc9c97368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc9c976b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc9c97840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc9c979c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc9c97b50"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc9c97cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc9c97e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6cc9c948d0" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6cc9c948d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6cc9c94d20"/>
        <function-ref name="changed" scoped="" ref="0x7f6cc9c92020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6cc9c921a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6cc9c92330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6cc9c96188" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6cc9c96188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9c964d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6cc9c96660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6cc9c967e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9c9fab0" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9c9fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9c9fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc9c902a8" loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc9c902a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc9c905f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc9c90780"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc9c90908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc9c90a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9c90c18"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9c90da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9c8f020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9c8f640"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9c8f1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9c8f330"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc9c8f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc9c9dc18" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9c9dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc9c9c020"/>
        <function-ref name="source" scoped="" ref="0x7f6cc9c9c1a8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc9c9c330"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc9c9c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc9c9c640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc9c9c7c8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc9c9c950"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9c9cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc9c9cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc9c9cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc9c9b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f6cc9c91698" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f6cc9c91698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9c919e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9c91b70"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9c91cf8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9c91e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9c90030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f6cc9bd17b0" loc="59:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f6cc9bd17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f6cc9bd1b00"/>
        <function-ref name="setRoot" scoped="" ref="0x7f6cc9bd1c88"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f6cc9bd1e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f6cc9bf0bd8" loc="54:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9bf0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc9bf8020"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc9bf81a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9bf8330"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc9bf84b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc9bf8640"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc9bf87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f6cc9bba640" loc="65:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc9bba640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f6cc9bbaa90"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f6cc9bbac18"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f6cc9bbada0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f6cc9bc2020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f6cc9bc21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f6cc9bfb020" loc="51:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x7f6cc9bfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f6cc9bfb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9bfb5f8" loc="53:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9bfb5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9bfb948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9bfbad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9bfbc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9bfbde0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9bfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6cc9bfc1c8" loc="50:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6cc9bfc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9bfc518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9bff428" loc="48:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9bff428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9bff778"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9bff900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9bffa88"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9bffc10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9bffd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f6cc9bc72d8" loc="57:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9bc72d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f6cc9bc7628"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f6cc9bc77b0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f6cc9bc7938"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f6cc9bc7ac0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc9bc7c48"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f6cc9bc7dd0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f6cc9bd2020"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f6cc9bd21a8"/>
        <function-ref name="getParent" scoped="" ref="0x7f6cc9bd2330"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f6cc9bd24b8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f6cc9bd2640"/>
        <function-ref name="getNeighborEtx" scoped="" ref="0x7f6cc9bd27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9bfd5c0" loc="49:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9bfd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9bfd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f6cc9bd1020" loc="58:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9bd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f6cc9bd1370"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f6cc9bd14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f6cc9bf5020" loc="55:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9bf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc9bf5370"/>
        <function-ref name="option" scoped="" ref="0x7f6cc9bf54f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7f6cc9bf5680"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc9bf5808"/>
        <function-ref name="clearOption" scoped="" ref="0x7f6cc9bf5990"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc9bf5b18"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc9bf5ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9bf5e28"/>
        <function-ref name="setOption" scoped="" ref="0x7f6cc9bef020"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f6cc9bef1a8"/>
        <function-ref name="getThl" scoped="" ref="0x7f6cc9bef330"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc9bef4b8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f6cc9bef640"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc9bef8c8"/>
        <function-ref name="setThl" scoped="" ref="0x7f6cc9befa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9c00780" loc="47:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9c00780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc9c00ad0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9c00c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f6cc9bc3390" loc="64:../EER/eer/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9bc3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f6cc9bc36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f6cc9bad2d8" loc="86:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f6cc9bad2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f6cc9bad628"/>
        <function-ref name="setRoot" scoped="" ref="0x7f6cc9bad7b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f6cc9bad938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f6cc9bb3620" loc="80:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9bb3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc9bb3970"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc9bb3af8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9bb3c80"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc9bb3e08"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc9bb2020"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc9bb21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f6cc9ba4578" loc="84:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9ba4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f6cc9ba48c8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f6cc9ba4a50"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f6cc9ba4bd8"/>
        <function-ref name="setLinkRssi" scoped="" ref="0x7f6cc9ba4d60"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f6cc9bae020"/>
        <function-ref name="evicted" scoped="" ref="0x7f6cc9bae1a8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f6cc9bae330"/>
        <function-ref name="getLinkRssi" scoped="" ref="0x7f6cc9bae4b8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f6cc9bae640"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f6cc9bae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f6cc9ba38f8" loc="91:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc9ba38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f6cc9ba3c48"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f6cc9ba3dd0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f6cc9ba2020"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f6cc9ba21a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f6cc9ba2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f6cc9bb4398" loc="77:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x7f6cc9bb4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f6cc9bb46e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9bb4970" loc="79:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9bb4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9bb4cc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9bb4e48"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9bb3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9bb31a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9bb3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6cc9bb5810" loc="76:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6cc9bb5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9bb5b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9bb8a88" loc="74:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9bb8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9bb8dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9bb7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9bb71a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9bb7330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9bb74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f6cc9bb02b0" loc="83:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9bb02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f6cc9bb0600"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f6cc9bb0788"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f6cc9bb0910"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f6cc9bb0a98"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc9bb0c20"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f6cc9bb0da8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f6cc9baf020"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f6cc9baf1a8"/>
        <function-ref name="getParent" scoped="" ref="0x7f6cc9baf330"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f6cc9baf4b8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f6cc9baf640"/>
        <function-ref name="getNeighborEtx" scoped="" ref="0x7f6cc9baf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9bb7c88" loc="75:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9bb7c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9bb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f6cc9baea98" loc="85:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9baea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f6cc9baede8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f6cc9bad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f6cc9bb2450" loc="81:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9bb2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc9bb27a0"/>
        <function-ref name="option" scoped="" ref="0x7f6cc9bb2928"/>
        <function-ref name="setEtx" scoped="" ref="0x7f6cc9bb2ab0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc9bb2c38"/>
        <function-ref name="clearOption" scoped="" ref="0x7f6cc9bb2dc0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc9bb1020"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc9bb11a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9bb1330"/>
        <function-ref name="setOption" scoped="" ref="0x7f6cc9bb14b8"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f6cc9bb1640"/>
        <function-ref name="getThl" scoped="" ref="0x7f6cc9bb17c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc9bb1950"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f6cc9bb1ad8"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc9bb1d60"/>
        <function-ref name="setThl" scoped="" ref="0x7f6cc9bb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9bc2db8" loc="73:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9bc2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc9bb8170"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9bb82f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f6cc9ba31c8" loc="90:../EER/eer/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9ba31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f6cc9ba3618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc9a07d78" loc="153:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc9a07d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9a050f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f6cc9a03060" loc="156:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f6cc9a03060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f6cc9a033b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f6cc9a03538"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f6cc9a036c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc9a1e7e0" loc="136:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc9a1e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9a1eb30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9a1ecb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9a1ee40"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9a1d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9a1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f6cc99ff740" loc="167:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc99ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f6cc99ffa90"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f6cc99ffc18"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f6cc99ffda0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f6cc99fe020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f6cc99fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f6cc9a213f0" loc="124:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x7f6cc9a213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc9a21740"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc9a218c8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9a21a50"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc9a21bd8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc9a21d60"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc9a20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f6cc9a17020" loc="140:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9a17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f6cc9a17370"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f6cc9a174f8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f6cc9a17680"/>
        <function-ref name="setLinkRssi" scoped="" ref="0x7f6cc9a17808"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f6cc9a17990"/>
        <function-ref name="evicted" scoped="" ref="0x7f6cc9a17b18"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f6cc9a17ca0"/>
        <function-ref name="getLinkRssi" scoped="" ref="0x7f6cc9a17e28"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f6cc9a16020"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f6cc9a161a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7f6cc9a08380" loc="151:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SentCache" scoped="" ref="0x7f6cc9a08380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
              <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f6cc9a07020"/>
        <function-ref name="flush" scoped="" ref="0x7f6cc9a07960"/>
        <function-ref name="lookup" scoped="" ref="0x7f6cc9a074c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f6cc9a221a0" loc="122:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x7f6cc9a221a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f6cc9a22510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9a22758" loc="123:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9a22758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9a22aa8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9a22c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9a22db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9a21020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9a211a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6cc99f9020" loc="182:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc99f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc99f9370"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc99f94f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc99f9680"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc99f9808"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc99f9990"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc99f9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6cc9a24aa0" loc="121:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f6cc9a24aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9a24e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6cc99ff020" loc="160:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc99ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc99ff370"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc99ff4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9a25660" loc="119:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9a25660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9a259d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9a25b58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9a25ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9a25e68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9a24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7f6cc9a1dde0" loc="139:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RetxmitTimer" scoped="" ref="0x7f6cc9a1dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9a18238"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9a1b910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9a19648"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9a191f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9a18ad8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9a18688"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9a1bd60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9a1cae0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9a19c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9a1b020"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9a1b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f6cc99fe430" loc="173:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f6cc99fe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc99fe780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc99fe908"/>
        <function-ref name="start" scoped="" ref="0x7f6cc99fea90"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc99fec18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f6cc99f9de0" loc="300:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f6cc99f9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc99f8170"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc99f82f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f6cc9a15bd0" loc="148:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f6cc9a15bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f6cc9a128c0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc9a11680"/>
        <function-ref name="element" scoped="" ref="0x7f6cc9a11cb0"/>
        <function-ref name="full" scoped="" ref="0x7f6cc9a13b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc9a12470"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc9a11020"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc9a13740"/>
        <function-ref name="size" scoped="" ref="0x7f6cc9a12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f6cc9a05910" loc="155:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc9a05910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f6cc9a05c60"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f6cc9a05de8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f6cc9a04020"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f6cc9a041a8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc9a04330"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f6cc9a044b8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f6cc9a04640"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f6cc9a047c8"/>
        <function-ref name="getParent" scoped="" ref="0x7f6cc9a04950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f6cc9a04ad8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f6cc9a04c60"/>
        <function-ref name="getNeighborEtx" scoped="" ref="0x7f6cc9a04de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6cc9a16e60" loc="142:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f6cc9a16e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9a151e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9a15370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9a154f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9a15680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9a15808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EerInstrumentation" ref="0x7f6cc99fee60" loc="176:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc99fee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerInstrumentation"/>
      </instance>
      <interface-functions>
        <function-ref name="ctrl_parentchange" scoped="" ref="0x7f6cc99fc740"/>
        <function-ref name="ctrl_tricklereset" scoped="" ref="0x7f6cc99fd370"/>
        <function-ref name="summary_size" scoped="" ref="0x7f6cc99fd4f8"/>
        <function-ref name="data_pktdup" scoped="" ref="0x7f6cc99fd680"/>
        <function-ref name="ctrl_txpkt" scoped="" ref="0x7f6cc99fd808"/>
        <function-ref name="init" scoped="" ref="0x7f6cc99fd990"/>
        <function-ref name="data_queuedrop" scoped="" ref="0x7f6cc99fdb18"/>
        <function-ref name="data_txpkt" scoped="" ref="0x7f6cc99fdca0"/>
        <function-ref name="data_rxpkt" scoped="" ref="0x7f6cc99fde28"/>
        <function-ref name="ctrl_rxpkt" scoped="" ref="0x7f6cc99fc020"/>
        <function-ref name="data_rxack" scoped="" ref="0x7f6cc99fc1a8"/>
        <function-ref name="data_inconsistent" scoped="" ref="0x7f6cc99fc330"/>
        <function-ref name="set_total_time" scoped="" ref="0x7f6cc99fc4b8"/>
        <function-ref name="summary" scoped="" ref="0x7f6cc99fd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9a267f8" loc="117:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9a267f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9a26b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9a24388" loc="120:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9a24388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9a246f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f6cc9a1e020" loc="126:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc9a1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f6cc9a1e370"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f6cc9a1e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7f6cc9a163f0" loc="141:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f6cc9a163f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f6cc9a16740"/>
        <function-ref name="routeFound" scoped="" ref="0x7f6cc9a168c8"/>
        <function-ref name="nextHop" scoped="" ref="0x7f6cc9a16a50"/>
        <function-ref name="noRoute" scoped="" ref="0x7f6cc9a16bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc9a01888" loc="159:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc9a01888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc9a01bd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc9a01d60"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc9a00020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc9a001a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9a00330"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9a004b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9a00640"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc9a00c60"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9a00950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9a007c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9a00ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f6cc9a1d3f0" loc="138:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9a1d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc9a1d740"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc9a1d8c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc9a1da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f6cc9a20268" loc="125:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc9a20268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc9a205b8"/>
        <function-ref name="option" scoped="" ref="0x7f6cc9a20740"/>
        <function-ref name="setEtx" scoped="" ref="0x7f6cc9a208c8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc9a20a50"/>
        <function-ref name="clearOption" scoped="" ref="0x7f6cc9a20bd8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc9a20d60"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc9a1f020"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9a1f1a8"/>
        <function-ref name="setOption" scoped="" ref="0x7f6cc9a1f330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f6cc9a1f4b8"/>
        <function-ref name="getThl" scoped="" ref="0x7f6cc9a1f640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc9a1f7c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f6cc9a1f950"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc9a1fbd8"/>
        <function-ref name="setThl" scoped="" ref="0x7f6cc9a1fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7f6cc9a0f478" loc="149:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="QEntryPool" scoped="" ref="0x7f6cc9a0f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9a0c3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc9a0e8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc9a0e020"/>
        <function-ref name="put" scoped="" ref="0x7f6cc9a0ed10"/>
        <function-ref name="size" scoped="" ref="0x7f6cc9a0e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EerHealth" ref="0x7f6cc99fc988" loc="177:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerHealth" scoped="" ref="0x7f6cc99fc988"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerHealth"/>
      </instance>
      <interface-functions>
        <function-ref name="get_hlth_forwarded" scoped="" ref="0x7f6cc99fccd8"/>
        <function-ref name="hlth_forwarded" scoped="" ref="0x7f6cc99fce60"/>
        <function-ref name="init" scoped="" ref="0x7f6cc99fa020"/>
        <function-ref name="hlth_generated" scoped="" ref="0x7f6cc99fa1a8"/>
        <function-ref name="get_hlth_generated" scoped="" ref="0x7f6cc99fa330"/>
        <function-ref name="get_hlth_retx" scoped="" ref="0x7f6cc99fa4b8"/>
        <function-ref name="get_hlth_psetSize" scoped="" ref="0x7f6cc99fa640"/>
        <function-ref name="hlth_retx" scoped="" ref="0x7f6cc99fa7c8"/>
        <function-ref name="get_hlth_dropped" scoped="" ref="0x7f6cc99fa950"/>
        <function-ref name="hlth_dropped" scoped="" ref="0x7f6cc99faad8"/>
        <function-ref name="get_hlth_eerParent" scoped="" ref="0x7f6cc99fac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6cc9a02268" loc="158:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9a02268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc9a025b8"/>
        <function-ref name="source" scoped="" ref="0x7f6cc9a02740"/>
        <function-ref name="address" scoped="" ref="0x7f6cc9a028c8"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc9a02a50"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc9a02bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc9a02d60"/>
        <function-ref name="type" scoped="" ref="0x7f6cc9a01020"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9a011a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc9a01330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc9a014b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc9a01640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9a26d90" loc="118:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9a26d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc9a25170"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9a252f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f6cc9a05378" loc="154:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x7f6cc9a05378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9a056c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f6cc9a0cbc8" loc="150:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MessagePool" scoped="" ref="0x7f6cc9a0cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
            <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9a0ab18"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc9a0a020"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc9a0b740"/>
        <function-ref name="put" scoped="" ref="0x7f6cc9a0a470"/>
        <function-ref name="size" scoped="" ref="0x7f6cc9a0bb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f6cc9a03a28" loc="157:../EER/eer/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x7f6cc9a03a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f6cc9a02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f6cc99ca020" loc="42:/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f6cc99ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
            <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc99c8020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc99c9470"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc99cab68"/>
        <function-ref name="put" scoped="" ref="0x7f6cc99c98c0"/>
        <function-ref name="size" scoped="" ref="0x7f6cc99c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f6cc88ac370" loc="56:/home/muzi/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f6cc88ac370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
            <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc88aa3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc88ab8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc88ab020"/>
        <function-ref name="put" scoped="" ref="0x7f6cc88abd10"/>
        <function-ref name="size" scoped="" ref="0x7f6cc88ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc88aebb8" loc="55:/home/muzi/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc88aebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc88ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f6cc99c5228" loc="42:/home/muzi/tinyos-main//tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f6cc99c5228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc99c31b8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc99c4648"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc99c5d70"/>
        <function-ref name="put" scoped="" ref="0x7f6cc99c4a98"/>
        <function-ref name="size" scoped="" ref="0x7f6cc99c41f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f6cc889a6c0" loc="56:/home/muzi/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f6cc889a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc8898730"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc8899c10"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc8899370"/>
        <function-ref name="put" scoped="" ref="0x7f6cc8898088"/>
        <function-ref name="size" scoped="" ref="0x7f6cc88997c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc889a020" loc="55:/home/muzi/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc889a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc889a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f6cc99bf020" loc="43:/home/muzi/tinyos-main//tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6cc99bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc9b985f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f6cc9b98cc0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f6cc99a4d10"/>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc99a2a30"/>
        <function-ref name="element" scoped="" ref="0x7f6cc99a1088"/>
        <function-ref name="full" scoped="" ref="0x7f6cc99a4020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f6cc99a48c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc99a23d0"/>
        <function-ref name="empty" scoped="" ref="0x7f6cc99bfb68"/>
        <function-ref name="size" scoped="" ref="0x7f6cc99a4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f6cc9970b10" loc="39:../EER/eer/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Cache" scoped="" ref="0x7f6cc9970b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
              <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f6cc996f6f0"/>
        <function-ref name="flush" scoped="" ref="0x7f6cc996e088"/>
        <function-ref name="lookup" scoped="" ref="0x7f6cc996fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f6cc887ead8" loc="46:../EER/eer/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Cache" scoped="" ref="0x7f6cc887ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
              <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f6cc887d658"/>
        <function-ref name="flush" scoped="" ref="0x7f6cc887b020"/>
        <function-ref name="lookup" scoped="" ref="0x7f6cc887daf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc887e400" loc="45:../EER/eer/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc887e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc887e750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7f6cc887b458" loc="49:../EER/eer/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x7f6cc887b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6cc887b7a8"/>
        <function-ref name="option" scoped="" ref="0x7f6cc887b930"/>
        <function-ref name="setEtx" scoped="" ref="0x7f6cc887bab8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f6cc887bc40"/>
        <function-ref name="clearOption" scoped="" ref="0x7f6cc887bdc8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc887a020"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f6cc887a1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc887a330"/>
        <function-ref name="setOption" scoped="" ref="0x7f6cc887a4b8"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f6cc887a640"/>
        <function-ref name="getThl" scoped="" ref="0x7f6cc887a7c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6cc887a950"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f6cc887aad8"/>
        <function-ref name="getType" scoped="" ref="0x7f6cc887ad60"/>
        <function-ref name="setThl" scoped="" ref="0x7f6cc8879020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc996da60" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc996da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9969d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc996a470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc99691c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc996ad10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9968648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc99681f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc996a8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc996b620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9969790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc996bac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc996a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9965020" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9965020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc99622b8"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9964978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc99636c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9963278"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc9962b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc9962708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9964dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9965b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9963c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9964088"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9964528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc994c978" loc="57:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc994c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc994ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f6cc9955be0" loc="47:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc9955be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f6cc9954020"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f6cc99541a8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f6cc9954330"/>
        <function-ref name="setLinkRssi" scoped="" ref="0x7f6cc99544b8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f6cc9954640"/>
        <function-ref name="evicted" scoped="" ref="0x7f6cc99547c8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f6cc9954950"/>
        <function-ref name="getLinkRssi" scoped="" ref="0x7f6cc9954ad8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f6cc9954c60"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f6cc9954de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9953698" loc="49:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9953698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc99539e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9953b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9953cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9953e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9952030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6cc994d910" loc="54:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc994d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc994dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc994dde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9951020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc99511a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9951330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6cc994a020" loc="65:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6cc994a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6cc994a370"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6cc994a4f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6cc994a680"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6cc994a808"/>
        <function-ref name="getPower" scoped="" ref="0x7f6cc994a990"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6cc994ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc9956850" loc="45:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc9956850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9956ba0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9956d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9955020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc99551a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9955330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6cc994b5f8" loc="59:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc994b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc994ba48"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc994bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6cc9950c78" loc="56:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f6cc9950c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc994c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc994c1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc994c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc994c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc994c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc99530c0" loc="48:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc99530c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9953410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f6cc9951680" loc="55:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x7f6cc9951680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc99519d0"/>
        <function-ref name="source" scoped="" ref="0x7f6cc9951b58"/>
        <function-ref name="address" scoped="" ref="0x7f6cc9951ce0"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc9951e68"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc9950020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc99501a8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc9950330"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc99504b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc9950640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc99507c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc9950950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc99555c0" loc="46:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc99555c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9955910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7f6cc994d2b8" loc="50:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareBit" scoped="" ref="0x7f6cc994d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f6cc994d608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9956080" loc="44:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9956080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc99563d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9956558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7f6cc994b020" loc="58:../EER/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6cc994b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6cc994b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc988fda8" loc="49:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc988fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc97eb170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc97eb2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc97eb480"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc97eb608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc97eb790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc97eb9d8" loc="50:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc97eb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc97ebd28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc97ea020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc97ea1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc97ea330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc97ea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc97ea700" loc="51:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97ea700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc97eaa50"/>
        <function-ref name="source" scoped="" ref="0x7f6cc97eabd8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc97ead60"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc97e9020"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc97e91a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc97e9330"/>
        <function-ref name="type" scoped="" ref="0x7f6cc97e94b8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc97e9640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc97e97c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc97e9950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc97e9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc97e9d60" loc="52:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc97e9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc97e80d8"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc97e8260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc97e83e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc8852020" loc="6:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc8852020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8852370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc88524f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8852680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8852808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8852990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc8852bd8" loc="7:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc8852bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc8851020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc88511a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8851330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc88514b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc8851640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc8851888" loc="8:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8851888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc8851bd8"/>
        <function-ref name="source" scoped="" ref="0x7f6cc8851d60"/>
        <function-ref name="address" scoped="" ref="0x7f6cc8850020"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc88501a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc8850330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc88504b8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc8850640"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc88507c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc8850950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc8850ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc8850c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc884f020" loc="9:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc884f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc884f370"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc884f4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc884f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc8846140" loc="49:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc8846140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8846490"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8846618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc88467a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8846928"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8846ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc8846cf8" loc="50:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc8846cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc88450a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc8845228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc88453b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8845538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc88456c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc8845908" loc="51:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8845908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc8845c58"/>
        <function-ref name="source" scoped="" ref="0x7f6cc8845de0"/>
        <function-ref name="address" scoped="" ref="0x7f6cc8843020"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc88431a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc8843330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc88434b8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc8843640"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc88437c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc8843950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc8843ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc8843c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc8842020" loc="52:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc8842020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc8842370"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc88424f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc8842680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc8833a80" loc="44:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc8833a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8833dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8832020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc88321a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8832330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc88324b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f6cc8832760" loc="46:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc8832760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8832ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8832c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8832dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8831020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc88311a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6cc88313f0" loc="47:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc88313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc8831740"/>
        <function-ref name="source" scoped="" ref="0x7f6cc88318c8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc8831a50"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc8831bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc8831d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc8830020"/>
        <function-ref name="type" scoped="" ref="0x7f6cc88301a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc8830330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc88304b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc8830640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc88307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc98654f8" loc="43:/home/muzi/tinyos-main//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc98654f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9865848"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc98659d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9865b58"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9865ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9865e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6cc981c6f8" loc="48:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc981c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc981ca68"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc981cbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc981cd78"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc981b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc981b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc981d920" loc="46:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc981d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc981dc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc981de18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc981c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc981c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc981c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6cc981aa10" loc="50:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc981aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc981ad60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9819020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc98191a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9819330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc98194b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f6cc9819780" loc="169:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f6cc9819780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9819ad0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9819c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f6cc9818020" loc="126:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f6cc9818020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9818370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc98184f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6cc981b3f0" loc="49:/home/muzi/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc981b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc981b740"/>
        <function-ref name="source" scoped="" ref="0x7f6cc981b8c8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc981ba50"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc981bbd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc981bd60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc981a020"/>
        <function-ref name="type" scoped="" ref="0x7f6cc981a1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc981a330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc981a4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc981a640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc981a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7f6cc8840d78" loc="5:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x7f6cc8840d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc883f0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc883f278"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc883f400"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc883f588"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc883f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f6cc883e3f0" loc="7:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc883e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc883e740"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc883e8c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f6cc883ea50"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f6cc883ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc8840120" loc="3:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc8840120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8840470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc88405f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8840780"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8840908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8840a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7f6cc883f998" loc="6:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x7f6cc883f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6cc883fce8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6cc883fe70"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6cc883e020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6cc883e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc97df760" loc="46:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc97df760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc97dfab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc97dfc38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc97dfdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc97de020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc97de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc97df1c8" loc="45:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc97df1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc97df518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc97de3f0" loc="47:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97de3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc97de740"/>
        <function-ref name="source" scoped="" ref="0x7f6cc97de8c8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc97dea50"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc97debd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc97ded60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc97dd020"/>
        <function-ref name="type" scoped="" ref="0x7f6cc97dd1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc97dd330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc97dd4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc97dd640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc97dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc97d5760" loc="47:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc97d5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc97d5ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc97d5c38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc97d5dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc97d3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc97d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc97d51c8" loc="46:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc97d51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc97d5518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc97d33f0" loc="48:/home/muzi/tinyos-main//tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc97d33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc97d3740"/>
        <function-ref name="source" scoped="" ref="0x7f6cc97d38c8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc97d3a50"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc97d3bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc97d3d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc97d2020"/>
        <function-ref name="type" scoped="" ref="0x7f6cc97d21a8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc97d2330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc97d24b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc97d2640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc97d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f6cc96b8e08" loc="106:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f6cc96b8e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f6cc96b71a8"/>
        <function-ref name="setRoot" scoped="" ref="0x7f6cc96b7330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f6cc96b74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7f6cc969fa88" loc="277:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateRouteTask" scoped="" ref="0x7f6cc969fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc969fdd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc969e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f6cc96a3268" loc="121:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x7f6cc96a3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f6cc96a35b8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f6cc96a3740"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f6cc96a38c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f6cc96a3a50"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f6cc96a3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f6cc96b2268" loc="115:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x7f6cc96b2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f6cc96b25b8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f6cc96b2740"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f6cc96b28c8"/>
        <function-ref name="setLinkRssi" scoped="" ref="0x7f6cc96b2a50"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f6cc96b2bd8"/>
        <function-ref name="evicted" scoped="" ref="0x7f6cc96b2d60"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f6cc96b1020"/>
        <function-ref name="getLinkRssi" scoped="" ref="0x7f6cc96b11a8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f6cc96b1330"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f6cc96b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7f6cc96b5740" loc="109:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7f6cc96b5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7f6cc96b5a90"/>
        <function-ref name="setEtx" scoped="" ref="0x7f6cc96b5c18"/>
        <function-ref name="clearOption" scoped="" ref="0x7f6cc96b5da0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc96b4020"/>
        <function-ref name="setOption" scoped="" ref="0x7f6cc96b41a8"/>
        <function-ref name="setParent" scoped="" ref="0x7f6cc96b4330"/>
        <function-ref name="getParent" scoped="" ref="0x7f6cc96b44b8"/>
        <function-ref name="getOption" scoped="" ref="0x7f6cc96b4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f6cc96afd60" loc="117:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f6cc96afd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc96ae0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc96ae260"/>
        <function-ref name="start" scoped="" ref="0x7f6cc96ae3e8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc96ae570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6cc96a4a20" loc="120:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc96a4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc96a4d70"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc96a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f6cc96b7700" loc="107:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x7f6cc96b7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f6cc96b7a50"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f6cc96b7bd8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f6cc96b7d60"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f6cc96b6020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f6cc96b61a8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f6cc96b6330"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f6cc96b64b8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f6cc96b6640"/>
        <function-ref name="getParent" scoped="" ref="0x7f6cc96b67c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f6cc96b6950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f6cc96b6ad8"/>
        <function-ref name="getNeighborEtx" scoped="" ref="0x7f6cc96b6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EerParentSelectionConfig" ref="0x7f6cc96a0678" loc="128:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerParentSelectionConfig" scoped="" ref="0x7f6cc96a0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerParentSelectionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="addParentCandidate" scoped="" ref="0x7f6cc96a09c8"/>
        <function-ref name="drawRandomParent" scoped="" ref="0x7f6cc96a0b50"/>
        <function-ref name="initializeParentSet" scoped="" ref="0x7f6cc96a0cd8"/>
        <function-ref name="getParentSetETX" scoped="" ref="0x7f6cc96a0e60"/>
        <function-ref name="getParentSetSize" scoped="" ref="0x7f6cc969f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EerInstrumentation" ref="0x7f6cc96a2b10" loc="127:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc96a2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerInstrumentation"/>
      </instance>
      <interface-functions>
        <function-ref name="ctrl_parentchange" scoped="" ref="0x7f6cc96a0430"/>
        <function-ref name="ctrl_tricklereset" scoped="" ref="0x7f6cc96a1020"/>
        <function-ref name="summary_size" scoped="" ref="0x7f6cc96a11a8"/>
        <function-ref name="data_pktdup" scoped="" ref="0x7f6cc96a1330"/>
        <function-ref name="ctrl_txpkt" scoped="" ref="0x7f6cc96a14b8"/>
        <function-ref name="init" scoped="" ref="0x7f6cc96a1640"/>
        <function-ref name="data_queuedrop" scoped="" ref="0x7f6cc96a17c8"/>
        <function-ref name="data_txpkt" scoped="" ref="0x7f6cc96a1950"/>
        <function-ref name="data_rxpkt" scoped="" ref="0x7f6cc96a1ad8"/>
        <function-ref name="ctrl_rxpkt" scoped="" ref="0x7f6cc96a1c60"/>
        <function-ref name="data_rxack" scoped="" ref="0x7f6cc96a1de8"/>
        <function-ref name="data_inconsistent" scoped="" ref="0x7f6cc96a0020"/>
        <function-ref name="set_total_time" scoped="" ref="0x7f6cc96a01a8"/>
        <function-ref name="summary" scoped="" ref="0x7f6cc96a2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc96b4888" loc="110:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc96b4888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc96b4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7f6cc96b3020" loc="113:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconSend" scoped="" ref="0x7f6cc96b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc96b3370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc96b34f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc96b3680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc96b3808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc96b3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7f6cc969f2e8" loc="526:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendBeaconTask" scoped="" ref="0x7f6cc969f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc969f638"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc969f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7f6cc96ae900" loc="118:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconTimer" scoped="" ref="0x7f6cc96ae900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc96abbc0"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc96ac278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc96ab020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc96acb18"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc96aa4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc96aa088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc96ac6c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc96ad490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc96ab5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc96ad930"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc96addd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7f6cc96aa9f8" loc="119:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteTimer" scoped="" ref="0x7f6cc96aa9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc96a6d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc96a7470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc96a61c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc96a7d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc96a4648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc96a41f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc96a78c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc96a8670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc96a6790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc96a8b10"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc96a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f6cc96a3e20" loc="122:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x7f6cc96a3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f6cc96a21a8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f6cc96a2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7f6cc96a2578" loc="124:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareBit" scoped="" ref="0x7f6cc96a2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f6cc96a28c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7f6cc96b3c18" loc="114:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconReceive" scoped="" ref="0x7f6cc96b3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc96b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6cc96b1700" loc="116:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc96b1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc96b1a50"/>
        <function-ref name="source" scoped="" ref="0x7f6cc96b1bd8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc96b1d60"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc96af020"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc96af1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc96af330"/>
        <function-ref name="type" scoped="" ref="0x7f6cc96af4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc96af640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc96af7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc96af950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc96afad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc96b5020" loc="108:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc96b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc96b5370"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc96b54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7f6cc96b83d8" loc="105:../EER/eer/EerParentSetEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Routing" scoped="" ref="0x7f6cc96b83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f6cc96b8728"/>
        <function-ref name="routeFound" scoped="" ref="0x7f6cc96b88b0"/>
        <function-ref name="nextHop" scoped="" ref="0x7f6cc96b8a38"/>
        <function-ref name="noRoute" scoped="" ref="0x7f6cc96b8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EerParentSelectionConfig" ref="0x7f6cc96971f0" loc="42:../EER/eer_parentselection/EerParentSelectionP.nc">
      <component-ref qname="CtpP.ParentSelector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerParentSelectionConfig" scoped="" ref="0x7f6cc96971f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerParentSelectionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="addParentCandidate" scoped="" ref="0x7f6cc9697540"/>
        <function-ref name="drawRandomParent" scoped="" ref="0x7f6cc96976c8"/>
        <function-ref name="initializeParentSet" scoped="" ref="0x7f6cc9697850"/>
        <function-ref name="getParentSetETX" scoped="" ref="0x7f6cc96979d8"/>
        <function-ref name="getParentSetSize" scoped="" ref="0x7f6cc9697b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6cc9666580" loc="45:../EER/eer_parentselection/EerParentSelectionP.nc">
      <component-ref qname="CtpP.ParentSelector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f6cc9666580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6cc96668d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6cc9666a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EerParentSelectionHealth" ref="0x7f6cc9697de8" loc="43:../EER/eer_parentselection/EerParentSelectionP.nc">
      <component-ref qname="CtpP.ParentSelector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerParentSelectionHealth" scoped="" ref="0x7f6cc9697de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerParentSelectionHealth"/>
      </instance>
      <interface-functions>
        <function-ref name="getBestNeighborFromParentSet" scoped="" ref="0x7f6cc9666170"/>
        <function-ref name="getCandiateSetSize" scoped="" ref="0x7f6cc96662f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9660a60" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9660a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc965dd60"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc965e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc965d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc965ed10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc965b648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc965b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc965e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc965f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc965d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc965fac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc965e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc9656548" loc="49:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc9656548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9656898"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9656a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9656ba8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc9656d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9655268" loc="50:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9655268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc96555b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9655740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc96558c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9655a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9655bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc9655e20" loc="51:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9655e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc96541a8"/>
        <function-ref name="source" scoped="" ref="0x7f6cc9654330"/>
        <function-ref name="address" scoped="" ref="0x7f6cc96544b8"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc9654640"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc96547c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc9654950"/>
        <function-ref name="type" scoped="" ref="0x7f6cc9654ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc9654c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc9654de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc9653020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc96531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc9653430" loc="52:/home/muzi/tinyos-main//tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc9653430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc9653780"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc9653908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc9653a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc8737020" loc="6:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc8737020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8737370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc87374f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8737680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8737808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8737990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc8737bd8" loc="7:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc8737bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc8736020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc87361a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8736330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc87364b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc8736640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc8736888" loc="8:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc8736888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc8736bd8"/>
        <function-ref name="source" scoped="" ref="0x7f6cc8736d60"/>
        <function-ref name="address" scoped="" ref="0x7f6cc8735020"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc87351a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc8735330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc87354b8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc8735640"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc87357c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc8735950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc8735ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc8735c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc8734020" loc="9:/home/muzi/tinyos-main//tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc8734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc8734370"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc87344f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc8734680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc872b398" loc="49:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc872b398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc872b6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc872b870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc872b9f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc872bb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc872bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc872a020" loc="50:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc872a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc872a370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc872a4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc872a680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc872a808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc872a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc872abd8" loc="51:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc872abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc8729020"/>
        <function-ref name="source" scoped="" ref="0x7f6cc87291a8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc8729330"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc87294b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc8729640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc87297c8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc8729950"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc8729ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc8729c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc8729de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc8728020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6cc87282a8" loc="52:/home/muzi/tinyos-main//tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f6cc87282a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc87285f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc8728780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc8728908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc87171b0" loc="44:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc87171b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8717500"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8717688"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8717810"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8717998"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8717b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f6cc8717dc8" loc="46:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc8717dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8716170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc87162f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8716480"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8716608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8716790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6cc87169d8" loc="47:/home/muzi/tinyos-main//tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc87169d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc8716d28"/>
        <function-ref name="source" scoped="" ref="0x7f6cc8715020"/>
        <function-ref name="address" scoped="" ref="0x7f6cc87151a8"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc8715330"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc87154b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc8715640"/>
        <function-ref name="type" scoped="" ref="0x7f6cc87157c8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc8715950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc8715ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc8715c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc8715de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7f6cc8724020" loc="5:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x7f6cc8724020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc8724370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc87244f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc8724680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8724808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8724990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7f6cc8723700" loc="7:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7f6cc8723700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc8723a50"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7f6cc8723bd8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7f6cc8723d60"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7f6cc8722020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc8725390" loc="3:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc8725390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc87256e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc8725868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc87259f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc8725b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc8725d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7f6cc8724c18" loc="6:/home/muzi/tinyos-main//tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x7f6cc8724c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6cc8723020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6cc87231a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6cc8723330"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6cc87234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc9650268" loc="46:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc9650268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc96505b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9650740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc96508c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9650a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9650bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9651c20" loc="45:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9651c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc9650e20" loc="47:/home/muzi/tinyos-main//tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc9650e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc964f1a8"/>
        <function-ref name="source" scoped="" ref="0x7f6cc964f330"/>
        <function-ref name="address" scoped="" ref="0x7f6cc964f4b8"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc964f640"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc964f7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc964f950"/>
        <function-ref name="type" scoped="" ref="0x7f6cc964fad8"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc964fc60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc964fde8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc964e020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc964e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EerInstrumentation" ref="0x7f6cc964a7f8" loc="42:../EER/eer/EerInstrumentationP.nc">
      <component-ref qname="EerInstrumentationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerInstrumentation" scoped="" ref="0x7f6cc964a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerInstrumentation"/>
      </instance>
      <interface-functions>
        <function-ref name="summary" scoped="" ref="0x7f6cc9646120"/>
        <function-ref name="ctrl_tricklereset" scoped="" ref="0x7f6cc964acd0"/>
        <function-ref name="summary_size" scoped="" ref="0x7f6cc964ae58"/>
        <function-ref name="data_pktdup" scoped="" ref="0x7f6cc9647020"/>
        <function-ref name="ctrl_txpkt" scoped="" ref="0x7f6cc96471a8"/>
        <function-ref name="init" scoped="" ref="0x7f6cc9647330"/>
        <function-ref name="data_queuedrop" scoped="" ref="0x7f6cc96474b8"/>
        <function-ref name="data_txpkt" scoped="" ref="0x7f6cc9647640"/>
        <function-ref name="data_rxpkt" scoped="" ref="0x7f6cc96477c8"/>
        <function-ref name="ctrl_rxpkt" scoped="" ref="0x7f6cc9647950"/>
        <function-ref name="data_rxack" scoped="" ref="0x7f6cc9647ad8"/>
        <function-ref name="data_inconsistent" scoped="" ref="0x7f6cc9647c60"/>
        <function-ref name="set_total_time" scoped="" ref="0x7f6cc9647de8"/>
        <function-ref name="ctrl_parentchange" scoped="" ref="0x7f6cc964ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EerParentSelectionHealth" ref="0x7f6cc96213a0" loc="43:../EER/eer/EerHealthP.nc">
      <component-ref qname="EerHealthP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerParentSelectionHealth" scoped="" ref="0x7f6cc96213a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerParentSelectionHealth"/>
      </instance>
      <interface-functions>
        <function-ref name="getBestNeighborFromParentSet" scoped="" ref="0x7f6cc96216f0"/>
        <function-ref name="getCandiateSetSize" scoped="" ref="0x7f6cc9621878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EerHealth" ref="0x7f6cc9649c88" loc="42:../EER/eer/EerHealthP.nc">
      <component-ref qname="EerHealthP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EerHealth" scoped="" ref="0x7f6cc9649c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="EerHealth"/>
      </instance>
      <interface-functions>
        <function-ref name="get_hlth_forwarded" scoped="" ref="0x7f6cc9622020"/>
        <function-ref name="hlth_forwarded" scoped="" ref="0x7f6cc96221a8"/>
        <function-ref name="init" scoped="" ref="0x7f6cc9622330"/>
        <function-ref name="hlth_generated" scoped="" ref="0x7f6cc96224b8"/>
        <function-ref name="get_hlth_generated" scoped="" ref="0x7f6cc9622640"/>
        <function-ref name="get_hlth_retx" scoped="" ref="0x7f6cc96227c8"/>
        <function-ref name="get_hlth_psetSize" scoped="" ref="0x7f6cc9622950"/>
        <function-ref name="hlth_retx" scoped="" ref="0x7f6cc9622ad8"/>
        <function-ref name="get_hlth_dropped" scoped="" ref="0x7f6cc9622c60"/>
        <function-ref name="hlth_dropped" scoped="" ref="0x7f6cc9622de8"/>
        <function-ref name="get_hlth_eerParent" scoped="" ref="0x7f6cc9621020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc95ddd60" loc="46:../EER/eer/CollectionSenderC.nc">
      <component-ref qname="SimpleEerAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc95ddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc95cb0d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc95cb260"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc95cb3e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc95cb570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc95cb6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc95dd1a8" loc="45:../EER/eer/CollectionSenderC.nc">
      <component-ref qname="SimpleEerAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc95dd1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc95dd4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc95dd680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc95dd808"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc95dd990"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc95ddb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc86f4958" loc="38:../EER/eer/CollectionSenderP.nc">
      <component-ref qname="SimpleEerAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc86f4958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc86f4ca8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc86f4e30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc86f3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc86f31a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc86f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc86f5d68" loc="37:../EER/eer/CollectionSenderP.nc">
      <component-ref qname="SimpleEerAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc86f5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc86f40f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc86f4278"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc86f4400"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc86f4588"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc86f4710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7f6cc86ee5c8" loc="46:../EER/CollectionIdP.nc">
      <component-ref qname="SimpleEerAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x7f6cc86ee5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f6cc86ee918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc95ca8f8" loc="38:/usr/src/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc95ca8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc95cac48"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc95cadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f6cc95bbd30" loc="44:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f6cc95bbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f6cc95c10d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7f6cc95bd408" loc="39:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6cc95bd408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc95bd758"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6cc95bd8e0"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc95bda68"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6cc95bdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc95c2770" loc="43:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc95c2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc95c2ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7f6cc95c69a0" loc="38:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7f6cc95c69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc95c6cf0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc95c6e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc95c2020" loc="42:/usr/src/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc95c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc95c2370"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc95c24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6cc95afaa8" loc="6:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6cc95afaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc95afdf8"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6cc95ae020"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc95ae1a8"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6cc95ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6cc95a6a08" loc="5:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6cc95a6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc95a6d58"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6cc95af020"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc95af1a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6cc95af330"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6cc95af4b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6cc95af640"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc95af7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc95c4990" loc="4:/home/muzi/tinyos-main//tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc95c4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc95c4ce0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc95c4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc942c430" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc942c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc942c780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc942c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6cc942bbd8" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6cc942bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc942a020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6cc942a1a8"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc942a330"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6cc942a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f6cc942a740" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc942a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cc942aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6cc942cb90" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6cc942cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc942b020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6cc942b1a8"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc942b330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6cc942b4b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6cc942b640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6cc942b7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc942b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc942d7d0" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc942d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc942db20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc942dca8"/>
        <function-ref name="request" scoped="" ref="0x7f6cc942de30"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc942c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc942c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6cc9598208" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc9598208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc9598558"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc95986e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6cc9595498" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6cc9595498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc95957e8"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6cc9595970"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc9595af8"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6cc9595c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f6cc9593858" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9593858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cc9593ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6cc9597020" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6cc9597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9597370"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6cc95974f8"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc9597680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6cc9597808"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6cc9597990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6cc9597b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9597ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6cc9594550" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6cc9594550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc95948a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9594a28"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9594bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9594d38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc9599020" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc9599020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9599370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc95994f8"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9599680"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9599808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9599990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6cc9592550" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cc9592550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc95928a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc9592a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6cc95290c8" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc95290c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc9529438"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc95295c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f6cc95289e8" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f6cc95289e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9528d58"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f6cc9527020"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc95271a8"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f6cc9527330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f6cc9526550" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9526550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cc95268c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f6cc9526b88" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6cc9526b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cc9525020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cc95251a8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cc9525330"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cc95254b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cc9525640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cc95257c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cc9525950"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cc9525ad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cc9525c60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cc9525de8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cc9524020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cc95241a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cc9524330"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cc95245b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cc9524740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cc95248c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cc9524a50"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cc9524bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cc9524d60"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cc9523020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cc95231a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cc9523330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cc95234b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cc9523640"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc95237c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cc9523b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cc9523cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cc9523e60"/>
        <function-ref name="tx" scoped="" ref="0x7f6cc9522020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cc95221a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cc9522330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cc95224b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cc9522640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cc95227c8"/>
        <function-ref name="rx" scoped="" ref="0x7f6cc9522950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cc9522ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cc9522c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cc9522de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cc9521020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cc95211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f6cc9529968" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6cc9529968"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9529cd8"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6cc9529e60"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc9528020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6cc95281a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6cc9528330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6cc95284b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9528640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6cc9520020" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cc9520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9520d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc951f6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc951f230"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc951fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f6cc9527718" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f6cc9527718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9527a88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9527c10"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9527d98"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9526020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc95261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc952b368" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc952b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc952b6d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc952b860"/>
        <function-ref name="request" scoped="" ref="0x7f6cc952b9e8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc952bb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc952bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f6cc9521590" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f6cc9521590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc9521900"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc9521a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc951d020" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc951d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc951d370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc951d4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc951d680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc951d808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc951d990"/>
        <function-ref name="get" scoped="" ref="0x7f6cc951db18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc951dca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc951c330"/>
        <function-ref name="set" scoped="" ref="0x7f6cc951c020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc951de28"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc951c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6cc950fcd0" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc950fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc950e0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc950e228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6cc9512c60" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc9512c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc9514020"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc95141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6cc95144c0" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc95144c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cc9514810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cc9514998"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cc9514b20"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cc9514ca8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cc9514e30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cc9513020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cc95131a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cc9513330"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cc95134b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cc9513640"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cc95137c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cc9513950"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cc9513ad8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cc9513d60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cc9511020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cc95111a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cc9511330"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cc95114b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cc9511640"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cc95117c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cc9511950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cc9511ad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cc9511c60"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cc9511de8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc9510020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cc95103a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cc9510530"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cc95106b8"/>
        <function-ref name="tx" scoped="" ref="0x7f6cc9510840"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cc95109c8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cc9510b50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cc9510cd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cc9510e60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cc950f020"/>
        <function-ref name="rx" scoped="" ref="0x7f6cc950f1a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cc950f330"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cc950f4b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cc950f640"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cc950f7c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cc950f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f6cc95027e0" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f6cc95027e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc9502b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9502cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cc9502e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc9501020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc95011a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cc9501330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc95014b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9501640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cc95017c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cc9501950"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9501ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cc9501c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cc9501de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cc9500120"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc95002a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6cc9506260" loc="76:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6cc9506260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc95065b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc9506738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f6cc9500658" loc="81:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f6cc9500658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc95009a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9500b30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cc9500cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc9500e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc94ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cc94ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc94ff330"/>
        <function-ref name="get" scoped="" ref="0x7f6cc94ff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cc94ff640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cc94ff7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc94ff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cc94ffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cc94ffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cc94fe020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc94fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f6cc94fe558" loc="82:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f6cc94fe558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc94fe8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc94fea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cc94febb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc94fed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc94fd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cc94fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc94fd330"/>
        <function-ref name="get" scoped="" ref="0x7f6cc94fd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cc94fd640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cc94fd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc94fd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cc94fdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cc94fdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cc94fc020"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc94fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f6cc950b888" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f6cc950b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cc950bbd8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cc950bd60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cc950a020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cc950a1a8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cc950a330"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cc950a4b8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cc950a640"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cc950a7c8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cc950a950"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cc950aad8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cc950ac60"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cc950ade8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cc9509020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cc95092a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cc9509430"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cc95095b8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cc9509740"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cc95098c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cc9509a50"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cc9509bd8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cc9509d60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cc9508020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cc95081a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cc9508330"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc95084b8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cc9508840"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cc95089c8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cc9508b50"/>
        <function-ref name="tx" scoped="" ref="0x7f6cc9508cd8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cc9508e60"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cc9507020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cc95071a8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cc9507330"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cc95074b8"/>
        <function-ref name="rx" scoped="" ref="0x7f6cc9507640"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cc95077c8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cc9507950"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cc9507ad8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cc9507c60"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cc9507de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6cc950b020" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc950b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc950b370"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc950b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f6cc9504968" loc="79:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f6cc9504968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc9504cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9504e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cc9503020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc95031a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc9503330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cc95034b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc9503640"/>
        <function-ref name="get" scoped="" ref="0x7f6cc95037c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cc9503950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cc9503ad8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9503c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cc9503de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cc9502020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cc95022a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc9502430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f6cc9506ae8" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f6cc9506ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6cc9506e38"/>
        <function-ref name="isInput" scoped="" ref="0x7f6cc9505020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f6cc95051a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6cc9505330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6cc95054b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f6cc9505640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6cc95057c8"/>
        <function-ref name="get" scoped="" ref="0x7f6cc9505950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f6cc9505ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f6cc9505c60"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9505de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f6cc9504020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f6cc95041a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f6cc9504430"/>
        <function-ref name="clr" scoped="" ref="0x7f6cc95045b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6cc9484020" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f6cc9484020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8d020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f6ccaf8d378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6cc9484d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6cc94836b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6cc9483230"/>
        <function-ref name="overflow" scoped="" ref="0x7f6cc9483b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc86e3430" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc86e3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc86e3780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc86e3908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cc86dd430" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc86dd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc86dd780"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc86dd908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f6cc86debd8" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f6cc86debd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc86dd020"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc86dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc86e47d8" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc86e47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc86e4b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc86e4cb0"/>
        <function-ref name="request" scoped="" ref="0x7f6cc86e4e38"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc86e3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc86e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f6cc86e2430" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f6cc86e2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f6cc86e2780"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f6cc86e2908"/>
        <function-ref name="setUctl" scoped="" ref="0x7f6cc86e2a90"/>
        <function-ref name="enableUart" scoped="" ref="0x7f6cc86e2c18"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f6cc86e2da0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f6cc86e1020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f6cc86e11a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f6cc86e1330"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f6cc86e14b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f6cc86e1640"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f6cc86e17c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f6cc86e1950"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f6cc86e1ad8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f6cc86e1d60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f6cc86e0020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f6cc86e01a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f6cc86e0330"/>
        <function-ref name="isUart" scoped="" ref="0x7f6cc86e04b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f6cc86e0640"/>
        <function-ref name="isSpi" scoped="" ref="0x7f6cc86e07c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f6cc86e0950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f6cc86e0ad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f6cc86e0c60"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f6cc86e0de8"/>
        <function-ref name="getMode" scoped="" ref="0x7f6cc86df020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f6cc86df3a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f6cc86df530"/>
        <function-ref name="setUbr" scoped="" ref="0x7f6cc86df6b8"/>
        <function-ref name="tx" scoped="" ref="0x7f6cc86df840"/>
        <function-ref name="getUctl" scoped="" ref="0x7f6cc86df9c8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f6cc86dfb50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6cc86dfcd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f6cc86dfe60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f6cc86de020"/>
        <function-ref name="rx" scoped="" ref="0x7f6cc86de1a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f6cc86de330"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f6cc86de4b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f6cc86de640"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f6cc86de7c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f6cc86de950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cc86e3b90" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc86e3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc86e2020"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc86e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc946b848" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc946b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc946bb98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc946bd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cc946ad80" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc946ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc9469170"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc94692f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6cc946e910" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6cc946e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc946ec60"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc946ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc946c608" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc946c608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc946c958"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc946cae0"/>
        <function-ref name="request" scoped="" ref="0x7f6cc946cc68"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc946cdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc946b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cc946a080" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc946a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc946a3d0"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc946a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6cc94652a8" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc94652a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc94655f8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc9465780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f6cc9468480" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f6cc9468480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc94687f0"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc9468978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f6cc9467bd8" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f6cc9467bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cc9465020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f6cc9468d60" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f6cc9468d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6cc9467170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f6cc9467438" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f6cc9467438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f6cc9467788"/>
        <function-ref name="txDone" scoped="" ref="0x7f6cc9467910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc9462af8" loc="92:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc9462af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc9462e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc9461020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cc94606d8" loc="96:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc94606d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc9460a48"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc9460bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6cc9461268" loc="93:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc9461268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc94615b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6cc9461740"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc94618c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9461a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc9461bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc9463d80" loc="91:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc9463d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc9462170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc94622f8"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9462480"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9462608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9462790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cc9461e20" loc="94:/home/muzi/tinyos-main//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc9461e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc94601a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc9460330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc867d400" loc="44:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc867d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc867d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6cc867d9d8" loc="45:/home/muzi/tinyos-main//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6cc867d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc867dd28"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6cc867c020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6cc867c1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc867c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6cc867a9a8" loc="55:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6cc867a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6cc867ad18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8678020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6cc86776f8" loc="60:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6cc86776f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6cc8677a68"/>
        <function-ref name="configure" scoped="" ref="0x7f6cc8677bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6cc8677e78" loc="61:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f6cc8677e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6cc86761f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6cc8676380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6cc8676508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6cc8676690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6cc8678268" loc="56:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc8678268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc86785b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6cc8678740"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc86788c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc8678a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8678bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc86768d8" loc="62:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc86768d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc8676c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc8676db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc8675020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc86751a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc8675330"/>
        <function-ref name="get" scoped="" ref="0x7f6cc86754b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc8675640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc8675c60"/>
        <function-ref name="set" scoped="" ref="0x7f6cc8675950"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc86757c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc8675ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6cc867bbb8" loc="54:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc867bbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc867a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc867a1a8"/>
        <function-ref name="request" scoped="" ref="0x7f6cc867a330"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc867a4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc867a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6cc8678e20" loc="57:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8678e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc86771a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc8677330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6cc8674020" loc="75:/home/muzi/tinyos-main//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f6cc8674020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc8674370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc86744f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6cc945cb98" loc="72:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6cc945cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6cc9444020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6cc9444268" loc="73:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc9444268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc94445b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6cc9444740"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc94448c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9444a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc9444bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6cc945c478" loc="70:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc945c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc945c7c8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc945c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6cc9444e20" loc="74:/home/muzi/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc9444e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc94431a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc9443330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6cc86455b8" loc="62:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6cc86455b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6cc8645908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6cc8645b50" loc="63:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6cc8645b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc8644020"/>
        <function-ref name="requested" scoped="" ref="0x7f6cc86441a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc8644330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc86444b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6cc8644640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6cc8647e50" loc="60:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6cc8647e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc86451e8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc8645370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6cc8644888" loc="64:/home/muzi/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6cc8644888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6cc8644bd8"/>
        <function-ref name="userId" scoped="" ref="0x7f6cc8644d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f6cc9425020" loc="3:/home/muzi/tinyos-main//tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f6cc9425020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f6cc9425370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6cc9425650" loc="4:/home/muzi/tinyos-main//tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f6cc9425650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6cc94259a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6cc9425b28"/>
        <function-ref name="request" scoped="" ref="0x7f6cc9425cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6cc9425e38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6cc9424020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6cc9428668" loc="2:/home/muzi/tinyos-main//tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f6cc9428668"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc94289b8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9428b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f6cc9426cc8" loc="43:/usr/src/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f6cc9426cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f6cc94180a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc9415020" loc="94:/usr/src/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc9415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9415370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f6cc9415640" loc="95:/usr/src/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f6cc9415640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f6cc9415990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f6cc940f5d0" loc="39:/home/muzi/tinyos-main//tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f6cc940f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6cc940f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f6cc940fcb0" loc="40:/home/muzi/tinyos-main//tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f6cc940fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc940b0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc940b228"/>
        <function-ref name="start" scoped="" ref="0x7f6cc940b3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc940b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6cc94051f8" loc="46:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6cc94051f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9405548"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc94056d0"/>
        <function-ref name="start" scoped="" ref="0x7f6cc9405858"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc94059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc94041c8" loc="47:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc94041c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9404518"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc94046a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc9404828"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc94049b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9404b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc94038d8" loc="49:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc94038d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc9403c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc9403db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc9401020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc94011a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc9401330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9403300" loc="48:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9403300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9403650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc93ff608" loc="53:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc93ff608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc93ff958"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc93ffae0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc93ffc68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc93ffdf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc93fe020"/>
        <function-ref name="get" scoped="" ref="0x7f6cc93fe1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc93fe330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc93fe950"/>
        <function-ref name="set" scoped="" ref="0x7f6cc93fe4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc93fe640"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc93fe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6cc9400c78" loc="51:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc9400c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc93ff020"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc93ff1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc93ff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc94015d0" loc="50:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc94015d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc9401920"/>
        <function-ref name="source" scoped="" ref="0x7f6cc9401aa8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc9401c30"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc9401db8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc9400020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc94001a8"/>
        <function-ref name="type" scoped="" ref="0x7f6cc9400330"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc94004b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc9400640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc94007c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc9400950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6cc93a7bb0" loc="54:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f6cc93a7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc93a6020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc93a61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc93a6330"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc93a64b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc93a6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6cc93a68c8" loc="55:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f6cc93a68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc93a6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6cc93fbb60" loc="47:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f6cc93fbb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc93aa020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc93aa1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc93aa330"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc93aa4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc93aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc93a8578" loc="50:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc93a8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc93a88c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc93a8a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc93a8bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc93a8d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc93a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc93aa9a8" loc="48:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc93aa9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc93aad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6cc93a7268" loc="51:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6cc93a7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6cc93a75b8"/>
        <function-ref name="noAck" scoped="" ref="0x7f6cc93a7740"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6cc93a78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6cc93a9020" loc="49:/home/muzi/tinyos-main//tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f6cc93a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6cc93a9370"/>
        <function-ref name="source" scoped="" ref="0x7f6cc93a94f8"/>
        <function-ref name="address" scoped="" ref="0x7f6cc93a9680"/>
        <function-ref name="destination" scoped="" ref="0x7f6cc93a9808"/>
        <function-ref name="setSource" scoped="" ref="0x7f6cc93a9990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6cc93a9b18"/>
        <function-ref name="type" scoped="" ref="0x7f6cc93a9ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f6cc93a9e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6cc93a8020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6cc93a81a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6cc93a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6cc93a12e8" loc="50:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6cc93a12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc93a1638"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc93a17c0"/>
        <function-ref name="start" scoped="" ref="0x7f6cc93a1948"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc93a1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc93a0ce8" loc="52:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc93a0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6ccafa1408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc939e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc939e228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc939e3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc939e538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc939e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc93a4ba0" loc="49:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc93a4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc93a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc93a0270" loc="51:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc93a0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6ccafa1408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc93a05c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc939d5a8" loc="56:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc939d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc939d8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc939da80"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc939dc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc939dd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9398020"/>
        <function-ref name="get" scoped="" ref="0x7f6cc93981a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9398330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9398950"/>
        <function-ref name="set" scoped="" ref="0x7f6cc93984b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9398640"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc93987c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f6cc9399ba8" loc="55:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f6cc9399ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6ccafa1408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f6cc939d020"/>
        <function-ref name="offset" scoped="" ref="0x7f6cc939d1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f6cc939d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6cc9397a08" loc="66:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f6cc9397a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6cc9397d58"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6cc9394020"/>
        <function-ref name="start" scoped="" ref="0x7f6cc93941a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9394330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f6cc9332830" loc="332:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f6cc9332830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9332b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9332d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f6cc9384188" loc="74:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f6cc9384188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6cc93844d8"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc9384660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f6cc9369d70" loc="191:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f6cc9369d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc93670f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc9367278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6cc93973f0" loc="65:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f6cc93973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6cc9397740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f6cc9381c48" loc="75:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f6cc9381c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f6cc9383020"/>
        <function-ref name="flush" scoped="" ref="0x7f6cc93831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f6cc9335020" loc="322:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f6cc9335020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc9335370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc93354f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f6cc93859b0" loc="72:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6cc93859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f6cc9385d00"/>
        <function-ref name="resetSend" scoped="" ref="0x7f6cc938e020"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f6cc938e1a8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f6cc938e330"/>
        <function-ref name="putData" scoped="" ref="0x7f6cc938e4b8"/>
        <function-ref name="putDone" scoped="" ref="0x7f6cc938e640"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f6cc938e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc938ea40" loc="73:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc938ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc938ed90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc938a020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc938a1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc938a330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc938a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cc938a640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc938a7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc938ade8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc938a950"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc938aad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc938ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f6cc932f918" loc="341:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f6cc932f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc932fc68"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc932fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f6cc938f6f8" loc="67:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f6cc938f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f6cc938fa48"/>
        <function-ref name="nextByte" scoped="" ref="0x7f6cc938fbd0"/>
        <function-ref name="startSend" scoped="" ref="0x7f6cc938fd58"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f6cc9393020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f6cc938b9f8" loc="68:/home/muzi/tinyos-main//tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6cc938b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f6cc938bd48"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f6cc9392020"/>
        <function-ref name="endPacket" scoped="" ref="0x7f6cc93921a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f6cc926b100" loc="275:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f6cc926b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc926b450"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc926b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc926f020" loc="51:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc926f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6ccafa1408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc926f390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc926f518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc926f6a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc926f828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc926f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f6cc926b8a0" loc="158:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f6cc926b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6cc926bbf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6cc926bd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6cc9270868" loc="50:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f6cc9270868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6ccafa1408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6cc9270bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f6cc926fdb8" loc="54:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f6cc926fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f6ccafa1408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f6cc926e170"/>
        <function-ref name="offset" scoped="" ref="0x7f6cc926e2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f6cc926e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc926da50" loc="57:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc926da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc926dda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc926c020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc926c1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc926c330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc926c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6cc926c640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc926c7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc926cde8"/>
        <function-ref name="set" scoped="" ref="0x7f6cc926cad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc926c950"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc926cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f6cc926d020" loc="56:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f6cc926d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f6cc926d370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f6cc926d4f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f6cc926d680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f6cc926d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f6cc926e6c8" loc="55:/home/muzi/tinyos-main//tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f6cc926e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f6cc926ea18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f6cc926eba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f6cc926ed28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f6cc9265c60" loc="50:/home/muzi/tinyos-main//tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f6cc9265c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc9264020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f6cc92641a8"/>
        <function-ref name="receive" scoped="" ref="0x7f6cc9264330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f6cc92644b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f6cc9264640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f6cc92647c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc9264950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f6cc9268b38" loc="48:/home/muzi/tinyos-main//tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f6cc9268b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f6cc9265020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f6cc92651a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f6cc9265330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f6cc92654b8"/>
        <function-ref name="putData" scoped="" ref="0x7f6cc9265640"/>
        <function-ref name="putDone" scoped="" ref="0x7f6cc92657c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f6cc9265950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6cc9264bc8" loc="51:/home/muzi/tinyos-main//tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f6cc9264bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6cc9263020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6cc92631a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6cc9263330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6cc92634b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6cc9263640"/>
        <function-ref name="get" scoped="" ref="0x7f6cc92637c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6cc9263950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6cc9262020"/>
        <function-ref name="set" scoped="" ref="0x7f6cc9263ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6cc9263c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6cc9263de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f6cc9242020" loc="47:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f6cc9242020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f6cc9242370"/>
        <function-ref name="offset" scoped="" ref="0x7f6cc92424f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f6cc9242680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6cc9234bc0" loc="45:/home/muzi/tinyos-main//tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleEerAppC.SummaryTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f6cc9234bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f6ccaf8e788"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6ccaf8eae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6cc9231dd8"/>
        <function-ref name="fired" scoped="" ref="0x7f6cc9232510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6cc9231238"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6cc9232db0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6cc922f6c8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6cc922f278"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6cc9232960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6cc9233740"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6cc9231808"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6cc9233be0"/>
        <function-ref name="stop" scoped="" ref="0x7f6cc92320c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc922c020" loc="46:../EER/eer/CollectionSenderC.nc">
      <component-ref qname="SimpleEerAppC.SummarySenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc922c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc922c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc922c4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc922c680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc922c808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc922c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc922d398" loc="45:../EER/eer/CollectionSenderC.nc">
      <component-ref qname="SimpleEerAppC.SummarySenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc922d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc922d6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc922d870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc922d9f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc922db80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc922dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6cc85cccb8" loc="38:../EER/eer/CollectionSenderP.nc">
      <component-ref qname="SimpleEerAppC.SummarySenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f6cc85cccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6cc85cb0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6cc85cb228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc85cb3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc85cb538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6cc85cb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6cc85cc100" loc="37:../EER/eer/CollectionSenderP.nc">
      <component-ref qname="SimpleEerAppC.SummarySenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f6cc85cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6cc85cc450"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6cc85cc5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6cc85cc760"/>
        <function-ref name="cancel" scoped="" ref="0x7f6cc85cc8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6cc85cca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7f6cc85c6958" loc="46:../EER/CollectionIdP.nc">
      <component-ref qname="SimpleEerAppC.SummarySenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x7f6cc85c6958"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f6cc85c6ca8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Send" loc="55:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6ccaf7eb90" loc="75:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccaf7e600" loc="75:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccaf7e910" loc="75:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6ccaf782d8" loc="125:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="115:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccaf79c90" loc="125:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccaf78020" loc="125:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6ccaf79488" loc="112:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="102:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6ccaf7c0a8" loc="89:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="77:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccaf7de08" loc="89:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6ccaf7a5c8" loc="100:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="91:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccaf7a020" loc="100:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6ccaf7a348" loc="100:/home/muzi/tinyos-main//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../EER/RootControl.nc">
      <documentation loc="35:../EER/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f6ccaf559b0" loc="43:../EER/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f6ccaf61c28" loc="41:../EER/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f6ccaf55328" loc="42:../EER/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/muzi/tinyos-main//tos/interfaces/Boot.nc">
      <documentation loc="42:/home/muzi/tinyos-main//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f6ccaf863e0" loc="60:/home/muzi/tinyos-main//tos/interfaces/Boot.nc">
        <documentation loc="51:/home/muzi/tinyos-main//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f6ccaf84638" loc="113:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6ccaf843c8" loc="113:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f6ccaf83a40" loc="138:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6ccaf837d0" loc="138:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6ccaf88a18" loc="104:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6ccaf84e20" loc="130:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/muzi/tinyos-main//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccaf855f8" loc="53:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccaf855f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6ccaf6e020" loc="136:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6ccaf739b0" loc="83:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f6ccaf705b8" loc="114:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6ccaf70020" loc="114:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6ccaf70338" loc="114:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f6ccaf718a8" loc="98:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f6ccaf6c020" loc="151:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f6ccaf6e740" loc="144:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6ccaf71110" loc="92:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f6ccaf74108" loc="64:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6ccaf85e58" loc="64:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f6ccaf6f5b8" loc="129:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6ccaf6f020" loc="129:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6ccaf6f338" loc="129:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f6ccaf74b48" loc="73:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6ccaf748d8" loc="73:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6ccaf73328" loc="78:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/muzi/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EerInstrumentation" loc="41:../EER/eer/EerInstrumentation.nc">
      <function command="" provided="0" name="ctrl_parentchange" ref="0x7f6ccaf60df8" loc="44:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ctrl_tricklereset" ref="0x7f6ccaf5f548" loc="45:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="summary_size" ref="0x7f6ccaf59700" loc="55:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="data_pktdup" ref="0x7f6ccaf5c7e0" loc="50:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ctrl_txpkt" ref="0x7f6ccaf60020" loc="42:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f6ccaf5b6b0" loc="53:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="data_queuedrop" ref="0x7f6ccaf5c110" loc="49:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="data_txpkt" ref="0x7f6ccaf5fc10" loc="46:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="data_rxpkt" ref="0x7f6ccaf5d328" loc="47:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ctrl_rxpkt" ref="0x7f6ccaf606e8" loc="43:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="data_rxack" ref="0x7f6ccaf5d9f0" loc="48:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="data_inconsistent" ref="0x7f6ccaf5b020" loc="51:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set_total_time" ref="0x7f6ccaf58290" loc="57:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
              <typename><typedef-ref name="nx_uint32_t" ref="0x7f6ccb55d8d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6ccaf58020" loc="57:../EER/eer/EerInstrumentation.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
              <typename><typedef-ref name="nx_uint32_t" ref="0x7f6ccb55d8d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="summary" ref="0x7f6ccaf59020" loc="54:../EER/eer/EerInstrumentation.nc">
        <interfacedef-ref qname="EerInstrumentation"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6ccaf5bd80" loc="54:../EER/eer/EerInstrumentation.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/muzi/tinyos-main//tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/muzi/tinyos-main//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6ccaf807d0" loc="95:/home/muzi/tinyos-main//tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/muzi/tinyos-main//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6ccaf7f020" loc="105:/home/muzi/tinyos-main//tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/muzi/tinyos-main//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/muzi/tinyos-main//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f6ccb456070" loc="67:/home/muzi/tinyos-main//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f6ccb456860" loc="75:/home/muzi/tinyos-main//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/muzi/tinyos-main//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/muzi/tinyos-main//tos/interfaces/Init.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6ccaf34c98" loc="62:/home/muzi/tinyos-main//tos/interfaces/Init.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f6ccaf06958" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f6ccaf08d20" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f6ccaf06290" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f6ccaf086a0" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f6ccaf074d8" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f6ccaf0c930" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f6ccaf08020" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f6ccaf07ba0" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/muzi/tinyos-main//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/muzi/tinyos-main//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f6ccb099830" loc="62:/home/muzi/tinyos-main//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f6ccb3b0450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f6ccaeb6ae0" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f6ccaeb6870" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f6ccaeb9178" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6ccaefd170"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6ccaefdba8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f6ccaeb5328" loc="57:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f6ccaeb4178" loc="59:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f6ccaeb6178" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f6ccaeb5a00" loc="58:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f6ccaeb98b0" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f6ccaeb7020" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f6ccaeb79f0" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6ccaefd170"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6ccaefdba8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6ccaeb7780" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6ccaefd170"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f6ccaefdba8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f6ccaea8328" loc="44:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f6ccaea67b0" loc="84:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f6ccaea6540" loc="84:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6ccaea5338" loc="91:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6ccaea50c8" loc="91:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6ccaea7dc0" loc="73:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6ccaea7568" loc="68:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f6ccaea8c50" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f6ccaea89e0" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f6ccaeb1a08" loc="40:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f6ccaeae338" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6ccaeae0c8" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f6ccaeaec98" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f6ccaeaea28" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f6ccaead648" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f6ccaead3d8" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6ccaeadcd0" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6ccaec0ae8" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f6ccaebd338" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f6ccaebd0c8" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f6ccaebe258" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6ccaec2020" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f6ccaebe930" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6ccaec2e28" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f6ccaec0460" loc="51:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6ccaec2750" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6ccaec1500" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f6ccaec1da0" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6ccaec1b30" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f6ccaebdcd0" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f6ccaebda60" loc="56:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6ccae80020" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/muzi/tinyos-main//tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/muzi/tinyos-main//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f6ccb01f1d8" loc="85:/home/muzi/tinyos-main//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f6ccb01f8b0" loc="86:/home/muzi/tinyos-main//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f6ccb022a38" loc="79:/home/muzi/tinyos-main//tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/muzi/tinyos-main//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/muzi/tinyos-main//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/muzi/tinyos-main//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f6ccb1691d8" loc="52:/home/muzi/tinyos-main//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/muzi/tinyos-main//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6ccb462020" loc="57:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f6ccb461020" loc="72:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f6ccb462718" loc="65:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/muzi/tinyos-main//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/muzi/tinyos-main//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccad58bf0" loc="53:/home/muzi/tinyos-main//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccad58bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6ccad554c8" loc="61:/home/muzi/tinyos-main//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccad4f3e8" loc="56:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccad4f3e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6ccad4f618" loc="56:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6ccad4a020" loc="109:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6ccad4d070" loc="78:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f6ccad4c5c0" loc="103:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6ccad4c020" loc="103:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f6ccad4c340" loc="103:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6ccad4d7b8" loc="88:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f6ccad4a7a0" loc="116:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6ccad4e108" loc="66:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6ccad4fe68" loc="66:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccad4f618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6ccad4e8d8" loc="73:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/muzi/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccace4570" loc="57:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccace4570"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6ccace47a0" loc="57:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccace47a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6ccace2070" loc="64:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccace47a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6ccace10d8" loc="76:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6ccace2888" loc="71:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6ccace17c8" loc="82:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/muzi/tinyos-main//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6ccabcb9c8" loc="80:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6ccabcb0c8" loc="80:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6ccabcb428" loc="80:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccabcb738" loc="80:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6ccabc4020" loc="135:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabc58e0" loc="135:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccabc5bf0" loc="135:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6ccabc50d8" loc="123:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6ccabc8c80" loc="96:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabc8a10" loc="96:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6ccabc72a0" loc="110:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabc9cc8" loc="110:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6ccabc7020" loc="110:/home/muzi/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/muzi/tinyos-main//tos/interfaces/Receive.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6ccabc0328" loc="78:/home/muzi/tinyos-main//tos/interfaces/Receive.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
              <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabc39f8" loc="78:/home/muzi/tinyos-main//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f6ccabc3d20" loc="78:/home/muzi/tinyos-main//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccabc0060" loc="78:/home/muzi/tinyos-main//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
      <documentation loc="42:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6ccabc1e50" loc="65:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabc1be0" loc="65:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f6ccabbbe20" loc="78:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabbbbb0" loc="78:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6ccabb5020" loc="126:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="109:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabb7a08" loc="126:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccabb7d18" loc="126:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6ccabb7178" loc="106:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="96:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f6ccabb82a0" loc="94:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="80:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabb9c48" loc="94:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccabb8020" loc="94:/home/muzi/tinyos-main//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f6ccaba38d8" loc="35:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6ccaba38d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6ccaba3b08" loc="35:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccaba3b08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f6ccab9a7d8" loc="63:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccaba3b08"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab9a568" loc="63:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f6ccab988b0" loc="70:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab98640" loc="70:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f6ccab9c670" loc="49:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab9c400" loc="49:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6ccab99ac8" loc="78:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccaba3b08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab99508" loc="78:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f6ccab99848" loc="78:/home/muzi/tinyos-main//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6ccaba3b08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f6ccab8c608" loc="65:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab8c020" loc="65:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f6ccab8c388" loc="65:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f6ccab8b758" loc="71:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab8b4e8" loc="71:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f6ccab8d7b0" loc="57:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f6ccab90d88" loc="52:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f6ccab90b18" loc="52:/home/muzi/tinyos-main//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f6ccabbccd0" loc="59:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccabbca60" loc="59:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f6ccab9f020" loc="71:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccaba1cb0" loc="71:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f6ccab9e108" loc="85:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab9fe28" loc="85:/home/muzi/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f6ccaba73b0" loc="177:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccaba7140" loc="177:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f6ccabb12d0" loc="88:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabb1060" loc="88:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f6ccabb3840" loc="68:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f6ccabb22d0" loc="78:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabb2060" loc="78:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f6ccabaea60" loc="121:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabae4a8" loc="121:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6ccabae7e0" loc="121:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f6ccabaf618" loc="103:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabaf060" loc="103:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6ccabaf398" loc="103:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f6ccabaa020" loc="147:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabaccf8" loc="147:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f6ccaba92a0" loc="162:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabaace8" loc="162:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f6ccaba9020" loc="162:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6ccafa4908"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f6ccababc38" loc="136:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccabab9c8" loc="136:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f6ccaba67b8" loc="187:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6ccaba6208" loc="187:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f6ccaba6538" loc="187:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f6ccaba4560" loc="195:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/muzi/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f6ccab649f8" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab64788" loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f6ccab67dd0" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab67b60" loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f6ccab68640" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f6ccab683d0" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f6ccab6ab60" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f6ccab6a8f0" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f6ccab67020" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f6ccab68d88" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f6ccab65c30" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab659c0" loc="88:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/muzi/tinyos-main//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f6ccab58d18" loc="59:/home/muzi/tinyos-main//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f6ccab58738" loc="59:/home/muzi/tinyos-main//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6ccab58a98" loc="59:/home/muzi/tinyos-main//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f6ccab73d50" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab737a8" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f6ccab73ad0" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f6ccab6e118" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab6fb18" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f6ccab6fe68" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f6ccab727d8" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f6ccbacf728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab72568" loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f6ccab6f108" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab71e30" loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f6ccab73020" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab76c58" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f6ccab712d0" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab71060" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f6ccab5c800" loc="65:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab5c590" loc="65:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f6ccab60ac0" loc="46:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab604d8" loc="46:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f6ccab60840" loc="46:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f6ccab5f8a0" loc="59:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab5f630" loc="59:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f6ccab5ee48" loc="53:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab5e860" loc="53:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f6ccab5ebc8" loc="53:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f6ccab5b728" loc="71:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab5b4b8" loc="71:/home/muzi/tinyos-main//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/muzi/tinyos-main//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f6ccab6c9e0" loc="47:/home/muzi/tinyos-main//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab6c770" loc="47:/home/muzi/tinyos-main//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
      <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6ccab4f808" loc="120:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
        <documentation loc="104:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f6ccab51910" loc="97:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
        <documentation loc="90:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f6ccab51020" loc="88:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
        <documentation loc="78:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6ccab4f0d8" loc="102:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
        <documentation loc="99:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6ccab4e258" loc="128:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
        <documentation loc="122:/home/muzi/tinyos-main//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6ccab32b48" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab325b0" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f6ccab328c8" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6ccab30d70" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f6ccab2d3b8" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6ccab2e600" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f6ccab2edd8" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6ccab2d128" loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6ccab2fe28" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6ccab2f880" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6ccab2fba8" loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f6ccab305a8" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f6ccab30338" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/muzi/tinyos-main//tos/interfaces/Random.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f6ccab295a0" loc="52:/home/muzi/tinyos-main//tos/interfaces/Random.nc">
        <documentation loc="48:/home/muzi/tinyos-main//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f6ccab33dc0" loc="46:/home/muzi/tinyos-main//tos/interfaces/Random.nc">
        <documentation loc="42:/home/muzi/tinyos-main//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f6ccab1aad8" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab1a830" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f6ccab1a0a8" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f6ccafdc150"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f6ccafdbe00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab1bd90" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f6ccab19ce8" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f6ccafda8c8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f6ccafd70d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6ccab19a00" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f6ccab38c80" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f6ccab35b38" loc="97:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f6ccab353e0" loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f6ccab39530" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f6ccab384b8" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f6ccab364d8" loc="76:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f6ccab36c50" loc="83:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f6ccab39d28" loc="56:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f6ccab25af8" loc="61:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f6ccab24258" loc="67:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f6ccab249c8" loc="72:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="69:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f6ccab22848" loc="83:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="79:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f6ccab21e70" loc="100:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="96:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6ccab20630" loc="117:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="103:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f6ccab22110" loc="77:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="74:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6ccab1f290" loc="134:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="120:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f6ccab1f020" loc="134:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f6ccab253e0" loc="56:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f6ccab21020" loc="89:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="86:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f6ccab21738" loc="94:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
        <documentation loc="91:/home/muzi/tinyos-main//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/muzi/tinyos-main//tos/interfaces/State.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f6ccab11020" loc="71:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <documentation loc="68:/home/muzi/tinyos-main//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f6ccab14730" loc="56:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f6ccab137e8" loc="66:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f6ccab13578" loc="66:/home/muzi/tinyos-main//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f6ccab14e38" loc="61:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f6ccab15508" loc="45:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <documentation loc="40:/home/muzi/tinyos-main//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6ccab15298" loc="45:/home/muzi/tinyos-main//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f6ccab14020" loc="51:/home/muzi/tinyos-main//tos/interfaces/State.nc">
        <documentation loc="47:/home/muzi/tinyos-main//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6ccab15cc0" loc="51:/home/muzi/tinyos-main//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f6ccaaba5d8" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f6ccaaba020" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f6ccaaba358" loc="106:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f6ccaabb020" loc="93:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f6ccaabd660" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f6ccaabd020" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f6ccaabd3e0" loc="87:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f6ccaac3db0" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6ccaac3b40" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f6ccaabb828" loc="98:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f6ccaabf658" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6ccaabf3e8" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f6ccaac2de8" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6ccaac2b78" loc="61:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f6ccaab97d8" loc="117:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f6ccaabe6f8" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6ccaabe488" loc="78:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f6ccaab9020" loc="112:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f6ccaac1538" loc="66:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6ccab8e8c8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6ccab86020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f6ccaac1cb8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f6ccaac3410" loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6ccaac24c8" loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f6ccaabfd88" loc="77:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f6ccaab52a0" loc="49:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6ccaab52a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f6ccaab5ad8" loc="55:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
        <documentation loc="50:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6ccaab47c8" loc="63:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6ccaab52a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6ccaab4248" loc="63:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6ccaab4548" loc="63:/home/muzi/tinyos-main//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6ccaab52a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6ccaa8c020" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6ccaa97ce8" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6ccaa8ca78" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6ccaa8c808" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/muzi/tinyos-main//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/muzi/tinyos-main//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f6ccaaa7678" loc="48:/home/muzi/tinyos-main//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/muzi/tinyos-main//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6ccab8e8c8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6ccab86020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6ccaaa07c0" loc="44:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6ccaa9e020" loc="45:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6ccaaa1a30" loc="42:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6ccaa9edb0" loc="47:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6ccaaa0110" loc="43:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6ccaa9e6d8" loc="46:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6ccaaa4d00" loc="40:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6ccaaa13a0" loc="41:/home/muzi/tinyos-main//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f6ccaa94020" loc="50:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f6ccaa94e70" loc="60:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f6ccaa94780" loc="55:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f6ccaa96730" loc="45:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f6ccaa96178" loc="45:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6ccafa4cb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6ccaa964b0" loc="45:/home/muzi/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f6ccaa85020" loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6ccaa91468" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6ccaa92670" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6ccaa92e78" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6ccaa911d8" loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6ccaa8faf8" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6ccaa91cb8" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6ccaa8f538" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6ccaa8f868" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6ccaa98770" loc="68:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6ccaa98020" loc="61:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f6ccaa998b8" loc="54:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f6ccaa99070" loc="53:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6cca9b1b10" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6cca9af258" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f6cca9ac910" loc="110:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6cca9ac6a0" loc="110:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6cca9b24e8" loc="58:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6cca9ae070" loc="87:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f6cca9aa1d8" loc="117:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6cca9af930" loc="85:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6cca9b13e0" loc="73:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f6cca9ad710" loc="99:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f6cca9b2c10" loc="66:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6cca9b3738" loc="48:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f6cca9ae788" loc="92:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f6cca9ade10" loc="101:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f6cca9ad020" loc="94:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6cca9b3de0" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f6cca7720d8" loc="54:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6cca771178" loc="66:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6cca772a00" loc="61:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6cca772790" loc="61:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f6cca775890" loc="53:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/muzi/tinyos-main//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6cca74fb10" loc="52:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6cca74c450" loc="72:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6cca74f428" loc="47:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f6cca74dc68" loc="67:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f6cca74d9f8" loc="67:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f6cca754d08" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f6cca74d290" loc="59:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/muzi/tinyos-main//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f6cca643830" loc="24:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f6cca642070" loc="31:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f6cca642840" loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f6cca61c348" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca61dd58" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6cca61c0c8" loc="62:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f6cca6172b0" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca618940" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6cca618c70" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6cca617020" loc="91:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6cca619c50" loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca6196a0" loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6cca6199d0" loc="82:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f6cca61d020" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f6ccafdf460"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca61e908" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6cca61ec38" loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6cca61b948" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca61b060" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6cca61b390" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6cca61b6b8" loc="71:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6cca5fe9d8" loc="76:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6cca5fe0c8" loc="76:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6cca5fe428" loc="76:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cca5fe748" loc="76:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6cca5fcd68" loc="88:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6cca5fc100" loc="88:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6cca5fc460" loc="88:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cca5fc780" loc="88:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6cca5fcac8" loc="89:/home/muzi/tinyos-main//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/muzi/tinyos-main//tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f6cca6029a8" loc="45:/home/muzi/tinyos-main//tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/muzi/tinyos-main//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f6cca602738" loc="45:/home/muzi/tinyos-main//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/muzi/tinyos-main//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f6cca526a80" loc="53:/home/muzi/tinyos-main//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/muzi/tinyos-main//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6cca523378" loc="61:/home/muzi/tinyos-main//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f6cca51c360" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6cca556898"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6cca556ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f6cca5214a8" loc="62:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca521238" loc="62:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f6cca5206f8" loc="74:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca520488" loc="74:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f6cca521ca8" loc="68:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6cca51f108" loc="81:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca520e28" loc="81:/home/muzi/tinyos-main//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/muzi/tinyos-main//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/muzi/tinyos-main//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f6cca516578" loc="65:/home/muzi/tinyos-main//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f6cca519d90" loc="59:/home/muzi/tinyos-main//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f6cca50e798" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca50e528" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f6cca512dd0" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f6cca4ecc88" loc="213:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f6cca4f60d8" loc="143:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f6cca503740" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca571528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6cca571d50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6cca5034d0" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca571528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6cca571d50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f6cca4f93a0" loc="123:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f6cca501b20" loc="70:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca56d280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6cca56daa8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6cca5018b0" loc="70:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca56d280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6cca56daa8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f6cca4f0258" loc="180:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f6cca4ed738" loc="197:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f6cca501178" loc="65:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca56f350"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6cca56fac8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f6cca4ff328" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca56d280"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f6cca56daa8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f6cca4fdde0" loc="97:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f6cca4fdb70" loc="97:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f6cca4fd4b8" loc="95:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f6cca4f1b28" loc="179:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f6cca5029c0" loc="60:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca56f350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6cca56fac8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6cca502750" loc="60:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca56f350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f6cca56fac8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f6cca4fe3e0" loc="85:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f6cca4f0928" loc="181:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f6cca4fed40" loc="90:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f6cca4fead0" loc="90:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f6cca4fa530" loc="113:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f6cca4fac48" loc="118:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f6cca4f2d58" loc="177:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f6cca4f5e20" loc="163:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f6cca4f8258" loc="133:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f6cca4f1468" loc="178:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f6cca4f6810" loc="148:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f6cca4ee020" loc="182:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f6cca4fb588" loc="103:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f6cca578560"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f6cca574ce0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f6cca4ee758" loc="187:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f6cca4ec550" loc="207:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f6cca4ffc58" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f6cca4ff9e8" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f6cca4eb5f0" loc="224:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca4eb380" loc="224:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f6cca502020" loc="55:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6cca571528"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f6cca571d50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f6cca4f9ab0" loc="128:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f6cca4f5020" loc="153:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f6cca4f25b0" loc="174:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6cca543180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6cca543588"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6cca4f2340" loc="174:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6cca543180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6cca543588"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f6cca4f48c0" loc="168:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6cca556898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6cca556ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6cca4f4650" loc="168:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f6cca556898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f6cca556ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f6cca4ebe38" loc="231:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f6cca4ed020" loc="192:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f6cca4fbcd0" loc="108:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f6cca4ede30" loc="202:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f6cca4f5720" loc="158:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f6cca4f8990" loc="138:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6cca48acb0" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f6cca461258" loc="80:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f6cca473720" loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f6cca468290" loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6cca468020" loc="62:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f6cca47b178" loc="11:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f6cca465740" loc="71:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f6cca46d510" loc="49:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f6cca4748c0" loc="28:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f6cca472520" loc="34:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f6cca476940" loc="25:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f6cca4766d0" loc="25:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f6cca478e38" loc="21:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f6cca46f110" loc="41:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f6cca466110" loc="66:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f6cca462ae0" loc="78:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f6cca469868" loc="61:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f6cca45d8c8" loc="91:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f6cca459d00" loc="100:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f6cca479020" loc="14:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f6cca4719e8" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f6cca46e1d8" loc="45:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f6cca4741d8" loc="27:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f6cca47c020" loc="7:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f6cca469108" loc="58:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6cca46ae38" loc="58:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f6cca47f898" loc="6:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f6cca465020" loc="69:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f6cca461950" loc="81:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f6cca45b020" loc="94:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f6cca459610" loc="97:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f6cca4645a8" loc="74:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f6cca460070" loc="83:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f6cca4689b8" loc="65:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f6cca45e9c0" loc="87:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f6cca4796d8" loc="15:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f6cca46b5e8" loc="53:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f6cca460e60" loc="86:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f6cca4623e0" loc="77:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f6cca46ed50" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f6cca46eae0" loc="46:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f6cca45b760" loc="95:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f6cca46a770" loc="57:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f6cca465e50" loc="72:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f6cca47ca28" loc="8:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6cca530500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f6cca530908"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f6cca47c7b8" loc="8:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6cca530500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f6cca530908"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f6cca471328" loc="37:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f6cca478730" loc="19:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6cca4784c0" loc="19:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f6cca46f9f8" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cca46f788" loc="42:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f6cca45d178" loc="90:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f6cca476020" loc="24:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f6cca479de8" loc="18:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f6cca46a020" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f6cca46bcb8" loc="54:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f6cca47b848" loc="12:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f6cca460730" loc="84:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f6cca464cb0" loc="75:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f6cca466818" loc="68:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f6cca46de70" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f6cca46dc00" loc="50:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f6cca472bd8" loc="35:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f6cca473020" loc="29:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f6cca45be70" loc="96:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f6cca4777a8" loc="22:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f6cca477538" loc="22:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f6cca45c070" loc="92:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f6cca473df0" loc="32:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f6cca45c7c8" loc="93:/home/muzi/tinyos-main//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/muzi/tinyos-main//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/muzi/tinyos-main//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f6cca3820d8" loc="90:/home/muzi/tinyos-main//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/muzi/tinyos-main//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f6cca3828c8" loc="98:/home/muzi/tinyos-main//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/muzi/tinyos-main//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6cca34d020" loc="56:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f6cca34c020" loc="73:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6cca34f750" loc="46:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6cca34d820" loc="65:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6cca34c8e8" loc="81:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/muzi/tinyos-main//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f6cca342c80" loc="79:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6cca348020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6cca342a10" loc="79:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6cca348020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f6cca347e10" loc="53:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f6cca3438f0" loc="62:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6cca348020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6cca343680" loc="62:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6cca348020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f6cca3421d8" loc="70:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/muzi/tinyos-main//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f6cca348020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/muzi/tinyos-main//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/muzi/tinyos-main//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6cca1523b0" loc="13:/home/muzi/tinyos-main//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6cca152140" loc="13:/home/muzi/tinyos-main//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6cca13f358" loc="10:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f6cca142a10" loc="10:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f6cca142d58" loc="10:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cca13f0c8" loc="10:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6cca13d020" loc="11:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6cca13fa30" loc="11:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cca13fd40" loc="11:/home/muzi/tinyos-main//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6cca126420" loc="59:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6cca126420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6cca126650" loc="59:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6cca126650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f6cca125118" loc="66:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6cca126650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6cca126e78" loc="66:/home/muzi/tinyos-main//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6cca126650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f6cca0ca8c8" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6cca097400" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6cca099a68" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f6cca097180" loc="63:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f6cca099328" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f6cca09cb38" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6cca09c8c8" loc="49:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f6ccbacd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f6cca0acae8" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cca0ac878" loc="58:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f6cca0b0b58" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cca0b08e8" loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6cca0a9938" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cca0a96c8" loc="72:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6cca0aba20" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cca0ab7b0" loc="65:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/muzi/tinyos-main//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f6cc9e9c480" loc="53:/home/muzi/tinyos-main//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6cc9e9c480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f6cc9e97020" loc="64:/home/muzi/tinyos-main//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/muzi/tinyos-main//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6cc9e9c480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f6cc9e9ccb8" loc="64:/home/muzi/tinyos-main//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6cc9e9c480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x7f6cc9da1020" loc="3:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f6cc9da5cd0" loc="3:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x7f6cc9da0178" loc="6:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x7f6cc9da08b8" loc="7:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x7f6cc9da19a0" loc="4:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f6cc9da1730" loc="4:/home/muzi/tinyos-main//tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerCycle" loc="37:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
        <short>&#10; Manage the CC2420's duty cycle and power management&#10; </short>
        <long>&#10; Manage the CC2420's duty cycle and power management&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSleepInterval" ref="0x7f6cc9db5a68" loc="48:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @return the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="detected" ref="0x7f6cc9db4178" loc="55:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="50:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @deprecated Should be removed in the future when the PowerCycle&#10;     component does packet-level detects and is in full control of radio&#10;     power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSleepInterval" ref="0x7f6cc9db5290" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; Set the sleep interval, in binary milliseconds&#10; </short>
          <long>&#10; Set the sleep interval, in binary milliseconds&#10; @param sleepIntervalMs the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x7f6cc9db5020" loc="43:/home/muzi/tinyos-main//tos/chips/cc2420/interfaces/PowerCycle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:../EER/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f6cc9bf0940" loc="50:../EER/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bf0398" loc="50:../EER/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f6cc9bf06c0" loc="50:../EER/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f6cc9bf4c70" loc="44:../EER/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bf46b8" loc="44:../EER/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6cc9bf49f0" loc="44:../EER/CollectionPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f6cc9bf12e0" loc="47:../EER/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bf3cb0" loc="47:../EER/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f6cc9bf1060" loc="47:../EER/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f6cc9bf4020" loc="43:../EER/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bfac50" loc="43:../EER/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f6cc9bf1c80" loc="49:../EER/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bf1a10" loc="49:../EER/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f6cc9bf3630" loc="46:../EER/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bf33c0" loc="46:../EER/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:../EER/CollectionDebug.nc">
      <documentation loc="35:../EER/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7f6cc9bc0af0" loc="61:../EER/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6cc9bc0880" loc="61:../EER/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7f6cc9bbb020" loc="73:../EER/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6cc9bbc358" loc="73:../EER/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6cc9bbc678" loc="73:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7f6cc9bbc9c0" loc="73:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7f6cc9bbccf8" loc="73:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7f6cc9bbf7d8" loc="64:../EER/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6cc9bbf238" loc="64:../EER/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f6cc9bbf558" loc="64:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7f6cc9bba3a8" loc="79:../EER/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6cc9bbb708" loc="79:../EER/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7f6cc9bbba50" loc="79:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7f6cc9bbbd98" loc="79:../EER/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7f6cc9bba108" loc="79:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7f6cc9bbec50" loc="67:../EER/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6cc9bbe020" loc="67:../EER/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f6cc9bbe350" loc="67:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f6cc9bbe680" loc="67:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f6cc9bbe9b0" loc="67:../EER/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/home/muzi/tinyos-main//tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f6cc9bf9a08" loc="31:/home/muzi/tinyos-main//tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/muzi/tinyos-main//tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bf9140" loc="31:/home/muzi/tinyos-main//tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f6cc9bf9468" loc="31:/home/muzi/tinyos-main//tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cc9bf9778" loc="31:/home/muzi/tinyos-main//tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="33:../EER/eer/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7f6cc9bca378" loc="84:../EER/eer/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6cc9bca108" loc="84:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f6cc9bcdac0" loc="71:../EER/eer/CtpInfo.nc">
        <documentation loc="68:../EER/eer/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7f6cc9bcb9c0" loc="83:../EER/eer/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7f6cc9bcfb68" loc="59:../EER/eer/CtpInfo.nc">
        <documentation loc="54:../EER/eer/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f6cc9bcf2d0" loc="52:../EER/eer/CtpInfo.nc">
        <documentation loc="44:../EER/eer/CtpInfo.nc">
          <short>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.</short>
          <long>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.  The pointer is allocated by the&#10; caller.  If the parent is invalid, return FAIL (no info).  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7f6cc9bcf060" loc="52:../EER/eer/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7f6cc9bcd360" loc="66:../EER/eer/CtpInfo.nc">
        <documentation loc="61:../EER/eer/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7f6cc9bcc7e8" loc="76:../EER/eer/CtpInfo.nc">
        <documentation loc="73:../EER/eer/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6cc9bcc230" loc="76:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7f6cc9bcc568" loc="76:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7f6cc9bc86a8" loc="86:../EER/eer/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6cc9bc8438" loc="86:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f6cc9bd0828" loc="42:../EER/eer/CtpInfo.nc">
        <documentation loc="35:../EER/eer/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f6cc9bd05b8" loc="42:../EER/eer/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7f6cc9bcad00" loc="85:../EER/eer/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6cc9bcaa90" loc="85:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7f6cc9bcb290" loc="81:../EER/eer/CtpInfo.nc">
        <documentation loc="78:../EER/eer/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6cc9bcb020" loc="81:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborEtx" ref="0x7f6cc9bc7040" loc="91:../EER/eer/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6cc9bc8da0" loc="91:../EER/eer/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:../EER/eer/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7f6cc9bc5328" loc="7:../EER/eer/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7f6cc9bc5c80" loc="14:../EER/eer/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7f6cc9bc5a10" loc="14:../EER/eer/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:../EER/eer/CtpPacket.nc">
      <documentation loc="33:../EER/eer/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007/11/28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f6cc9be4cb0" loc="64:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be4708" loc="64:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f6cc9be4a30" loc="64:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7f6cc9beb3e0" loc="52:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9becdb8" loc="52:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f6cc9beb160" loc="52:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f6cc9be7020" loc="58:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be8948" loc="58:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f6cc9be8c68" loc="58:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f6cc9be6618" loc="61:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be6060" loc="61:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6cc9be6398" loc="61:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f6cc9bec6f0" loc="49:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bec100" loc="49:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f6cc9bec470" loc="49:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f6cc9be82d0" loc="57:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be8060" loc="57:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f6cc9be7988" loc="60:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be7718" loc="60:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f6cc9be22a0" loc="67:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be3cb0" loc="67:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f6cc9be2020" loc="67:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f6cc9bee9f0" loc="46:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bee400" loc="46:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f6cc9bee770" loc="46:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7f6cc9bd3d60" loc="70:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f6cc9bd3788" loc="70:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f6cc9bd3ae0" loc="70:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7f6cc9bebd10" loc="54:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bebaa0" loc="54:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f6cc9be4020" loc="63:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be6d48" loc="63:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7f6cc9bd30b8" loc="69:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f6cc9be2a88" loc="69:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f6cc9be2de0" loc="69:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f6cc9be3630" loc="66:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9be33c0" loc="66:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7f6cc9bea950" loc="55:../EER/eer/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc9bea3c0" loc="55:../EER/eer/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7f6cc9bea6d0" loc="55:../EER/eer/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:../EER/CollectionId.nc">
      <documentation loc="35:../EER/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7f6cc9bc4b80" loc="46:../EER/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f6cc9c0a420"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:../EER/4bitle/LinkEstimator.nc">
      <documentation loc="35:../EER/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7f6cc9ba8020" loc="62:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba9cc8" loc="62:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7f6cc9babc10" loc="55:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9bab9a0" loc="55:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7f6cc9ba8978" loc="66:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba8708" loc="66:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLinkRssi" ref="0x7f6cc9ba42e0" loc="75:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x7f6ccbacf728"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba6ce0" loc="75:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
          <variable name="newrssi" ref="0x7f6cc9ba4060" loc="75:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x7f6ccbacf728"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7f6cc9bab290" loc="52:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9bab020" loc="52:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f6cc9ba7c48" loc="72:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba79d8" loc="72:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7f6cc9ba7338" loc="69:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba70c8" loc="69:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkRssi" ref="0x7f6cc9ba65f0" loc="74:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f6ccbacf728"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba6380" loc="74:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7f6cc9ba95f0" loc="58:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9ba9380" loc="58:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7f6cc9bac788" loc="49:../EER/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f6cc9bac518" loc="49:../EER/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f6cc9b5a7e8" loc="44:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b5a7e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7f6cc9b56290" loc="51:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b5a7e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f6cc9b56020" loc="51:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b5a7e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f6cc9b55378" loc="65:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7f6cc9b56c20" loc="59:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
        <documentation loc="53:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b5a7e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f6cc9b569b0" loc="59:/home/muzi/tinyos-main//tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b5a7e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f6cc9b74540" loc="43:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b74540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f6cc9b6daa8" loc="80:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="74:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b74540"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f6cc9b6a3b8" loc="97:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="90:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b74540"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f6cc9b6a148" loc="97:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b74540"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f6ccbad3508"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f6ccbad3508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f6cc9b69290" loc="108:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="99:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b74540"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6cc9b69020" loc="108:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f6cc9b6e4b0" loc="57:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f6cc9b6d3a0" loc="72:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f6cc9b6b628" loc="88:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="82:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b74540"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f6cc9b74d68" loc="50:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f6cc9b6ebc8" loc="65:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="59:/home/muzi/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:../EER/UnicastNameFreeRouting.nc">
      <documentation loc="35:../EER/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7f6cc9b737d0" loc="49:../EER/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7f6cc9b73e50" loc="51:../EER/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7f6cc9b73020" loc="48:../EER/UnicastNameFreeRouting.nc">
        <documentation loc="43:../EER/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7f6cc9b724f8" loc="52:../EER/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
      <documentation loc="33:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f6cc9b66a58" loc="50:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b66a58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6cc9b5f998" loc="97:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="91:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b66a58"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f6cc9b61328" loc="80:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="74:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f6cc9b632a8" loc="61:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f6cc9b61cf0" loc="89:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="82:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b66a58"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f6cc9b61a80" loc="89:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f6cc9b66a58"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f6cc9b63a90" loc="72:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="63:/home/muzi/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EerHealth" loc="41:../EER/eer/EerHealth.nc">
      <function command="" provided="0" name="get_hlth_forwarded" ref="0x7f6cc9b44370" loc="48:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fwd" ref="0x7f6cc9b44100" loc="48:../EER/eer/EerHealth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hlth_forwarded" ref="0x7f6cc9b46980" loc="47:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f6cc9b470d8" loc="42:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hlth_generated" ref="0x7f6cc9b477c8" loc="44:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get_hlth_generated" ref="0x7f6cc9b46290" loc="45:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gen" ref="0x7f6cc9b46020" loc="45:../EER/eer/EerHealth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_hlth_retx" ref="0x7f6cc9b43418" loc="51:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="retx" ref="0x7f6cc9b431a8" loc="51:../EER/eer/EerHealth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_hlth_psetSize" ref="0x7f6cc9b40020" loc="56:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="psetSize" ref="0x7f6cc9b42c68" loc="56:../EER/eer/EerHealth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hlth_retx" ref="0x7f6cc9b44a30" loc="50:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get_hlth_dropped" ref="0x7f6cc9b424f8" loc="54:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="drp" ref="0x7f6cc9b42288" loc="54:../EER/eer/EerHealth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hlth_dropped" ref="0x7f6cc9b43af8" loc="53:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get_hlth_eerParent" ref="0x7f6cc9b40a18" loc="58:../EER/eer/EerHealth.nc">
        <interfacedef-ref qname="EerHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="eerParent" ref="0x7f6cc9b407a8" loc="58:../EER/eer/EerHealth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="39:../EER/eer/CompareBit.nc">
      <documentation loc="27:../EER/eer/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2008/09/27 17:00:54 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7f6cc994d020" loc="43:../EER/eer/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc994f228" loc="43:../EER/eer/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f6cc994f9e0" loc="43:../EER/eer/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cc994fcf0" loc="43:../EER/eer/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:../EER/eer/CtpRoutingPacket.nc">
      <documentation loc="33:../EER/eer/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009/09/21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7f6cc97b9020" loc="51:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97bac98" loc="51:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f6cc97b58a8" loc="57:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97b5308" loc="57:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f6cc97b5628" loc="57:../EER/eer/CtpRoutingPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f6cc97ba2a0" loc="48:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97bbc68" loc="48:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f6cc97ba020" loc="48:../EER/eer/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f6cc97b6910" loc="56:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97b66a0" loc="56:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f6cc97bb2a0" loc="47:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97bdc58" loc="47:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f6cc97bb020" loc="47:../EER/eer/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7f6cc97b7c58" loc="54:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97b76a0" loc="54:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6cc97b79d8" loc="54:../EER/eer/CtpRoutingPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f6cc97b9ca8" loc="53:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97b9a38" loc="53:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7f6cc97bd2a0" loc="46:../EER/eer/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc97c0be0" loc="46:../EER/eer/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f6cc97bd020" loc="46:../EER/eer/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f6cc9c07980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EerParentSelectionConfig" loc="39:../EER/eer_parentselection/EerParentSelectionConfig.nc">
      <function command="" provided="0" name="addParentCandidate" ref="0x7f6cc979eb48" loc="43:../EER/eer_parentselection/EerParentSelectionConfig.nc">
        <interfacedef-ref qname="EerParentSelectionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc97cb158"/>
                <typename><typedef-ref name="routing_table_entry" ref="0x7f6cc97cb560"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
              <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="entry" ref="0x7f6cc979e568" loc="43:../EER/eer_parentselection/EerParentSelectionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f6cc97cb158"/>
                <typename><typedef-ref name="routing_table_entry" ref="0x7f6cc97cb560"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="candETX" ref="0x7f6cc979e8c8" loc="43:../EER/eer_parentselection/EerParentSelectionConfig.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
              <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRandomParent" ref="0x7f6cc979c290" loc="45:../EER/eer_parentselection/EerParentSelectionConfig.nc">
        <interfacedef-ref qname="EerParentSelectionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6ccafa20c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initializeParentSet" ref="0x7f6cc97a1d68" loc="41:../EER/eer_parentselection/EerParentSelectionConfig.nc">
        <interfacedef-ref qname="EerParentSelectionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParentSetETX" ref="0x7f6cc979b0b8" loc="47:../EER/eer_parentselection/EerParentSelectionConfig.nc">
        <interfacedef-ref qname="EerParentSelectionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parentSetETX" ref="0x7f6cc979ca18" loc="47:../EER/eer_parentselection/EerParentSelectionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
                <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="parentSetSize" ref="0x7f6cc979cde8" loc="47:../EER/eer_parentselection/EerParentSelectionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParentSetSize" ref="0x7f6cc979b7e0" loc="49:../EER/eer_parentselection/EerParentSelectionConfig.nc">
        <interfacedef-ref qname="EerParentSelectionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EerParentSelectionHealth" loc="39:../EER/eer_parentselection/EerParentSelectionHealth.nc">
      <function command="" provided="0" name="getBestNeighborFromParentSet" ref="0x7f6cc9691020" loc="43:../EER/eer_parentselection/EerParentSelectionHealth.nc">
        <interfacedef-ref qname="EerParentSelectionHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_uint16_t" ref="0x7f6ccb55d208"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCandiateSetSize" ref="0x7f6cc9694840" loc="41:../EER/eer_parentselection/EerParentSelectionHealth.nc">
        <interfacedef-ref qname="EerParentSelectionHealth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f6ccb55fb08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/usr/src/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f6cc95bb9f8" loc="49:/usr/src/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f6cc95bb788" loc="49:/usr/src/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6cc95c3c78" loc="50:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f6cc95c3a08" loc="50:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f6cc95bf478" loc="59:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f6cc95be2a0" loc="69:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f6cc95bfca8" loc="69:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f6cc95be020" loc="69:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f6cc95bd020" loc="79:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/muzi/tinyos-main//tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6ccb4651d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6cc95ad050" loc="48:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6cc95b0a88" loc="48:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cc95b0da8" loc="48:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f6cc95aaaa8" loc="79:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f6cc95aa838" loc="79:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f6cc95a8800" loc="90:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6cc95a8260" loc="90:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cc95a8580" loc="90:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f6cc95a9838" loc="65:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f6cc95a6020" loc="99:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6cc95a56e0" loc="99:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cc95a5a00" loc="99:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6cc95a5d28" loc="99:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f6cc95aa0d8" loc="72:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6cc95ac8f8" loc="57:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f6cc95ac020" loc="57:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6cc95ac340" loc="57:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f6ccbaceb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6cc95ac668" loc="57:/home/muzi/tinyos-main//tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/muzi/tinyos-main//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f6cc959fc30" loc="39:/home/muzi/tinyos-main//tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f6cca543180"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f6cca543588"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/muzi/tinyos-main//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/muzi/tinyos-main//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6cc9512070" loc="95:/home/muzi/tinyos-main//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/muzi/tinyos-main//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6cc9512848" loc="105:/home/muzi/tinyos-main//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/muzi/tinyos-main//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/muzi/tinyos-main//tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/muzi/tinyos-main//tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f6cc9456020" loc="62:/home/muzi/tinyos-main//tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/muzi/tinyos-main//tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f6cc93992a0" loc="31:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc939ab70" loc="31:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f6cc9399020" loc="31:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f6cc939b458" loc="15:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f6cc939a2a0" loc="23:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6cc939bc70" loc="23:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:81" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6ccaf95780"/>
                <typename><typedef-ref name="message_t" ref="0x7f6ccaf94cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f6cc939a020" loc="23:/home/muzi/tinyos-main//tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/muzi/tinyos-main//tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f6cc9381968" loc="54:/home/muzi/tinyos-main//tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/muzi/tinyos-main//tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f6cc9381258" loc="49:/home/muzi/tinyos-main//tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/muzi/tinyos-main//tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f6cc9389070" loc="56:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f6cc93883e0" loc="72:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f6cc9386e38" loc="94:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cc9386bc8" loc="94:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f6cc9388bf8" loc="79:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f6cc9389b60" loc="65:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cc93898f0" loc="65:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f6cc9385690" loc="100:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f6cc9386490" loc="85:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/muzi/tinyos-main//tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f6cc9391de0" loc="71:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f6cc93906e0" loc="81:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f6cc93914e0" loc="62:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f6cc9391270" loc="62:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f6cc938f290" loc="91:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6cc938f020" loc="91:/home/muzi/tinyos-main//tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f6cc9393e68" loc="62:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f6cc938ca40" loc="69:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6cc938c7d0" loc="69:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6ccbace790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f6cc938b4f0" loc="80:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6cc938b280" loc="80:/home/muzi/tinyos-main//tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6ccb45dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
